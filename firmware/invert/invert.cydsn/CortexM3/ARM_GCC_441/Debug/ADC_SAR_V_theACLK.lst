ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ADC_SAR_V_theACLK.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 88010000 		.text
  20      02006900 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.ADC_SAR_V_theACLK_Start,"ax",%progbits
  24              		.align	2
  25              		.global	ADC_SAR_V_theACLK_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	ADC_SAR_V_theACLK_Start, %function
  29              	ADC_SAR_V_theACLK_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_V_theACLK.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * File Name: ADC_SAR_V_theACLK.c
   3:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
   8:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  10:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  17:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #include "ADC_SAR_V_theACLK.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  20:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 2


  23:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  27:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  29:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  30:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_Start
  32:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  34:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
  35:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  38:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
  39:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  40:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  41:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
  42:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  43:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  44:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_Start(void) 
  46:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     ADC_SAR_V_theACLK_CLKEN |= ADC_SAR_V_theACLK_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A133 		movw	r3, #:lower16:1073759137
  46 0008 C4F20003 		movt	r3, #:upper16:1073759137
  47 000c 44F2A132 		movw	r2, #:lower16:1073759137
  48 0010 C4F20002 		movt	r2, #:upper16:1073759137
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00202 		orr	r2, r2, #2
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 	ADC_SAR_V_theACLK_CLKSTBY |= ADC_SAR_V_theACLK_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B133 		movw	r3, #:lower16:1073759153
  56 0024 C4F20003 		movt	r3, #:upper16:1073759153
  57 0028 44F2B132 		movw	r2, #:lower16:1073759153
  58 002c C4F20002 		movt	r2, #:upper16:1073759153
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00202 		orr	r2, r2, #2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	ADC_SAR_V_theACLK_Start, .-ADC_SAR_V_theACLK_Start
  71 0042 00BF     		.section	.text.ADC_SAR_V_theACLK_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	ADC_SAR_V_theACLK_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	ADC_SAR_V_theACLK_Stop, %function
  77              	ADC_SAR_V_theACLK_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  52:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  53:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_Stop
  55:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  57:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
  58:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  64:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
  65:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  66:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  67:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
  68:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  69:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  70:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_Stop(void) 
  72:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     ADC_SAR_V_theACLK_CLKEN &= (uint8)(~ADC_SAR_V_theACLK_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A133 		movw	r3, #:lower16:1073759137
  93 0008 C4F20003 		movt	r3, #:upper16:1073759137
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 4


  94 000c 44F2A132 		movw	r2, #:lower16:1073759137
  95 0010 C4F20002 		movt	r2, #:upper16:1073759137
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FD02 		and	r2, r2, #253
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 	ADC_SAR_V_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_V_theACLK_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B133 		movw	r3, #:lower16:1073759153
 102 0022 C4F20003 		movt	r3, #:upper16:1073759153
 103 0026 44F2B132 		movw	r2, #:lower16:1073759153
 104 002a C4F20002 		movt	r2, #:upper16:1073759153
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FD02 		and	r2, r2, #253
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	ADC_SAR_V_theACLK_Stop, .-ADC_SAR_V_theACLK_Stop
 116 003e 00BF     		.section	.text.ADC_SAR_V_theACLK_StandbyPower,"ax",%progbits
 117              		.align	2
 118              		.global	ADC_SAR_V_theACLK_StandbyPower
 119              		.thumb
 120              		.thumb_func
 121              		.type	ADC_SAR_V_theACLK_StandbyPower, %function
 122              	ADC_SAR_V_theACLK_StandbyPower:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  78:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  79:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  81:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
  82:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_StopBlock
  84:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  86:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
  87:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  93:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
  94:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  95:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
  97:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
  98:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_StopBlock(void) 
 101:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 5


 102:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     if ((ADC_SAR_V_theACLK_CLKEN & ADC_SAR_V_theACLK_CLKEN_MASK) != 0u)
 103:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 104:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 107:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if defined(ADC_SAR_V_theACLK__CFG3)
 111:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_V_theACLK_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #else
 114:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_DMASK = ADC_SAR_V_theACLK_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* ADC_SAR_V_theACLK__CFG3 */
 117:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 118:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 120:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 121:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_V_theACLK_DIV_PTR);
 122:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 123:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 125:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_CLKEN &= (uint8)(~ADC_SAR_V_theACLK_CLKEN_MASK);
 131:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_V_theACLK_CLKSTBY_MASK);
 132:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 133:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CLK_DIST_LD = 0x00u;
 136:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         CY_SET_REG16(ADC_SAR_V_theACLK_DIV_PTR, oldDivider);
 137:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 139:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 140:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 142:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 143:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_StandbyPower
 145:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 147:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 148:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 150:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 151:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 153:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 154:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 155:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 156:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 6


 124              		.loc 1 158 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     if(state == 0u)
 141              		.loc 1 159 0
 142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 000c 002B     		cmp	r3, #0
 144 000e 0DD1     		bne	.L6
 160:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 161:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_V_theACLK_CLKSTBY_MASK);
 145              		.loc 1 161 0
 146 0010 44F2B133 		movw	r3, #:lower16:1073759153
 147 0014 C4F20003 		movt	r3, #:upper16:1073759153
 148 0018 44F2B132 		movw	r2, #:lower16:1073759153
 149 001c C4F20002 		movt	r2, #:upper16:1073759153
 150 0020 1278     		ldrb	r2, [r2, #0]
 151 0022 D2B2     		uxtb	r2, r2
 152 0024 02F0FD02 		and	r2, r2, #253
 153 0028 1A70     		strb	r2, [r3, #0]
 154 002a 0DE0     		b	.L8
 155              	.L6:
 162:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 163:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     else
 164:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 165:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_CLKSTBY |= ADC_SAR_V_theACLK_CLKSTBY_MASK;
 156              		.loc 1 165 0
 157 002c 44F2B133 		movw	r3, #:lower16:1073759153
 158 0030 C4F20003 		movt	r3, #:upper16:1073759153
 159 0034 44F2B132 		movw	r2, #:lower16:1073759153
 160 0038 C4F20002 		movt	r2, #:upper16:1073759153
 161 003c 1278     		ldrb	r2, [r2, #0]
 162 003e D2B2     		uxtb	r2, r2
 163 0040 42F00202 		orr	r2, r2, #2
 164 0044 D2B2     		uxtb	r2, r2
 165 0046 1A70     		strb	r2, [r3, #0]
 166              	.L8:
 166:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 167:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 167              		.loc 1 167 0
 168 0048 07F10C07 		add	r7, r7, #12
 169 004c BD46     		mov	sp, r7
 170 004e 80BC     		pop	{r7}
 171 0050 7047     		bx	lr
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 7


 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	ADC_SAR_V_theACLK_StandbyPower, .-ADC_SAR_V_theACLK_StandbyPower
 175 0052 00BF     		.section	.text.ADC_SAR_V_theACLK_SetDividerRegister,"ax",%progbits
 176              		.align	2
 177              		.global	ADC_SAR_V_theACLK_SetDividerRegister
 178              		.thumb
 179              		.thumb_func
 180              		.type	ADC_SAR_V_theACLK_SetDividerRegister, %function
 181              	ADC_SAR_V_theACLK_SetDividerRegister:
 182              	.LFB3:
 168:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 169:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 170:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_SetDividerRegister
 172:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 174:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 175:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 180:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 181:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   cycle.
 188:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 189:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 190:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 191:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 192:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                                 
 195:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 183              		.loc 1 195 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI7:
 189              		.cfi_def_cfa_offset 8
 190 0002 84B0     		sub	sp, sp, #16
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 7, -8
 196              	.LCFI9:
 197              		.cfi_def_cfa_register 7
 198 0006 0246     		mov	r2, r0
 199 0008 0B46     		mov	r3, r1
 200 000a FA80     		strh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 8


 201 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 198:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     uint8 currSrc = ADC_SAR_V_theACLK_GetSourceRegister();
 202              		.loc 1 198 0
 203 000e FFF7FEFF 		bl	ADC_SAR_V_theACLK_GetSourceRegister
 204 0012 0346     		mov	r3, r0
 205 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     uint16 oldDivider = ADC_SAR_V_theACLK_GetDividerRegister();
 206              		.loc 1 199 0
 207 0016 FFF7FEFF 		bl	ADC_SAR_V_theACLK_GetDividerRegister
 208 001a 0346     		mov	r3, r0
 209 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 201:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     if (clkDivider != oldDivider)
 210              		.loc 1 201 0
 211 001e FA88     		ldrh	r2, [r7, #6]
 212 0020 FB89     		ldrh	r3, [r7, #14]
 213 0022 9A42     		cmp	r2, r3
 214 0024 00F0BB80 		beq	.L21
 202:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 203:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         enabled = ADC_SAR_V_theACLK_CLKEN & ADC_SAR_V_theACLK_CLKEN_MASK;
 215              		.loc 1 203 0
 216 0028 44F2A133 		movw	r3, #:lower16:1073759137
 217 002c C4F20003 		movt	r3, #:upper16:1073759137
 218 0030 1B78     		ldrb	r3, [r3, #0]
 219 0032 DBB2     		uxtb	r3, r3
 220 0034 03F00203 		and	r3, r3, #2
 221 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 222              		.loc 1 205 0
 223 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 224 003c 002B     		cmp	r3, #0
 225 003e 31D1     		bne	.L11
 226 0040 FB89     		ldrh	r3, [r7, #14]
 227 0042 002B     		cmp	r3, #0
 228 0044 02D0     		beq	.L12
 229 0046 FB88     		ldrh	r3, [r7, #6]
 230 0048 002B     		cmp	r3, #0
 231 004a 2BD1     		bne	.L11
 232              	.L12:
 206:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         {
 207:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             if (oldDivider == 0u)
 233              		.loc 1 208 0
 234 004c FB89     		ldrh	r3, [r7, #14]
 235 004e 002B     		cmp	r3, #0
 236 0050 13D1     		bne	.L13
 209:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             {
 210:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CY_SET_REG16(ADC_SAR_V_theACLK_DIV_PTR, clkDivider);
 237              		.loc 1 213 0
 238 0052 44F20413 		movw	r3, #:lower16:1073758468
 239 0056 C4F20003 		movt	r3, #:upper16:1073758468
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 9


 240 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 241 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 ADC_SAR_V_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 242              		.loc 1 214 0
 243 005e 44F20613 		movw	r3, #:lower16:1073758470
 244 0062 C4F20003 		movt	r3, #:upper16:1073758470
 245 0066 44F20612 		movw	r2, #:lower16:1073758470
 246 006a C4F20002 		movt	r2, #:upper16:1073758470
 247 006e 1278     		ldrb	r2, [r2, #0]
 248 0070 D2B2     		uxtb	r2, r2
 249 0072 02F0BF02 		and	r2, r2, #191
 250 0076 1A70     		strb	r2, [r3, #0]
 251              		.loc 1 205 0
 252 0078 91E0     		b	.L21
 253              	.L13:
 215:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             }
 216:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             else
 217:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             {
 218:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 ADC_SAR_V_theACLK_MOD_SRC |= CYCLK_SSS;
 254              		.loc 1 220 0
 255 007a 44F20613 		movw	r3, #:lower16:1073758470
 256 007e C4F20003 		movt	r3, #:upper16:1073758470
 257 0082 44F20612 		movw	r2, #:lower16:1073758470
 258 0086 C4F20002 		movt	r2, #:upper16:1073758470
 259 008a 1278     		ldrb	r2, [r2, #0]
 260 008c D2B2     		uxtb	r2, r2
 261 008e 42F04002 		orr	r2, r2, #64
 262 0092 D2B2     		uxtb	r2, r2
 263 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CY_SET_REG16(ADC_SAR_V_theACLK_DIV_PTR, clkDivider);
 264              		.loc 1 221 0
 265 0096 44F20413 		movw	r3, #:lower16:1073758468
 266 009a C4F20003 		movt	r3, #:upper16:1073758468
 267 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 268 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 269              		.loc 1 205 0
 270 00a2 7CE0     		b	.L21
 271              	.L11:
 222:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             }
 223:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         }
 224:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         else
 225:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         {
 226:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 			
 227:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             if (enabled != 0u)
 272              		.loc 1 227 0
 273 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 274 00a6 002B     		cmp	r3, #0
 275 00a8 3BD0     		beq	.L15
 228:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             {
 229:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 276              		.loc 1 229 0
 277 00aa 44F20103 		movw	r3, #:lower16:1073758209
 278 00ae C4F20003 		movt	r3, #:upper16:1073758209
 279 00b2 4FF00002 		mov	r2, #0
 280 00b6 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 10


 230:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if defined(ADC_SAR_V_theACLK__CFG3)
 233:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_V_theACLK_CLKEN_MASK;
 281              		.loc 1 233 0
 282 00b8 44F21403 		movw	r3, #:lower16:1073758228
 283 00bc C4F20003 		movt	r3, #:upper16:1073758228
 284 00c0 4FF00202 		mov	r2, #2
 285 00c4 1A70     		strb	r2, [r3, #0]
 234:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 286              		.loc 1 234 0
 287 00c6 44F21003 		movw	r3, #:lower16:1073758224
 288 00ca C4F20003 		movt	r3, #:upper16:1073758224
 289 00ce 4FF00002 		mov	r2, #0
 290 00d2 1A70     		strb	r2, [r3, #0]
 235:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #else
 236:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_DMASK = ADC_SAR_V_theACLK_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* ADC_SAR_V_theACLK__CFG3 */
 239:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 291              		.loc 1 240 0
 292 00d4 44F20803 		movw	r3, #:lower16:1073758216
 293 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 294 00dc 44F20802 		movw	r2, #:lower16:1073758216
 295 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 296 00e4 1278     		ldrb	r2, [r2, #0]
 297 00e6 D2B2     		uxtb	r2, r2
 298 00e8 02F07F02 		and	r2, r2, #127
 299 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 242:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 if (((ADC_SAR_V_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 300              		.loc 1 243 0
 301 00ee 44F20613 		movw	r3, #:lower16:1073758470
 302 00f2 C4F20003 		movt	r3, #:upper16:1073758470
 303 00f6 1B78     		ldrb	r3, [r3, #0]
 304 00f8 DBB2     		uxtb	r3, r3
 305 00fa 03F00803 		and	r3, r3, #8
 306 00fe 002B     		cmp	r3, #0
 307 0100 02D0     		beq	.L16
 308 0102 FB88     		ldrh	r3, [r7, #6]
 309 0104 002B     		cmp	r3, #0
 310 0106 0CD1     		bne	.L15
 311              	.L16:
 244:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 {
 245:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 249:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     ADC_SAR_V_theACLK_CLKEN &= (uint8)(~ADC_SAR_V_theACLK_CLKEN_MASK);
 312              		.loc 1 253 0
 313 0108 44F2A133 		movw	r3, #:lower16:1073759137
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 11


 314 010c C4F20003 		movt	r3, #:upper16:1073759137
 315 0110 44F2A132 		movw	r2, #:lower16:1073759137
 316 0114 C4F20002 		movt	r2, #:upper16:1073759137
 317 0118 1278     		ldrb	r2, [r2, #0]
 318 011a D2B2     		uxtb	r2, r2
 319 011c 02F0FD02 		and	r2, r2, #253
 320 0120 1A70     		strb	r2, [r3, #0]
 321              	.L15:
 254:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 255:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 }
 260:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             }
 261:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 262:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             if ((ADC_SAR_V_theACLK_CLKEN & ADC_SAR_V_theACLK_CLKEN_MASK) != 0u)
 322              		.loc 1 263 0
 323 0122 44F2A133 		movw	r3, #:lower16:1073759137
 324 0126 C4F20003 		movt	r3, #:upper16:1073759137
 325 012a 1B78     		ldrb	r3, [r3, #0]
 326 012c DBB2     		uxtb	r3, r3
 327 012e 03F00203 		and	r3, r3, #2
 328 0132 002B     		cmp	r3, #0
 329 0134 1ED0     		beq	.L17
 264:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             {
 265:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 330              		.loc 1 266 0
 331 0136 44F20203 		movw	r3, #:lower16:1073758210
 332 013a C4F20003 		movt	r3, #:upper16:1073758210
 333 013e FA88     		ldrh	r2, [r7, #6]	@ movhi
 334 0140 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 335              		.loc 1 268 0
 336 0142 44F20103 		movw	r3, #:lower16:1073758209
 337 0146 C4F20003 		movt	r3, #:upper16:1073758209
 338 014a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 339 014c 002A     		cmp	r2, #0
 340 014e 02D0     		beq	.L18
 341 0150 4FF00302 		mov	r2, #3
 342 0154 01E0     		b	.L19
 343              	.L18:
 344 0156 4FF00102 		mov	r2, #1
 345              	.L19:
 346 015a 1A70     		strb	r2, [r3, #0]
 347              	.L20:
 269:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 348              		.loc 1 269 0
 349 015c 44F20103 		movw	r3, #:lower16:1073758209
 350 0160 C4F20003 		movt	r3, #:upper16:1073758209
 351 0164 1B78     		ldrb	r3, [r3, #0]
 352 0166 DBB2     		uxtb	r3, r3
 353 0168 03F00103 		and	r3, r3, #1
 354 016c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 12


 355 016e 002B     		cmp	r3, #0
 356 0170 F4D1     		bne	.L20
 357 0172 14E0     		b	.L21
 358              	.L17:
 270:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             }
 271:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             else
 272:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             {
 273:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****                 CY_SET_REG16(ADC_SAR_V_theACLK_DIV_PTR, clkDivider);
 359              		.loc 1 274 0
 360 0174 44F20413 		movw	r3, #:lower16:1073758468
 361 0178 C4F20003 		movt	r3, #:upper16:1073758468
 362 017c FA88     		ldrh	r2, [r7, #6]	@ movhi
 363 017e 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 				ADC_SAR_V_theACLK_CLKEN |= enabled;
 364              		.loc 1 275 0
 365 0180 44F2A133 		movw	r3, #:lower16:1073759137
 366 0184 C4F20003 		movt	r3, #:upper16:1073759137
 367 0188 44F2A132 		movw	r2, #:lower16:1073759137
 368 018c C4F20002 		movt	r2, #:upper16:1073759137
 369 0190 1278     		ldrb	r2, [r2, #0]
 370 0192 D1B2     		uxtb	r1, r2
 371 0194 3A7B     		ldrb	r2, [r7, #12]
 372 0196 41EA0202 		orr	r2, r1, r2
 373 019a D2B2     		uxtb	r2, r2
 374 019c 1A70     		strb	r2, [r3, #0]
 375              	.L21:
 276:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             }
 277:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         }
 278:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 279:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 376              		.loc 1 279 0
 377 019e 07F11007 		add	r7, r7, #16
 378 01a2 BD46     		mov	sp, r7
 379 01a4 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE3:
 382              		.size	ADC_SAR_V_theACLK_SetDividerRegister, .-ADC_SAR_V_theACLK_SetDividerRegister
 383 01a6 00BF     		.section	.text.ADC_SAR_V_theACLK_GetDividerRegister,"ax",%progbits
 384              		.align	2
 385              		.global	ADC_SAR_V_theACLK_GetDividerRegister
 386              		.thumb
 387              		.thumb_func
 388              		.type	ADC_SAR_V_theACLK_GetDividerRegister, %function
 389              	ADC_SAR_V_theACLK_GetDividerRegister:
 390              	.LFB4:
 280:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 281:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 282:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_GetDividerRegister
 284:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 287:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 290:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 13


 291:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 292:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 293:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 296:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** uint16 ADC_SAR_V_theACLK_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 391              		.loc 1 298 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              	.LCFI10:
 398              		.cfi_def_cfa_offset 4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_offset 7, -4
 401              	.LCFI11:
 402              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     return CY_GET_REG16(ADC_SAR_V_theACLK_DIV_PTR);
 403              		.loc 1 299 0
 404 0004 44F20413 		movw	r3, #:lower16:1073758468
 405 0008 C4F20003 		movt	r3, #:upper16:1073758468
 406 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 407 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 408              		.loc 1 300 0
 409 0010 1846     		mov	r0, r3
 410 0012 BD46     		mov	sp, r7
 411 0014 80BC     		pop	{r7}
 412 0016 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE4:
 415              		.size	ADC_SAR_V_theACLK_GetDividerRegister, .-ADC_SAR_V_theACLK_GetDividerRegister
 416              		.section	.text.ADC_SAR_V_theACLK_SetModeRegister,"ax",%progbits
 417              		.align	2
 418              		.global	ADC_SAR_V_theACLK_SetModeRegister
 419              		.thumb
 420              		.thumb_func
 421              		.type	ADC_SAR_V_theACLK_SetModeRegister, %function
 422              	ADC_SAR_V_theACLK_SetModeRegister:
 423              	.LFB5:
 301:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 302:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_SetModeRegister
 305:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 307:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 308:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 313:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 314:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 14


 315:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 value.
 319:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 328:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 329:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 330:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 331:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 424              		.loc 1 333 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI12:
 431              		.cfi_def_cfa_offset 4
 432 0002 83B0     		sub	sp, sp, #12
 433              	.LCFI13:
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_offset 7, -4
 437              	.LCFI14:
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     ADC_SAR_V_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_V_theACLK_MODE_MASK;
 441              		.loc 1 334 0
 442 000a 44F20613 		movw	r3, #:lower16:1073758470
 443 000e C4F20003 		movt	r3, #:upper16:1073758470
 444 0012 44F20612 		movw	r2, #:lower16:1073758470
 445 0016 C4F20002 		movt	r2, #:upper16:1073758470
 446 001a 1278     		ldrb	r2, [r2, #0]
 447 001c D2B2     		uxtb	r2, r2
 448 001e 1146     		mov	r1, r2
 449 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 450 0022 D2B2     		uxtb	r2, r2
 451 0024 02F0F802 		and	r2, r2, #248
 452 0028 41EA0202 		orr	r2, r1, r2
 453 002c D2B2     		uxtb	r2, r2
 454 002e D2B2     		uxtb	r2, r2
 455 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 456              		.loc 1 335 0
 457 0032 07F10C07 		add	r7, r7, #12
 458 0036 BD46     		mov	sp, r7
 459 0038 80BC     		pop	{r7}
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 15


 460 003a 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE5:
 463              		.size	ADC_SAR_V_theACLK_SetModeRegister, .-ADC_SAR_V_theACLK_SetModeRegister
 464              		.section	.text.ADC_SAR_V_theACLK_ClearModeRegister,"ax",%progbits
 465              		.align	2
 466              		.global	ADC_SAR_V_theACLK_ClearModeRegister
 467              		.thumb
 468              		.thumb_func
 469              		.type	ADC_SAR_V_theACLK_ClearModeRegister, %function
 470              	ADC_SAR_V_theACLK_ClearModeRegister:
 471              	.LFB6:
 336:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 337:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 338:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_ClearModeRegister
 340:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 342:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 343:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 348:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 349:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 value.
 354:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 363:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 365:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 366:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 472              		.loc 1 368 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              	.LCFI15:
 479              		.cfi_def_cfa_offset 4
 480 0002 83B0     		sub	sp, sp, #12
 481              	.LCFI16:
 482              		.cfi_def_cfa_offset 16
 483 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 16


 484              		.cfi_offset 7, -4
 485              	.LCFI17:
 486              		.cfi_def_cfa_register 7
 487 0006 0346     		mov	r3, r0
 488 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     ADC_SAR_V_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_V_theACLK_MODE_MA
 489              		.loc 1 369 0
 490 000a 44F20613 		movw	r3, #:lower16:1073758470
 491 000e C4F20003 		movt	r3, #:upper16:1073758470
 492 0012 44F20612 		movw	r2, #:lower16:1073758470
 493 0016 C4F20002 		movt	r2, #:upper16:1073758470
 494 001a 1278     		ldrb	r2, [r2, #0]
 495 001c D1B2     		uxtb	r1, r2
 496 001e FA79     		ldrb	r2, [r7, #7]
 497 0020 6FEA0202 		mvn	r2, r2
 498 0024 D2B2     		uxtb	r2, r2
 499 0026 42F00702 		orr	r2, r2, #7
 500 002a D2B2     		uxtb	r2, r2
 501 002c 01EA0202 		and	r2, r1, r2
 502 0030 D2B2     		uxtb	r2, r2
 503 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 504              		.loc 1 370 0
 505 0034 07F10C07 		add	r7, r7, #12
 506 0038 BD46     		mov	sp, r7
 507 003a 80BC     		pop	{r7}
 508 003c 7047     		bx	lr
 509              		.cfi_endproc
 510              	.LFE6:
 511              		.size	ADC_SAR_V_theACLK_ClearModeRegister, .-ADC_SAR_V_theACLK_ClearModeRegister
 512 003e 00BF     		.section	.text.ADC_SAR_V_theACLK_GetModeRegister,"ax",%progbits
 513              		.align	2
 514              		.global	ADC_SAR_V_theACLK_GetModeRegister
 515              		.thumb
 516              		.thumb_func
 517              		.type	ADC_SAR_V_theACLK_GetModeRegister, %function
 518              	ADC_SAR_V_theACLK_GetModeRegister:
 519              	.LFB7:
 371:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 373:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_GetModeRegister
 375:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 377:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 380:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 381:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 382:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 383:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 384:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 387:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** uint8 ADC_SAR_V_theACLK_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 17


 520              		.loc 1 389 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              	.LCFI18:
 527              		.cfi_def_cfa_offset 4
 528 0002 00AF     		add	r7, sp, #0
 529              		.cfi_offset 7, -4
 530              	.LCFI19:
 531              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     return ADC_SAR_V_theACLK_MOD_SRC & (uint8)(ADC_SAR_V_theACLK_MODE_MASK);
 532              		.loc 1 390 0
 533 0004 44F20613 		movw	r3, #:lower16:1073758470
 534 0008 C4F20003 		movt	r3, #:upper16:1073758470
 535 000c 1B78     		ldrb	r3, [r3, #0]
 536 000e DBB2     		uxtb	r3, r3
 537 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 538              		.loc 1 391 0
 539 0014 1846     		mov	r0, r3
 540 0016 BD46     		mov	sp, r7
 541 0018 80BC     		pop	{r7}
 542 001a 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE7:
 545              		.size	ADC_SAR_V_theACLK_GetModeRegister, .-ADC_SAR_V_theACLK_GetModeRegister
 546              		.section	.text.ADC_SAR_V_theACLK_SetSourceRegister,"ax",%progbits
 547              		.align	2
 548              		.global	ADC_SAR_V_theACLK_SetSourceRegister
 549              		.thumb
 550              		.thumb_func
 551              		.type	ADC_SAR_V_theACLK_SetSourceRegister, %function
 552              	ADC_SAR_V_theACLK_SetSourceRegister:
 553              	.LFB8:
 392:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 393:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 394:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_SetSourceRegister
 396:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 398:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 399:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 402:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 403:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 18


 413:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 415:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 416:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 417:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 418:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 554              		.loc 1 420 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 16
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558 0000 80B5     		push	{r7, lr}
 559              	.LCFI20:
 560              		.cfi_def_cfa_offset 8
 561 0002 84B0     		sub	sp, sp, #16
 562              	.LCFI21:
 563              		.cfi_def_cfa_offset 24
 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_offset 14, -4
 566              		.cfi_offset 7, -8
 567              	.LCFI22:
 568              		.cfi_def_cfa_register 7
 569 0006 0346     		mov	r3, r0
 570 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     uint16 currDiv = ADC_SAR_V_theACLK_GetDividerRegister();
 571              		.loc 1 421 0
 572 000a FFF7FEFF 		bl	ADC_SAR_V_theACLK_GetDividerRegister
 573 000e 0346     		mov	r3, r0
 574 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     uint8 oldSrc = ADC_SAR_V_theACLK_GetSourceRegister();
 575              		.loc 1 422 0
 576 0012 FFF7FEFF 		bl	ADC_SAR_V_theACLK_GetSourceRegister
 577 0016 0346     		mov	r3, r0
 578 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 424:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 579              		.loc 1 424 0
 580 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 581 001c 002B     		cmp	r3, #0
 582 001e 29D0     		beq	.L31
 583 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 0022 002B     		cmp	r3, #0
 585 0024 26D1     		bne	.L31
 586 0026 BB89     		ldrh	r3, [r7, #12]
 587 0028 002B     		cmp	r3, #0
 588 002a 23D1     		bne	.L31
 425:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 427:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_MOD_SRC |= CYCLK_SSS;
 589              		.loc 1 429 0
 590 002c 44F20613 		movw	r3, #:lower16:1073758470
 591 0030 C4F20003 		movt	r3, #:upper16:1073758470
 592 0034 44F20612 		movw	r2, #:lower16:1073758470
 593 0038 C4F20002 		movt	r2, #:upper16:1073758470
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 19


 594 003c 1278     		ldrb	r2, [r2, #0]
 595 003e D2B2     		uxtb	r2, r2
 596 0040 42F04002 		orr	r2, r2, #64
 597 0044 D2B2     		uxtb	r2, r2
 598 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_MOD_SRC =
 599              		.loc 1 430 0
 600 0048 44F20613 		movw	r3, #:lower16:1073758470
 601 004c C4F20003 		movt	r3, #:upper16:1073758470
 431:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             (ADC_SAR_V_theACLK_MOD_SRC & (uint8)(~ADC_SAR_V_theACLK_SRC_SEL_MSK)) | clkSource;
 602              		.loc 1 431 0
 603 0050 44F20612 		movw	r2, #:lower16:1073758470
 604 0054 C4F20002 		movt	r2, #:upper16:1073758470
 605 0058 1278     		ldrb	r2, [r2, #0]
 606 005a D2B2     		uxtb	r2, r2
 607              		.loc 1 430 0
 608 005c D2B2     		uxtb	r2, r2
 609 005e 02F0F802 		and	r2, r2, #248
 610 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 611 0064 1146     		mov	r1, r2
 612 0066 0246     		mov	r2, r0
 613 0068 41EA0202 		orr	r2, r1, r2
 614 006c D2B2     		uxtb	r2, r2
 615 006e D2B2     		uxtb	r2, r2
 616 0070 1A70     		strb	r2, [r3, #0]
 617              		.loc 1 424 0
 618 0072 40E0     		b	.L34
 619              	.L31:
 432:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 433:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 620              		.loc 1 433 0
 621 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 622 0076 002B     		cmp	r3, #0
 623 0078 28D1     		bne	.L33
 624 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 625 007c 002B     		cmp	r3, #0
 626 007e 25D0     		beq	.L33
 627 0080 BB89     		ldrh	r3, [r7, #12]
 628 0082 002B     		cmp	r3, #0
 629 0084 22D1     		bne	.L33
 434:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 436:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_MOD_SRC =
 630              		.loc 1 438 0
 631 0086 44F20613 		movw	r3, #:lower16:1073758470
 632 008a C4F20003 		movt	r3, #:upper16:1073758470
 439:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             (ADC_SAR_V_theACLK_MOD_SRC & (uint8)(~ADC_SAR_V_theACLK_SRC_SEL_MSK)) | clkSource;
 633              		.loc 1 439 0
 634 008e 44F20612 		movw	r2, #:lower16:1073758470
 635 0092 C4F20002 		movt	r2, #:upper16:1073758470
 636 0096 1278     		ldrb	r2, [r2, #0]
 637 0098 D2B2     		uxtb	r2, r2
 638              		.loc 1 438 0
 639 009a D2B2     		uxtb	r2, r2
 640 009c 02F0F802 		and	r2, r2, #248
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 20


 641 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 642 00a2 1146     		mov	r1, r2
 643 00a4 0246     		mov	r2, r0
 644 00a6 41EA0202 		orr	r2, r1, r2
 645 00aa D2B2     		uxtb	r2, r2
 646 00ac D2B2     		uxtb	r2, r2
 647 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 648              		.loc 1 440 0
 649 00b0 44F20613 		movw	r3, #:lower16:1073758470
 650 00b4 C4F20003 		movt	r3, #:upper16:1073758470
 651 00b8 44F20612 		movw	r2, #:lower16:1073758470
 652 00bc C4F20002 		movt	r2, #:upper16:1073758470
 653 00c0 1278     		ldrb	r2, [r2, #0]
 654 00c2 D2B2     		uxtb	r2, r2
 655 00c4 02F0BF02 		and	r2, r2, #191
 656 00c8 1A70     		strb	r2, [r3, #0]
 657              		.loc 1 433 0
 658 00ca 14E0     		b	.L34
 659              	.L33:
 441:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 442:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     else
 443:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     {
 444:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****         ADC_SAR_V_theACLK_MOD_SRC =
 660              		.loc 1 444 0
 661 00cc 44F20613 		movw	r3, #:lower16:1073758470
 662 00d0 C4F20003 		movt	r3, #:upper16:1073758470
 445:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****             (ADC_SAR_V_theACLK_MOD_SRC & (uint8)(~ADC_SAR_V_theACLK_SRC_SEL_MSK)) | clkSource;
 663              		.loc 1 445 0
 664 00d4 44F20612 		movw	r2, #:lower16:1073758470
 665 00d8 C4F20002 		movt	r2, #:upper16:1073758470
 666 00dc 1278     		ldrb	r2, [r2, #0]
 667 00de D2B2     		uxtb	r2, r2
 668              		.loc 1 444 0
 669 00e0 D2B2     		uxtb	r2, r2
 670 00e2 02F0F802 		and	r2, r2, #248
 671 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 672 00e8 1146     		mov	r1, r2
 673 00ea 0246     		mov	r2, r0
 674 00ec 41EA0202 		orr	r2, r1, r2
 675 00f0 D2B2     		uxtb	r2, r2
 676 00f2 D2B2     		uxtb	r2, r2
 677 00f4 1A70     		strb	r2, [r3, #0]
 678              	.L34:
 446:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     }
 447:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 679              		.loc 1 447 0
 680 00f6 07F11007 		add	r7, r7, #16
 681 00fa BD46     		mov	sp, r7
 682 00fc 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE8:
 685              		.size	ADC_SAR_V_theACLK_SetSourceRegister, .-ADC_SAR_V_theACLK_SetSourceRegister
 686 00fe 00BF     		.section	.text.ADC_SAR_V_theACLK_GetSourceRegister,"ax",%progbits
 687              		.align	2
 688              		.global	ADC_SAR_V_theACLK_GetSourceRegister
 689              		.thumb
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 21


 690              		.thumb_func
 691              		.type	ADC_SAR_V_theACLK_GetSourceRegister, %function
 692              	ADC_SAR_V_theACLK_GetSourceRegister:
 693              	.LFB9:
 448:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_GetSourceRegister
 452:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 457:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 458:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 459:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 460:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 461:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 463:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** uint8 ADC_SAR_V_theACLK_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 694              		.loc 1 465 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI23:
 701              		.cfi_def_cfa_offset 4
 702 0002 00AF     		add	r7, sp, #0
 703              		.cfi_offset 7, -4
 704              	.LCFI24:
 705              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     return ADC_SAR_V_theACLK_MOD_SRC & ADC_SAR_V_theACLK_SRC_SEL_MSK;
 706              		.loc 1 466 0
 707 0004 44F20613 		movw	r3, #:lower16:1073758470
 708 0008 C4F20003 		movt	r3, #:upper16:1073758470
 709 000c 1B78     		ldrb	r3, [r3, #0]
 710 000e DBB2     		uxtb	r3, r3
 711 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 712              		.loc 1 467 0
 713 0014 1846     		mov	r0, r3
 714 0016 BD46     		mov	sp, r7
 715 0018 80BC     		pop	{r7}
 716 001a 7047     		bx	lr
 717              		.cfi_endproc
 718              	.LFE9:
 719              		.size	ADC_SAR_V_theACLK_GetSourceRegister, .-ADC_SAR_V_theACLK_GetSourceRegister
 720              		.section	.text.ADC_SAR_V_theACLK_SetPhaseRegister,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_SAR_V_theACLK_SetPhaseRegister
 723              		.thumb
 724              		.thumb_func
 725              		.type	ADC_SAR_V_theACLK_SetPhaseRegister, %function
 726              	ADC_SAR_V_theACLK_SetPhaseRegister:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 22


 727              	.LFB10:
 468:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 469:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 470:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** #if defined(ADC_SAR_V_theACLK__CFG3)
 471:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 472:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 473:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_SetPhaseRegister
 475:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 477:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 478:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 482:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 483:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 488:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 489:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 490:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 491:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 492:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** void ADC_SAR_V_theACLK_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 728              		.loc 1 493 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 8
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              	.LCFI25:
 735              		.cfi_def_cfa_offset 4
 736 0002 83B0     		sub	sp, sp, #12
 737              	.LCFI26:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              		.cfi_offset 7, -4
 741              	.LCFI27:
 742              		.cfi_def_cfa_register 7
 743 0006 0346     		mov	r3, r0
 744 0008 FB71     		strb	r3, [r7, #7]
 494:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     ADC_SAR_V_theACLK_PHASE = clkPhase & ADC_SAR_V_theACLK_PHASE_MASK;
 745              		.loc 1 494 0
 746 000a 44F20713 		movw	r3, #:lower16:1073758471
 747 000e C4F20003 		movt	r3, #:upper16:1073758471
 748 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 749 0014 02F00F02 		and	r2, r2, #15
 750 0018 1A70     		strb	r2, [r3, #0]
 495:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 751              		.loc 1 495 0
 752 001a 07F10C07 		add	r7, r7, #12
 753 001e BD46     		mov	sp, r7
 754 0020 80BC     		pop	{r7}
 755 0022 7047     		bx	lr
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 23


 756              		.cfi_endproc
 757              	.LFE10:
 758              		.size	ADC_SAR_V_theACLK_SetPhaseRegister, .-ADC_SAR_V_theACLK_SetPhaseRegister
 759              		.section	.text.ADC_SAR_V_theACLK_GetPhaseRegister,"ax",%progbits
 760              		.align	2
 761              		.global	ADC_SAR_V_theACLK_GetPhaseRegister
 762              		.thumb
 763              		.thumb_func
 764              		.type	ADC_SAR_V_theACLK_GetPhaseRegister, %function
 765              	ADC_SAR_V_theACLK_GetPhaseRegister:
 766              	.LFB11:
 496:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 497:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** 
 498:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Function Name: ADC_SAR_V_theACLK_GetPhase
 500:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 502:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Summary:
 503:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  None
 508:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** * Returns:
 510:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** uint8 ADC_SAR_V_theACLK_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** {
 767              		.loc 1 514 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              	.LCFI28:
 774              		.cfi_def_cfa_offset 4
 775 0002 00AF     		add	r7, sp, #0
 776              		.cfi_offset 7, -4
 777              	.LCFI29:
 778              		.cfi_def_cfa_register 7
 515:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c ****     return ADC_SAR_V_theACLK_PHASE & ADC_SAR_V_theACLK_PHASE_MASK;
 779              		.loc 1 515 0
 780 0004 44F20713 		movw	r3, #:lower16:1073758471
 781 0008 C4F20003 		movt	r3, #:upper16:1073758471
 782 000c 1B78     		ldrb	r3, [r3, #0]
 783 000e DBB2     		uxtb	r3, r3
 784 0010 03F00F03 		and	r3, r3, #15
 516:.\Generated_Source\PSoC5/ADC_SAR_V_theACLK.c **** }
 785              		.loc 1 516 0
 786 0014 1846     		mov	r0, r3
 787 0016 BD46     		mov	sp, r7
 788 0018 80BC     		pop	{r7}
 789 001a 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE11:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 24


 792              		.size	ADC_SAR_V_theACLK_GetPhaseRegister, .-ADC_SAR_V_theACLK_GetPhaseRegister
 793              		.text
 794              	.Letext0:
 795              		.section	.debug_loc,"",%progbits
 796              	.Ldebug_loc0:
 797              	.LLST0:
 798 0000 00000000 		.4byte	.LFB0
 799 0004 02000000 		.4byte	.LCFI0
 800 0008 0100     		.2byte	0x1
 801 000a 5D       		.byte	0x5d
 802 000b 02000000 		.4byte	.LCFI0
 803 000f 04000000 		.4byte	.LCFI1
 804 0013 0200     		.2byte	0x2
 805 0015 7D       		.byte	0x7d
 806 0016 04       		.sleb128 4
 807 0017 04000000 		.4byte	.LCFI1
 808 001b 42000000 		.4byte	.LFE0
 809 001f 0200     		.2byte	0x2
 810 0021 77       		.byte	0x77
 811 0022 04       		.sleb128 4
 812 0023 00000000 		.4byte	0x0
 813 0027 00000000 		.4byte	0x0
 814              	.LLST1:
 815 002b 00000000 		.4byte	.LFB1
 816 002f 02000000 		.4byte	.LCFI2
 817 0033 0100     		.2byte	0x1
 818 0035 5D       		.byte	0x5d
 819 0036 02000000 		.4byte	.LCFI2
 820 003a 04000000 		.4byte	.LCFI3
 821 003e 0200     		.2byte	0x2
 822 0040 7D       		.byte	0x7d
 823 0041 04       		.sleb128 4
 824 0042 04000000 		.4byte	.LCFI3
 825 0046 3E000000 		.4byte	.LFE1
 826 004a 0200     		.2byte	0x2
 827 004c 77       		.byte	0x77
 828 004d 04       		.sleb128 4
 829 004e 00000000 		.4byte	0x0
 830 0052 00000000 		.4byte	0x0
 831              	.LLST2:
 832 0056 00000000 		.4byte	.LFB2
 833 005a 02000000 		.4byte	.LCFI4
 834 005e 0100     		.2byte	0x1
 835 0060 5D       		.byte	0x5d
 836 0061 02000000 		.4byte	.LCFI4
 837 0065 04000000 		.4byte	.LCFI5
 838 0069 0200     		.2byte	0x2
 839 006b 7D       		.byte	0x7d
 840 006c 04       		.sleb128 4
 841 006d 04000000 		.4byte	.LCFI5
 842 0071 06000000 		.4byte	.LCFI6
 843 0075 0200     		.2byte	0x2
 844 0077 7D       		.byte	0x7d
 845 0078 10       		.sleb128 16
 846 0079 06000000 		.4byte	.LCFI6
 847 007d 52000000 		.4byte	.LFE2
 848 0081 0200     		.2byte	0x2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 25


 849 0083 77       		.byte	0x77
 850 0084 10       		.sleb128 16
 851 0085 00000000 		.4byte	0x0
 852 0089 00000000 		.4byte	0x0
 853              	.LLST3:
 854 008d 00000000 		.4byte	.LFB3
 855 0091 02000000 		.4byte	.LCFI7
 856 0095 0100     		.2byte	0x1
 857 0097 5D       		.byte	0x5d
 858 0098 02000000 		.4byte	.LCFI7
 859 009c 04000000 		.4byte	.LCFI8
 860 00a0 0200     		.2byte	0x2
 861 00a2 7D       		.byte	0x7d
 862 00a3 08       		.sleb128 8
 863 00a4 04000000 		.4byte	.LCFI8
 864 00a8 06000000 		.4byte	.LCFI9
 865 00ac 0200     		.2byte	0x2
 866 00ae 7D       		.byte	0x7d
 867 00af 18       		.sleb128 24
 868 00b0 06000000 		.4byte	.LCFI9
 869 00b4 A6010000 		.4byte	.LFE3
 870 00b8 0200     		.2byte	0x2
 871 00ba 77       		.byte	0x77
 872 00bb 18       		.sleb128 24
 873 00bc 00000000 		.4byte	0x0
 874 00c0 00000000 		.4byte	0x0
 875              	.LLST4:
 876 00c4 00000000 		.4byte	.LFB4
 877 00c8 02000000 		.4byte	.LCFI10
 878 00cc 0100     		.2byte	0x1
 879 00ce 5D       		.byte	0x5d
 880 00cf 02000000 		.4byte	.LCFI10
 881 00d3 04000000 		.4byte	.LCFI11
 882 00d7 0200     		.2byte	0x2
 883 00d9 7D       		.byte	0x7d
 884 00da 04       		.sleb128 4
 885 00db 04000000 		.4byte	.LCFI11
 886 00df 18000000 		.4byte	.LFE4
 887 00e3 0200     		.2byte	0x2
 888 00e5 77       		.byte	0x77
 889 00e6 04       		.sleb128 4
 890 00e7 00000000 		.4byte	0x0
 891 00eb 00000000 		.4byte	0x0
 892              	.LLST5:
 893 00ef 00000000 		.4byte	.LFB5
 894 00f3 02000000 		.4byte	.LCFI12
 895 00f7 0100     		.2byte	0x1
 896 00f9 5D       		.byte	0x5d
 897 00fa 02000000 		.4byte	.LCFI12
 898 00fe 04000000 		.4byte	.LCFI13
 899 0102 0200     		.2byte	0x2
 900 0104 7D       		.byte	0x7d
 901 0105 04       		.sleb128 4
 902 0106 04000000 		.4byte	.LCFI13
 903 010a 06000000 		.4byte	.LCFI14
 904 010e 0200     		.2byte	0x2
 905 0110 7D       		.byte	0x7d
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 26


 906 0111 10       		.sleb128 16
 907 0112 06000000 		.4byte	.LCFI14
 908 0116 3C000000 		.4byte	.LFE5
 909 011a 0200     		.2byte	0x2
 910 011c 77       		.byte	0x77
 911 011d 10       		.sleb128 16
 912 011e 00000000 		.4byte	0x0
 913 0122 00000000 		.4byte	0x0
 914              	.LLST6:
 915 0126 00000000 		.4byte	.LFB6
 916 012a 02000000 		.4byte	.LCFI15
 917 012e 0100     		.2byte	0x1
 918 0130 5D       		.byte	0x5d
 919 0131 02000000 		.4byte	.LCFI15
 920 0135 04000000 		.4byte	.LCFI16
 921 0139 0200     		.2byte	0x2
 922 013b 7D       		.byte	0x7d
 923 013c 04       		.sleb128 4
 924 013d 04000000 		.4byte	.LCFI16
 925 0141 06000000 		.4byte	.LCFI17
 926 0145 0200     		.2byte	0x2
 927 0147 7D       		.byte	0x7d
 928 0148 10       		.sleb128 16
 929 0149 06000000 		.4byte	.LCFI17
 930 014d 3E000000 		.4byte	.LFE6
 931 0151 0200     		.2byte	0x2
 932 0153 77       		.byte	0x77
 933 0154 10       		.sleb128 16
 934 0155 00000000 		.4byte	0x0
 935 0159 00000000 		.4byte	0x0
 936              	.LLST7:
 937 015d 00000000 		.4byte	.LFB7
 938 0161 02000000 		.4byte	.LCFI18
 939 0165 0100     		.2byte	0x1
 940 0167 5D       		.byte	0x5d
 941 0168 02000000 		.4byte	.LCFI18
 942 016c 04000000 		.4byte	.LCFI19
 943 0170 0200     		.2byte	0x2
 944 0172 7D       		.byte	0x7d
 945 0173 04       		.sleb128 4
 946 0174 04000000 		.4byte	.LCFI19
 947 0178 1C000000 		.4byte	.LFE7
 948 017c 0200     		.2byte	0x2
 949 017e 77       		.byte	0x77
 950 017f 04       		.sleb128 4
 951 0180 00000000 		.4byte	0x0
 952 0184 00000000 		.4byte	0x0
 953              	.LLST8:
 954 0188 00000000 		.4byte	.LFB8
 955 018c 02000000 		.4byte	.LCFI20
 956 0190 0100     		.2byte	0x1
 957 0192 5D       		.byte	0x5d
 958 0193 02000000 		.4byte	.LCFI20
 959 0197 04000000 		.4byte	.LCFI21
 960 019b 0200     		.2byte	0x2
 961 019d 7D       		.byte	0x7d
 962 019e 08       		.sleb128 8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 27


 963 019f 04000000 		.4byte	.LCFI21
 964 01a3 06000000 		.4byte	.LCFI22
 965 01a7 0200     		.2byte	0x2
 966 01a9 7D       		.byte	0x7d
 967 01aa 18       		.sleb128 24
 968 01ab 06000000 		.4byte	.LCFI22
 969 01af FE000000 		.4byte	.LFE8
 970 01b3 0200     		.2byte	0x2
 971 01b5 77       		.byte	0x77
 972 01b6 18       		.sleb128 24
 973 01b7 00000000 		.4byte	0x0
 974 01bb 00000000 		.4byte	0x0
 975              	.LLST9:
 976 01bf 00000000 		.4byte	.LFB9
 977 01c3 02000000 		.4byte	.LCFI23
 978 01c7 0100     		.2byte	0x1
 979 01c9 5D       		.byte	0x5d
 980 01ca 02000000 		.4byte	.LCFI23
 981 01ce 04000000 		.4byte	.LCFI24
 982 01d2 0200     		.2byte	0x2
 983 01d4 7D       		.byte	0x7d
 984 01d5 04       		.sleb128 4
 985 01d6 04000000 		.4byte	.LCFI24
 986 01da 1C000000 		.4byte	.LFE9
 987 01de 0200     		.2byte	0x2
 988 01e0 77       		.byte	0x77
 989 01e1 04       		.sleb128 4
 990 01e2 00000000 		.4byte	0x0
 991 01e6 00000000 		.4byte	0x0
 992              	.LLST10:
 993 01ea 00000000 		.4byte	.LFB10
 994 01ee 02000000 		.4byte	.LCFI25
 995 01f2 0100     		.2byte	0x1
 996 01f4 5D       		.byte	0x5d
 997 01f5 02000000 		.4byte	.LCFI25
 998 01f9 04000000 		.4byte	.LCFI26
 999 01fd 0200     		.2byte	0x2
 1000 01ff 7D       		.byte	0x7d
 1001 0200 04       		.sleb128 4
 1002 0201 04000000 		.4byte	.LCFI26
 1003 0205 06000000 		.4byte	.LCFI27
 1004 0209 0200     		.2byte	0x2
 1005 020b 7D       		.byte	0x7d
 1006 020c 10       		.sleb128 16
 1007 020d 06000000 		.4byte	.LCFI27
 1008 0211 24000000 		.4byte	.LFE10
 1009 0215 0200     		.2byte	0x2
 1010 0217 77       		.byte	0x77
 1011 0218 10       		.sleb128 16
 1012 0219 00000000 		.4byte	0x0
 1013 021d 00000000 		.4byte	0x0
 1014              	.LLST11:
 1015 0221 00000000 		.4byte	.LFB11
 1016 0225 02000000 		.4byte	.LCFI28
 1017 0229 0100     		.2byte	0x1
 1018 022b 5D       		.byte	0x5d
 1019 022c 02000000 		.4byte	.LCFI28
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 28


 1020 0230 04000000 		.4byte	.LCFI29
 1021 0234 0200     		.2byte	0x2
 1022 0236 7D       		.byte	0x7d
 1023 0237 04       		.sleb128 4
 1024 0238 04000000 		.4byte	.LCFI29
 1025 023c 1C000000 		.4byte	.LFE11
 1026 0240 0200     		.2byte	0x2
 1027 0242 77       		.byte	0x77
 1028 0243 04       		.sleb128 4
 1029 0244 00000000 		.4byte	0x0
 1030 0248 00000000 		.4byte	0x0
 1031              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1032              		.section	.debug_info
 1033 0000 77020000 		.4byte	0x277
 1034 0004 0200     		.2byte	0x2
 1035 0006 00000000 		.4byte	.Ldebug_abbrev0
 1036 000a 04       		.byte	0x4
 1037 000b 01       		.uleb128 0x1
 1038 000c 51020000 		.4byte	.LASF37
 1039 0010 01       		.byte	0x1
 1040 0011 88000000 		.4byte	.LASF38
 1041 0015 77010000 		.4byte	.LASF39
 1042 0019 00000000 		.4byte	0x0
 1043 001d 00000000 		.4byte	0x0
 1044 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1045 0025 00000000 		.4byte	.Ldebug_line0
 1046 0029 02       		.uleb128 0x2
 1047 002a 01       		.byte	0x1
 1048 002b 06       		.byte	0x6
 1049 002c FD020000 		.4byte	.LASF0
 1050 0030 02       		.uleb128 0x2
 1051 0031 01       		.byte	0x1
 1052 0032 08       		.byte	0x8
 1053 0033 D2000000 		.4byte	.LASF1
 1054 0037 02       		.uleb128 0x2
 1055 0038 02       		.byte	0x2
 1056 0039 05       		.byte	0x5
 1057 003a 89020000 		.4byte	.LASF2
 1058 003e 02       		.uleb128 0x2
 1059 003f 02       		.byte	0x2
 1060 0040 07       		.byte	0x7
 1061 0041 FA000000 		.4byte	.LASF3
 1062 0045 02       		.uleb128 0x2
 1063 0046 04       		.byte	0x4
 1064 0047 05       		.byte	0x5
 1065 0048 BD020000 		.4byte	.LASF4
 1066 004c 02       		.uleb128 0x2
 1067 004d 04       		.byte	0x4
 1068 004e 07       		.byte	0x7
 1069 004f E8000000 		.4byte	.LASF5
 1070 0053 02       		.uleb128 0x2
 1071 0054 08       		.byte	0x8
 1072 0055 05       		.byte	0x5
 1073 0056 00000000 		.4byte	.LASF6
 1074 005a 02       		.uleb128 0x2
 1075 005b 08       		.byte	0x8
 1076 005c 07       		.byte	0x7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 29


 1077 005d E8010000 		.4byte	.LASF7
 1078 0061 03       		.uleb128 0x3
 1079 0062 04       		.byte	0x4
 1080 0063 05       		.byte	0x5
 1081 0064 696E7400 		.ascii	"int\000"
 1082 0068 02       		.uleb128 0x2
 1083 0069 04       		.byte	0x4
 1084 006a 07       		.byte	0x7
 1085 006b BB010000 		.4byte	.LASF8
 1086 006f 04       		.uleb128 0x4
 1087 0070 93020000 		.4byte	.LASF9
 1088 0074 02       		.byte	0x2
 1089 0075 4C       		.byte	0x4c
 1090 0076 30000000 		.4byte	0x30
 1091 007a 04       		.uleb128 0x4
 1092 007b 70010000 		.4byte	.LASF10
 1093 007f 02       		.byte	0x2
 1094 0080 4D       		.byte	0x4d
 1095 0081 3E000000 		.4byte	0x3e
 1096 0085 02       		.uleb128 0x2
 1097 0086 04       		.byte	0x4
 1098 0087 04       		.byte	0x4
 1099 0088 CC000000 		.4byte	.LASF11
 1100 008c 02       		.uleb128 0x2
 1101 008d 08       		.byte	0x8
 1102 008e 04       		.byte	0x4
 1103 008f 61010000 		.4byte	.LASF12
 1104 0093 02       		.uleb128 0x2
 1105 0094 01       		.byte	0x1
 1106 0095 08       		.byte	0x8
 1107 0096 7C020000 		.4byte	.LASF13
 1108 009a 05       		.uleb128 0x5
 1109 009b 01       		.byte	0x1
 1110 009c D0010000 		.4byte	.LASF14
 1111 00a0 01       		.byte	0x1
 1112 00a1 2D       		.byte	0x2d
 1113 00a2 01       		.byte	0x1
 1114 00a3 00000000 		.4byte	.LFB0
 1115 00a7 42000000 		.4byte	.LFE0
 1116 00ab 00000000 		.4byte	.LLST0
 1117 00af 05       		.uleb128 0x5
 1118 00b0 01       		.byte	0x1
 1119 00b1 B5000000 		.4byte	.LASF15
 1120 00b5 01       		.byte	0x1
 1121 00b6 47       		.byte	0x47
 1122 00b7 01       		.byte	0x1
 1123 00b8 00000000 		.4byte	.LFB1
 1124 00bc 3E000000 		.4byte	.LFE1
 1125 00c0 2B000000 		.4byte	.LLST1
 1126 00c4 06       		.uleb128 0x6
 1127 00c5 01       		.byte	0x1
 1128 00c6 5D020000 		.4byte	.LASF16
 1129 00ca 01       		.byte	0x1
 1130 00cb 9D       		.byte	0x9d
 1131 00cc 01       		.byte	0x1
 1132 00cd 00000000 		.4byte	.LFB2
 1133 00d1 52000000 		.4byte	.LFE2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 30


 1134 00d5 56000000 		.4byte	.LLST2
 1135 00d9 EC000000 		.4byte	0xec
 1136 00dd 07       		.uleb128 0x7
 1137 00de 0E000000 		.4byte	.LASF18
 1138 00e2 01       		.byte	0x1
 1139 00e3 9D       		.byte	0x9d
 1140 00e4 6F000000 		.4byte	0x6f
 1141 00e8 02       		.byte	0x2
 1142 00e9 91       		.byte	0x91
 1143 00ea 77       		.sleb128 -9
 1144 00eb 00       		.byte	0x0
 1145 00ec 06       		.uleb128 0x6
 1146 00ed 01       		.byte	0x1
 1147 00ee 31010000 		.4byte	.LASF17
 1148 00f2 01       		.byte	0x1
 1149 00f3 C1       		.byte	0xc1
 1150 00f4 01       		.byte	0x1
 1151 00f5 00000000 		.4byte	.LFB3
 1152 00f9 A6010000 		.4byte	.LFE3
 1153 00fd 8D000000 		.4byte	.LLST3
 1154 0101 4C010000 		.4byte	0x14c
 1155 0105 07       		.uleb128 0x7
 1156 0106 56010000 		.4byte	.LASF19
 1157 010a 01       		.byte	0x1
 1158 010b C1       		.byte	0xc1
 1159 010c 7A000000 		.4byte	0x7a
 1160 0110 02       		.byte	0x2
 1161 0111 91       		.byte	0x91
 1162 0112 6E       		.sleb128 -18
 1163 0113 07       		.uleb128 0x7
 1164 0114 68010000 		.4byte	.LASF20
 1165 0118 01       		.byte	0x1
 1166 0119 C1       		.byte	0xc1
 1167 011a 6F000000 		.4byte	0x6f
 1168 011e 02       		.byte	0x2
 1169 011f 91       		.byte	0x91
 1170 0120 6D       		.sleb128 -19
 1171 0121 08       		.uleb128 0x8
 1172 0122 E0000000 		.4byte	.LASF21
 1173 0126 01       		.byte	0x1
 1174 0127 C4       		.byte	0xc4
 1175 0128 6F000000 		.4byte	0x6f
 1176 012c 02       		.byte	0x2
 1177 012d 91       		.byte	0x91
 1178 012e 74       		.sleb128 -12
 1179 012f 08       		.uleb128 0x8
 1180 0130 C8010000 		.4byte	.LASF22
 1181 0134 01       		.byte	0x1
 1182 0135 C6       		.byte	0xc6
 1183 0136 6F000000 		.4byte	0x6f
 1184 013a 02       		.byte	0x2
 1185 013b 91       		.byte	0x91
 1186 013c 75       		.sleb128 -11
 1187 013d 08       		.uleb128 0x8
 1188 013e 14000000 		.4byte	.LASF23
 1189 0142 01       		.byte	0x1
 1190 0143 C7       		.byte	0xc7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 31


 1191 0144 7A000000 		.4byte	0x7a
 1192 0148 02       		.byte	0x2
 1193 0149 91       		.byte	0x91
 1194 014a 76       		.sleb128 -10
 1195 014b 00       		.byte	0x0
 1196 014c 09       		.uleb128 0x9
 1197 014d 01       		.byte	0x1
 1198 014e 63000000 		.4byte	.LASF27
 1199 0152 01       		.byte	0x1
 1200 0153 2901     		.2byte	0x129
 1201 0155 01       		.byte	0x1
 1202 0156 7A000000 		.4byte	0x7a
 1203 015a 00000000 		.4byte	.LFB4
 1204 015e 18000000 		.4byte	.LFE4
 1205 0162 C4000000 		.4byte	.LLST4
 1206 0166 0A       		.uleb128 0xa
 1207 0167 01       		.byte	0x1
 1208 0168 41000000 		.4byte	.LASF24
 1209 016c 01       		.byte	0x1
 1210 016d 4C01     		.2byte	0x14c
 1211 016f 01       		.byte	0x1
 1212 0170 00000000 		.4byte	.LFB5
 1213 0174 3C000000 		.4byte	.LFE5
 1214 0178 EF000000 		.4byte	.LLST5
 1215 017c 90010000 		.4byte	0x190
 1216 0180 0B       		.uleb128 0xb
 1217 0181 45020000 		.4byte	.LASF25
 1218 0185 01       		.byte	0x1
 1219 0186 4C01     		.2byte	0x14c
 1220 0188 6F000000 		.4byte	0x6f
 1221 018c 02       		.byte	0x2
 1222 018d 91       		.byte	0x91
 1223 018e 77       		.sleb128 -9
 1224 018f 00       		.byte	0x0
 1225 0190 0A       		.uleb128 0xa
 1226 0191 01       		.byte	0x1
 1227 0192 0D010000 		.4byte	.LASF26
 1228 0196 01       		.byte	0x1
 1229 0197 6F01     		.2byte	0x16f
 1230 0199 01       		.byte	0x1
 1231 019a 00000000 		.4byte	.LFB6
 1232 019e 3E000000 		.4byte	.LFE6
 1233 01a2 26010000 		.4byte	.LLST6
 1234 01a6 BA010000 		.4byte	0x1ba
 1235 01aa 0B       		.uleb128 0xb
 1236 01ab 45020000 		.4byte	.LASF25
 1237 01af 01       		.byte	0x1
 1238 01b0 6F01     		.2byte	0x16f
 1239 01b2 6F000000 		.4byte	0x6f
 1240 01b6 02       		.byte	0x2
 1241 01b7 91       		.byte	0x91
 1242 01b8 77       		.sleb128 -9
 1243 01b9 00       		.byte	0x0
 1244 01ba 09       		.uleb128 0x9
 1245 01bb 01       		.byte	0x1
 1246 01bc 1F000000 		.4byte	.LASF28
 1247 01c0 01       		.byte	0x1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 32


 1248 01c1 8401     		.2byte	0x184
 1249 01c3 01       		.byte	0x1
 1250 01c4 6F000000 		.4byte	0x6f
 1251 01c8 00000000 		.4byte	.LFB7
 1252 01cc 1C000000 		.4byte	.LFE7
 1253 01d0 5D010000 		.4byte	.LLST7
 1254 01d4 0A       		.uleb128 0xa
 1255 01d5 01       		.byte	0x1
 1256 01d6 99020000 		.4byte	.LASF29
 1257 01da 01       		.byte	0x1
 1258 01db A301     		.2byte	0x1a3
 1259 01dd 01       		.byte	0x1
 1260 01de 00000000 		.4byte	.LFB8
 1261 01e2 FE000000 		.4byte	.LFE8
 1262 01e6 88010000 		.4byte	.LLST8
 1263 01ea 1C020000 		.4byte	0x21c
 1264 01ee 0B       		.uleb128 0xb
 1265 01ef C6020000 		.4byte	.LASF30
 1266 01f3 01       		.byte	0x1
 1267 01f4 A301     		.2byte	0x1a3
 1268 01f6 6F000000 		.4byte	0x6f
 1269 01fa 02       		.byte	0x2
 1270 01fb 91       		.byte	0x91
 1271 01fc 6F       		.sleb128 -17
 1272 01fd 0C       		.uleb128 0xc
 1273 01fe 81020000 		.4byte	.LASF31
 1274 0202 01       		.byte	0x1
 1275 0203 A501     		.2byte	0x1a5
 1276 0205 7A000000 		.4byte	0x7a
 1277 0209 02       		.byte	0x2
 1278 020a 91       		.byte	0x91
 1279 020b 74       		.sleb128 -12
 1280 020c 0C       		.uleb128 0xc
 1281 020d 09030000 		.4byte	.LASF32
 1282 0211 01       		.byte	0x1
 1283 0212 A601     		.2byte	0x1a6
 1284 0214 6F000000 		.4byte	0x6f
 1285 0218 02       		.byte	0x2
 1286 0219 91       		.byte	0x91
 1287 021a 77       		.sleb128 -9
 1288 021b 00       		.byte	0x0
 1289 021c 09       		.uleb128 0x9
 1290 021d 01       		.byte	0x1
 1291 021e D0020000 		.4byte	.LASF33
 1292 0222 01       		.byte	0x1
 1293 0223 D001     		.2byte	0x1d0
 1294 0225 01       		.byte	0x1
 1295 0226 6F000000 		.4byte	0x6f
 1296 022a 00000000 		.4byte	.LFB9
 1297 022e 1C000000 		.4byte	.LFE9
 1298 0232 BF010000 		.4byte	.LLST9
 1299 0236 0A       		.uleb128 0xa
 1300 0237 01       		.byte	0x1
 1301 0238 FF010000 		.4byte	.LASF34
 1302 023c 01       		.byte	0x1
 1303 023d EC01     		.2byte	0x1ec
 1304 023f 01       		.byte	0x1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 33


 1305 0240 00000000 		.4byte	.LFB10
 1306 0244 24000000 		.4byte	.LFE10
 1307 0248 EA010000 		.4byte	.LLST10
 1308 024c 60020000 		.4byte	0x260
 1309 0250 0B       		.uleb128 0xb
 1310 0251 F4020000 		.4byte	.LASF35
 1311 0255 01       		.byte	0x1
 1312 0256 EC01     		.2byte	0x1ec
 1313 0258 6F000000 		.4byte	0x6f
 1314 025c 02       		.byte	0x2
 1315 025d 91       		.byte	0x91
 1316 025e 77       		.sleb128 -9
 1317 025f 00       		.byte	0x0
 1318 0260 09       		.uleb128 0x9
 1319 0261 01       		.byte	0x1
 1320 0262 22020000 		.4byte	.LASF36
 1321 0266 01       		.byte	0x1
 1322 0267 0102     		.2byte	0x201
 1323 0269 01       		.byte	0x1
 1324 026a 6F000000 		.4byte	0x6f
 1325 026e 00000000 		.4byte	.LFB11
 1326 0272 1C000000 		.4byte	.LFE11
 1327 0276 21020000 		.4byte	.LLST11
 1328 027a 00       		.byte	0x0
 1329              		.section	.debug_abbrev
 1330 0000 01       		.uleb128 0x1
 1331 0001 11       		.uleb128 0x11
 1332 0002 01       		.byte	0x1
 1333 0003 25       		.uleb128 0x25
 1334 0004 0E       		.uleb128 0xe
 1335 0005 13       		.uleb128 0x13
 1336 0006 0B       		.uleb128 0xb
 1337 0007 03       		.uleb128 0x3
 1338 0008 0E       		.uleb128 0xe
 1339 0009 1B       		.uleb128 0x1b
 1340 000a 0E       		.uleb128 0xe
 1341 000b 11       		.uleb128 0x11
 1342 000c 01       		.uleb128 0x1
 1343 000d 52       		.uleb128 0x52
 1344 000e 01       		.uleb128 0x1
 1345 000f 55       		.uleb128 0x55
 1346 0010 06       		.uleb128 0x6
 1347 0011 10       		.uleb128 0x10
 1348 0012 06       		.uleb128 0x6
 1349 0013 00       		.byte	0x0
 1350 0014 00       		.byte	0x0
 1351 0015 02       		.uleb128 0x2
 1352 0016 24       		.uleb128 0x24
 1353 0017 00       		.byte	0x0
 1354 0018 0B       		.uleb128 0xb
 1355 0019 0B       		.uleb128 0xb
 1356 001a 3E       		.uleb128 0x3e
 1357 001b 0B       		.uleb128 0xb
 1358 001c 03       		.uleb128 0x3
 1359 001d 0E       		.uleb128 0xe
 1360 001e 00       		.byte	0x0
 1361 001f 00       		.byte	0x0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 34


 1362 0020 03       		.uleb128 0x3
 1363 0021 24       		.uleb128 0x24
 1364 0022 00       		.byte	0x0
 1365 0023 0B       		.uleb128 0xb
 1366 0024 0B       		.uleb128 0xb
 1367 0025 3E       		.uleb128 0x3e
 1368 0026 0B       		.uleb128 0xb
 1369 0027 03       		.uleb128 0x3
 1370 0028 08       		.uleb128 0x8
 1371 0029 00       		.byte	0x0
 1372 002a 00       		.byte	0x0
 1373 002b 04       		.uleb128 0x4
 1374 002c 16       		.uleb128 0x16
 1375 002d 00       		.byte	0x0
 1376 002e 03       		.uleb128 0x3
 1377 002f 0E       		.uleb128 0xe
 1378 0030 3A       		.uleb128 0x3a
 1379 0031 0B       		.uleb128 0xb
 1380 0032 3B       		.uleb128 0x3b
 1381 0033 0B       		.uleb128 0xb
 1382 0034 49       		.uleb128 0x49
 1383 0035 13       		.uleb128 0x13
 1384 0036 00       		.byte	0x0
 1385 0037 00       		.byte	0x0
 1386 0038 05       		.uleb128 0x5
 1387 0039 2E       		.uleb128 0x2e
 1388 003a 00       		.byte	0x0
 1389 003b 3F       		.uleb128 0x3f
 1390 003c 0C       		.uleb128 0xc
 1391 003d 03       		.uleb128 0x3
 1392 003e 0E       		.uleb128 0xe
 1393 003f 3A       		.uleb128 0x3a
 1394 0040 0B       		.uleb128 0xb
 1395 0041 3B       		.uleb128 0x3b
 1396 0042 0B       		.uleb128 0xb
 1397 0043 27       		.uleb128 0x27
 1398 0044 0C       		.uleb128 0xc
 1399 0045 11       		.uleb128 0x11
 1400 0046 01       		.uleb128 0x1
 1401 0047 12       		.uleb128 0x12
 1402 0048 01       		.uleb128 0x1
 1403 0049 40       		.uleb128 0x40
 1404 004a 06       		.uleb128 0x6
 1405 004b 00       		.byte	0x0
 1406 004c 00       		.byte	0x0
 1407 004d 06       		.uleb128 0x6
 1408 004e 2E       		.uleb128 0x2e
 1409 004f 01       		.byte	0x1
 1410 0050 3F       		.uleb128 0x3f
 1411 0051 0C       		.uleb128 0xc
 1412 0052 03       		.uleb128 0x3
 1413 0053 0E       		.uleb128 0xe
 1414 0054 3A       		.uleb128 0x3a
 1415 0055 0B       		.uleb128 0xb
 1416 0056 3B       		.uleb128 0x3b
 1417 0057 0B       		.uleb128 0xb
 1418 0058 27       		.uleb128 0x27
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 35


 1419 0059 0C       		.uleb128 0xc
 1420 005a 11       		.uleb128 0x11
 1421 005b 01       		.uleb128 0x1
 1422 005c 12       		.uleb128 0x12
 1423 005d 01       		.uleb128 0x1
 1424 005e 40       		.uleb128 0x40
 1425 005f 06       		.uleb128 0x6
 1426 0060 01       		.uleb128 0x1
 1427 0061 13       		.uleb128 0x13
 1428 0062 00       		.byte	0x0
 1429 0063 00       		.byte	0x0
 1430 0064 07       		.uleb128 0x7
 1431 0065 05       		.uleb128 0x5
 1432 0066 00       		.byte	0x0
 1433 0067 03       		.uleb128 0x3
 1434 0068 0E       		.uleb128 0xe
 1435 0069 3A       		.uleb128 0x3a
 1436 006a 0B       		.uleb128 0xb
 1437 006b 3B       		.uleb128 0x3b
 1438 006c 0B       		.uleb128 0xb
 1439 006d 49       		.uleb128 0x49
 1440 006e 13       		.uleb128 0x13
 1441 006f 02       		.uleb128 0x2
 1442 0070 0A       		.uleb128 0xa
 1443 0071 00       		.byte	0x0
 1444 0072 00       		.byte	0x0
 1445 0073 08       		.uleb128 0x8
 1446 0074 34       		.uleb128 0x34
 1447 0075 00       		.byte	0x0
 1448 0076 03       		.uleb128 0x3
 1449 0077 0E       		.uleb128 0xe
 1450 0078 3A       		.uleb128 0x3a
 1451 0079 0B       		.uleb128 0xb
 1452 007a 3B       		.uleb128 0x3b
 1453 007b 0B       		.uleb128 0xb
 1454 007c 49       		.uleb128 0x49
 1455 007d 13       		.uleb128 0x13
 1456 007e 02       		.uleb128 0x2
 1457 007f 0A       		.uleb128 0xa
 1458 0080 00       		.byte	0x0
 1459 0081 00       		.byte	0x0
 1460 0082 09       		.uleb128 0x9
 1461 0083 2E       		.uleb128 0x2e
 1462 0084 00       		.byte	0x0
 1463 0085 3F       		.uleb128 0x3f
 1464 0086 0C       		.uleb128 0xc
 1465 0087 03       		.uleb128 0x3
 1466 0088 0E       		.uleb128 0xe
 1467 0089 3A       		.uleb128 0x3a
 1468 008a 0B       		.uleb128 0xb
 1469 008b 3B       		.uleb128 0x3b
 1470 008c 05       		.uleb128 0x5
 1471 008d 27       		.uleb128 0x27
 1472 008e 0C       		.uleb128 0xc
 1473 008f 49       		.uleb128 0x49
 1474 0090 13       		.uleb128 0x13
 1475 0091 11       		.uleb128 0x11
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 36


 1476 0092 01       		.uleb128 0x1
 1477 0093 12       		.uleb128 0x12
 1478 0094 01       		.uleb128 0x1
 1479 0095 40       		.uleb128 0x40
 1480 0096 06       		.uleb128 0x6
 1481 0097 00       		.byte	0x0
 1482 0098 00       		.byte	0x0
 1483 0099 0A       		.uleb128 0xa
 1484 009a 2E       		.uleb128 0x2e
 1485 009b 01       		.byte	0x1
 1486 009c 3F       		.uleb128 0x3f
 1487 009d 0C       		.uleb128 0xc
 1488 009e 03       		.uleb128 0x3
 1489 009f 0E       		.uleb128 0xe
 1490 00a0 3A       		.uleb128 0x3a
 1491 00a1 0B       		.uleb128 0xb
 1492 00a2 3B       		.uleb128 0x3b
 1493 00a3 05       		.uleb128 0x5
 1494 00a4 27       		.uleb128 0x27
 1495 00a5 0C       		.uleb128 0xc
 1496 00a6 11       		.uleb128 0x11
 1497 00a7 01       		.uleb128 0x1
 1498 00a8 12       		.uleb128 0x12
 1499 00a9 01       		.uleb128 0x1
 1500 00aa 40       		.uleb128 0x40
 1501 00ab 06       		.uleb128 0x6
 1502 00ac 01       		.uleb128 0x1
 1503 00ad 13       		.uleb128 0x13
 1504 00ae 00       		.byte	0x0
 1505 00af 00       		.byte	0x0
 1506 00b0 0B       		.uleb128 0xb
 1507 00b1 05       		.uleb128 0x5
 1508 00b2 00       		.byte	0x0
 1509 00b3 03       		.uleb128 0x3
 1510 00b4 0E       		.uleb128 0xe
 1511 00b5 3A       		.uleb128 0x3a
 1512 00b6 0B       		.uleb128 0xb
 1513 00b7 3B       		.uleb128 0x3b
 1514 00b8 05       		.uleb128 0x5
 1515 00b9 49       		.uleb128 0x49
 1516 00ba 13       		.uleb128 0x13
 1517 00bb 02       		.uleb128 0x2
 1518 00bc 0A       		.uleb128 0xa
 1519 00bd 00       		.byte	0x0
 1520 00be 00       		.byte	0x0
 1521 00bf 0C       		.uleb128 0xc
 1522 00c0 34       		.uleb128 0x34
 1523 00c1 00       		.byte	0x0
 1524 00c2 03       		.uleb128 0x3
 1525 00c3 0E       		.uleb128 0xe
 1526 00c4 3A       		.uleb128 0x3a
 1527 00c5 0B       		.uleb128 0xb
 1528 00c6 3B       		.uleb128 0x3b
 1529 00c7 05       		.uleb128 0x5
 1530 00c8 49       		.uleb128 0x49
 1531 00c9 13       		.uleb128 0x13
 1532 00ca 02       		.uleb128 0x2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 37


 1533 00cb 0A       		.uleb128 0xa
 1534 00cc 00       		.byte	0x0
 1535 00cd 00       		.byte	0x0
 1536 00ce 00       		.byte	0x0
 1537              		.section	.debug_pubnames,"",%progbits
 1538 0000 CC010000 		.4byte	0x1cc
 1539 0004 0200     		.2byte	0x2
 1540 0006 00000000 		.4byte	.Ldebug_info0
 1541 000a 7B020000 		.4byte	0x27b
 1542 000e 9A000000 		.4byte	0x9a
 1543 0012 4144435F 		.ascii	"ADC_SAR_V_theACLK_Start\000"
 1543      5341525F 
 1543      565F7468 
 1543      6541434C 
 1543      4B5F5374 
 1544 002a AF000000 		.4byte	0xaf
 1545 002e 4144435F 		.ascii	"ADC_SAR_V_theACLK_Stop\000"
 1545      5341525F 
 1545      565F7468 
 1545      6541434C 
 1545      4B5F5374 
 1546 0045 C4000000 		.4byte	0xc4
 1547 0049 4144435F 		.ascii	"ADC_SAR_V_theACLK_StandbyPower\000"
 1547      5341525F 
 1547      565F7468 
 1547      6541434C 
 1547      4B5F5374 
 1548 0068 EC000000 		.4byte	0xec
 1549 006c 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetDividerRegister\000"
 1549      5341525F 
 1549      565F7468 
 1549      6541434C 
 1549      4B5F5365 
 1550 0091 4C010000 		.4byte	0x14c
 1551 0095 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetDividerRegister\000"
 1551      5341525F 
 1551      565F7468 
 1551      6541434C 
 1551      4B5F4765 
 1552 00ba 66010000 		.4byte	0x166
 1553 00be 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetModeRegister\000"
 1553      5341525F 
 1553      565F7468 
 1553      6541434C 
 1553      4B5F5365 
 1554 00e0 90010000 		.4byte	0x190
 1555 00e4 4144435F 		.ascii	"ADC_SAR_V_theACLK_ClearModeRegister\000"
 1555      5341525F 
 1555      565F7468 
 1555      6541434C 
 1555      4B5F436C 
 1556 0108 BA010000 		.4byte	0x1ba
 1557 010c 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetModeRegister\000"
 1557      5341525F 
 1557      565F7468 
 1557      6541434C 
 1557      4B5F4765 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 38


 1558 012e D4010000 		.4byte	0x1d4
 1559 0132 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetSourceRegister\000"
 1559      5341525F 
 1559      565F7468 
 1559      6541434C 
 1559      4B5F5365 
 1560 0156 1C020000 		.4byte	0x21c
 1561 015a 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetSourceRegister\000"
 1561      5341525F 
 1561      565F7468 
 1561      6541434C 
 1561      4B5F4765 
 1562 017e 36020000 		.4byte	0x236
 1563 0182 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetPhaseRegister\000"
 1563      5341525F 
 1563      565F7468 
 1563      6541434C 
 1563      4B5F5365 
 1564 01a5 60020000 		.4byte	0x260
 1565 01a9 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetPhaseRegister\000"
 1565      5341525F 
 1565      565F7468 
 1565      6541434C 
 1565      4B5F4765 
 1566 01cc 00000000 		.4byte	0x0
 1567              		.section	.debug_aranges,"",%progbits
 1568 0000 74000000 		.4byte	0x74
 1569 0004 0200     		.2byte	0x2
 1570 0006 00000000 		.4byte	.Ldebug_info0
 1571 000a 04       		.byte	0x4
 1572 000b 00       		.byte	0x0
 1573 000c 0000     		.2byte	0x0
 1574 000e 0000     		.2byte	0x0
 1575 0010 00000000 		.4byte	.LFB0
 1576 0014 42000000 		.4byte	.LFE0-.LFB0
 1577 0018 00000000 		.4byte	.LFB1
 1578 001c 3E000000 		.4byte	.LFE1-.LFB1
 1579 0020 00000000 		.4byte	.LFB2
 1580 0024 52000000 		.4byte	.LFE2-.LFB2
 1581 0028 00000000 		.4byte	.LFB3
 1582 002c A6010000 		.4byte	.LFE3-.LFB3
 1583 0030 00000000 		.4byte	.LFB4
 1584 0034 18000000 		.4byte	.LFE4-.LFB4
 1585 0038 00000000 		.4byte	.LFB5
 1586 003c 3C000000 		.4byte	.LFE5-.LFB5
 1587 0040 00000000 		.4byte	.LFB6
 1588 0044 3E000000 		.4byte	.LFE6-.LFB6
 1589 0048 00000000 		.4byte	.LFB7
 1590 004c 1C000000 		.4byte	.LFE7-.LFB7
 1591 0050 00000000 		.4byte	.LFB8
 1592 0054 FE000000 		.4byte	.LFE8-.LFB8
 1593 0058 00000000 		.4byte	.LFB9
 1594 005c 1C000000 		.4byte	.LFE9-.LFB9
 1595 0060 00000000 		.4byte	.LFB10
 1596 0064 24000000 		.4byte	.LFE10-.LFB10
 1597 0068 00000000 		.4byte	.LFB11
 1598 006c 1C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 39


 1599 0070 00000000 		.4byte	0x0
 1600 0074 00000000 		.4byte	0x0
 1601              		.section	.debug_ranges,"",%progbits
 1602              	.Ldebug_ranges0:
 1603 0000 00000000 		.4byte	.Ltext0
 1604 0004 00000000 		.4byte	.Letext0
 1605 0008 00000000 		.4byte	.LFB0
 1606 000c 42000000 		.4byte	.LFE0
 1607 0010 00000000 		.4byte	.LFB1
 1608 0014 3E000000 		.4byte	.LFE1
 1609 0018 00000000 		.4byte	.LFB2
 1610 001c 52000000 		.4byte	.LFE2
 1611 0020 00000000 		.4byte	.LFB3
 1612 0024 A6010000 		.4byte	.LFE3
 1613 0028 00000000 		.4byte	.LFB4
 1614 002c 18000000 		.4byte	.LFE4
 1615 0030 00000000 		.4byte	.LFB5
 1616 0034 3C000000 		.4byte	.LFE5
 1617 0038 00000000 		.4byte	.LFB6
 1618 003c 3E000000 		.4byte	.LFE6
 1619 0040 00000000 		.4byte	.LFB7
 1620 0044 1C000000 		.4byte	.LFE7
 1621 0048 00000000 		.4byte	.LFB8
 1622 004c FE000000 		.4byte	.LFE8
 1623 0050 00000000 		.4byte	.LFB9
 1624 0054 1C000000 		.4byte	.LFE9
 1625 0058 00000000 		.4byte	.LFB10
 1626 005c 24000000 		.4byte	.LFE10
 1627 0060 00000000 		.4byte	.LFB11
 1628 0064 1C000000 		.4byte	.LFE11
 1629 0068 00000000 		.4byte	0x0
 1630 006c 00000000 		.4byte	0x0
 1631              		.section	.debug_str,"MS",%progbits,1
 1632              	.LASF6:
 1633 0000 6C6F6E67 		.ascii	"long long int\000"
 1633      206C6F6E 
 1633      6720696E 
 1633      7400
 1634              	.LASF18:
 1635 000e 73746174 		.ascii	"state\000"
 1635      6500
 1636              	.LASF23:
 1637 0014 6F6C6444 		.ascii	"oldDivider\000"
 1637      69766964 
 1637      657200
 1638              	.LASF28:
 1639 001f 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetModeRegister\000"
 1639      5341525F 
 1639      565F7468 
 1639      6541434C 
 1639      4B5F4765 
 1640              	.LASF24:
 1641 0041 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetModeRegister\000"
 1641      5341525F 
 1641      565F7468 
 1641      6541434C 
 1641      4B5F5365 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 40


 1642              	.LASF27:
 1643 0063 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetDividerRegister\000"
 1643      5341525F 
 1643      565F7468 
 1643      6541434C 
 1643      4B5F4765 
 1644              	.LASF38:
 1645 0088 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_V_theACLK.c\000"
 1645      6E657261 
 1645      7465645F 
 1645      536F7572 
 1645      63655C50 
 1646              	.LASF15:
 1647 00b5 4144435F 		.ascii	"ADC_SAR_V_theACLK_Stop\000"
 1647      5341525F 
 1647      565F7468 
 1647      6541434C 
 1647      4B5F5374 
 1648              	.LASF11:
 1649 00cc 666C6F61 		.ascii	"float\000"
 1649      7400
 1650              	.LASF1:
 1651 00d2 756E7369 		.ascii	"unsigned char\000"
 1651      676E6564 
 1651      20636861 
 1651      7200
 1652              	.LASF21:
 1653 00e0 656E6162 		.ascii	"enabled\000"
 1653      6C656400 
 1654              	.LASF5:
 1655 00e8 6C6F6E67 		.ascii	"long unsigned int\000"
 1655      20756E73 
 1655      69676E65 
 1655      6420696E 
 1655      7400
 1656              	.LASF3:
 1657 00fa 73686F72 		.ascii	"short unsigned int\000"
 1657      7420756E 
 1657      7369676E 
 1657      65642069 
 1657      6E7400
 1658              	.LASF26:
 1659 010d 4144435F 		.ascii	"ADC_SAR_V_theACLK_ClearModeRegister\000"
 1659      5341525F 
 1659      565F7468 
 1659      6541434C 
 1659      4B5F436C 
 1660              	.LASF17:
 1661 0131 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetDividerRegister\000"
 1661      5341525F 
 1661      565F7468 
 1661      6541434C 
 1661      4B5F5365 
 1662              	.LASF19:
 1663 0156 636C6B44 		.ascii	"clkDivider\000"
 1663      69766964 
 1663      657200
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 41


 1664              	.LASF12:
 1665 0161 646F7562 		.ascii	"double\000"
 1665      6C6500
 1666              	.LASF20:
 1667 0168 72657374 		.ascii	"restart\000"
 1667      61727400 
 1668              	.LASF10:
 1669 0170 75696E74 		.ascii	"uint16\000"
 1669      313600
 1670              	.LASF39:
 1671 0177 433A5C55 		.ascii	"C:\\Users\\hoangp\\Documents\\GitHub\\EE542\\firmwa"
 1671      73657273 
 1671      5C686F61 
 1671      6E67705C 
 1671      446F6375 
 1672 01a4 72655C69 		.ascii	"re\\invert\\invert.cydsn\000"
 1672      6E766572 
 1672      745C696E 
 1672      76657274 
 1672      2E637964 
 1673              	.LASF8:
 1674 01bb 756E7369 		.ascii	"unsigned int\000"
 1674      676E6564 
 1674      20696E74 
 1674      00
 1675              	.LASF22:
 1676 01c8 63757272 		.ascii	"currSrc\000"
 1676      53726300 
 1677              	.LASF14:
 1678 01d0 4144435F 		.ascii	"ADC_SAR_V_theACLK_Start\000"
 1678      5341525F 
 1678      565F7468 
 1678      6541434C 
 1678      4B5F5374 
 1679              	.LASF7:
 1680 01e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1680      206C6F6E 
 1680      6720756E 
 1680      7369676E 
 1680      65642069 
 1681              	.LASF34:
 1682 01ff 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetPhaseRegister\000"
 1682      5341525F 
 1682      565F7468 
 1682      6541434C 
 1682      4B5F5365 
 1683              	.LASF36:
 1684 0222 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetPhaseRegister\000"
 1684      5341525F 
 1684      565F7468 
 1684      6541434C 
 1684      4B5F4765 
 1685              	.LASF25:
 1686 0245 6D6F6465 		.ascii	"modeBitMask\000"
 1686      4269744D 
 1686      61736B00 
 1687              	.LASF37:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccPvOTse.s 			page 42


 1688 0251 474E5520 		.ascii	"GNU C 4.4.1\000"
 1688      4320342E 
 1688      342E3100 
 1689              	.LASF16:
 1690 025d 4144435F 		.ascii	"ADC_SAR_V_theACLK_StandbyPower\000"
 1690      5341525F 
 1690      565F7468 
 1690      6541434C 
 1690      4B5F5374 
 1691              	.LASF13:
 1692 027c 63686172 		.ascii	"char\000"
 1692      00
 1693              	.LASF31:
 1694 0281 63757272 		.ascii	"currDiv\000"
 1694      44697600 
 1695              	.LASF2:
 1696 0289 73686F72 		.ascii	"short int\000"
 1696      7420696E 
 1696      7400
 1697              	.LASF9:
 1698 0293 75696E74 		.ascii	"uint8\000"
 1698      3800
 1699              	.LASF29:
 1700 0299 4144435F 		.ascii	"ADC_SAR_V_theACLK_SetSourceRegister\000"
 1700      5341525F 
 1700      565F7468 
 1700      6541434C 
 1700      4B5F5365 
 1701              	.LASF4:
 1702 02bd 6C6F6E67 		.ascii	"long int\000"
 1702      20696E74 
 1702      00
 1703              	.LASF30:
 1704 02c6 636C6B53 		.ascii	"clkSource\000"
 1704      6F757263 
 1704      6500
 1705              	.LASF33:
 1706 02d0 4144435F 		.ascii	"ADC_SAR_V_theACLK_GetSourceRegister\000"
 1706      5341525F 
 1706      565F7468 
 1706      6541434C 
 1706      4B5F4765 
 1707              	.LASF35:
 1708 02f4 636C6B50 		.ascii	"clkPhase\000"
 1708      68617365 
 1708      00
 1709              	.LASF0:
 1710 02fd 7369676E 		.ascii	"signed char\000"
 1710      65642063 
 1710      68617200 
 1711              	.LASF32:
 1712 0309 6F6C6453 		.ascii	"oldSrc\000"
 1712      726300
 1713              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
