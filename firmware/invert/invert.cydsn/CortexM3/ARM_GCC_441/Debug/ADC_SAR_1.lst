ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ADC_SAR_1.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 F3010000 		.text
  20      02006200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	ADC_SAR_1_initVar
  24              		.bss
  25              		.type	ADC_SAR_1_initVar, %object
  26              		.size	ADC_SAR_1_initVar, 1
  27              	ADC_SAR_1_initVar:
  28 0000 00       		.space	1
  29              		.comm	ADC_SAR_1_offset,2,2
  30              		.comm	ADC_SAR_1_countsPerVolt,2,2
  31              		.comm	ADC_SAR_1_shift,2,2
  32              	ADC_SAR_1_resolution:
  33 0001 00       		.space	1
  34              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
  35              		.align	2
  36              		.global	ADC_SAR_1_Start
  37              		.thumb
  38              		.thumb_func
  39              		.type	ADC_SAR_1_Start, %function
  40              	ADC_SAR_1_Start:
  41              	.LFB0:
  42              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 2


  12:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;   /* Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  39:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  40:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  42:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Local data allocation
  43:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  44:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(CY_PSOC5A)
  45:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     static uint8 ADC_SAR_1_resolution;
  46:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End CY_PSOC5A */
  47:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  48:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  49:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  51:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  53:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Performs all required initialization for this component and enables the
  55:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  power.
  56:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  57:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  58:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  59:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  60:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  61:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  62:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  63:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  64:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  65:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  66:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  67:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  68:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 3


  69:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  70:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  71:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  72:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  73:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  74:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  75:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  76:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  43              		.loc 1 76 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50 0002 00AF     		add	r7, sp, #0
  51              		.cfi_offset 14, -4
  52              		.cfi_offset 7, -8
  53              	.LCFI1:
  54              		.cfi_def_cfa_register 7
  77:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  78:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  55              		.loc 1 79 0
  56 0004 40F20003 		movw	r3, #:lower16:ADC_SAR_1_initVar
  57 0008 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_initVar
  58 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  59 000e 002B     		cmp	r3, #0
  60 0010 08D1     		bne	.L2
  80:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  81:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  61              		.loc 1 81 0
  62 0012 FFF7FEFF 		bl	ADC_SAR_1_Init
  82:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  63              		.loc 1 82 0
  64 0016 40F20003 		movw	r3, #:lower16:ADC_SAR_1_initVar
  65 001a C0F20003 		movt	r3, #:upper16:ADC_SAR_1_initVar
  66 001e 4FF00102 		mov	r2, #1
  67 0022 1A70     		strb	r2, [r3, #0]
  68              	.L2:
  83:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  84:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  69              		.loc 1 84 0
  70 0024 FFF7FEFF 		bl	ADC_SAR_1_Enable
  85:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
  71              		.loc 1 85 0
  72 0028 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
  76 002a 00BF     		.section	.text.ADC_SAR_1_Init,"ax",%progbits
  77              		.align	2
  78              		.global	ADC_SAR_1_Init
  79              		.thumb
  80              		.thumb_func
  81              		.type	ADC_SAR_1_Init, %function
  82              	ADC_SAR_1_Init:
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 4


  83              	.LFB1:
  86:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  88:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  89:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
  90:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  91:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  92:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  93:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  94:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  95:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  96:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  97:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  98:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  99:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 100:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 101:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 102:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 103:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 104:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 105:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 106:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 107:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 108:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  84              		.loc 1 108 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 8
  91 0002 00AF     		add	r7, sp, #0
  92              		.cfi_offset 14, -4
  93              		.cfi_offset 7, -8
  94              	.LCFI3:
  95              		.cfi_def_cfa_register 7
 109:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 110:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 111:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 112:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
  96              		.loc 1 112 0
  97 0004 4FF01000 		mov	r0, #16
  98 0008 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 113:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 114:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 115:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 116:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 117:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
  99              		.loc 1 117 0
 100 000c 4FF00000 		mov	r0, #0
 101 0010 4FF00701 		mov	r1, #7
 102 0014 FFF7FEFF 		bl	CyIntSetPriority
 118:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 103              		.loc 1 118 0
 104 0018 4FF00000 		mov	r0, #0
 105 001c 40F20001 		movw	r1, #:lower16:ADC_SAR_1_ISR
 106 0020 C0F20001 		movt	r1, #:upper16:ADC_SAR_1_ISR
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 5


 107 0024 FFF7FEFF 		bl	CyIntSetVector
 119:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */        
 120:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 121:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 122:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 108              		.loc 1 122 0
 109 0028 45F60913 		movw	r3, #:lower16:1073764617
 110 002c C4F20003 		movt	r3, #:upper16:1073764617
 111 0030 45F60912 		movw	r2, #:lower16:1073764617
 112 0034 C4F20002 		movt	r2, #:upper16:1073764617
 113 0038 1278     		ldrb	r2, [r2, #0]
 114 003a D2B2     		uxtb	r2, r2
 115 003c 42F00602 		orr	r2, r2, #6
 116 0040 D2B2     		uxtb	r2, r2
 117 0042 1A70     		strb	r2, [r3, #0]
 123:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 124:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 125:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 118              		.loc 1 125 0
 119 0044 4FF00C00 		mov	r0, #12
 120 0048 FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 126:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 121              		.loc 1 126 0
 122 004c 40F20003 		movw	r3, #:lower16:ADC_SAR_1_offset
 123 0050 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_offset
 124 0054 4FF00002 		mov	r2, #0
 125 0058 1A80     		strh	r2, [r3, #0]	@ movhi
 127:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 126              		.loc 1 127 0
 127 005a 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE1:
 130              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 131              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 132              		.align	2
 133              		.global	ADC_SAR_1_Enable
 134              		.thumb
 135              		.thumb_func
 136              		.type	ADC_SAR_1_Enable, %function
 137              	ADC_SAR_1_Enable:
 138              	.LFB2:
 128:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 130:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 132:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 133:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 134:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 135:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 136:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 137:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 138:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 139:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 140:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 141:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 142:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 143:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 6


 144:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 145:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 139              		.loc 1 145 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 8
 146 0002 82B0     		sub	sp, sp, #8
 147              	.LCFI5:
 148              		.cfi_def_cfa_offset 16
 149 0004 00AF     		add	r7, sp, #0
 150              		.cfi_offset 14, -4
 151              		.cfi_offset 7, -8
 152              	.LCFI6:
 153              		.cfi_def_cfa_register 7
 146:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 147:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 148:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 154              		.loc 1 148 0
 155 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 156 000a 0346     		mov	r3, r0
 157 000c FB71     		strb	r3, [r7, #7]
 149:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 150:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 151:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 158              		.loc 1 151 0
 159 000e 44F2AB33 		movw	r3, #:lower16:1073759147
 160 0012 C4F20003 		movt	r3, #:upper16:1073759147
 161 0016 44F2AB32 		movw	r2, #:lower16:1073759147
 162 001a C4F20002 		movt	r2, #:upper16:1073759147
 163 001e 1278     		ldrb	r2, [r2, #0]
 164 0020 D2B2     		uxtb	r2, r2
 165 0022 42F00202 		orr	r2, r2, #2
 166 0026 D2B2     		uxtb	r2, r2
 167 0028 1A70     		strb	r2, [r3, #0]
 152:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 153:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 154:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 168              		.loc 1 154 0
 169 002a 44F2BB33 		movw	r3, #:lower16:1073759163
 170 002e C4F20003 		movt	r3, #:upper16:1073759163
 171 0032 44F2BB32 		movw	r2, #:lower16:1073759163
 172 0036 C4F20002 		movt	r2, #:upper16:1073759163
 173 003a 1278     		ldrb	r2, [r2, #0]
 174 003c D2B2     		uxtb	r2, r2
 175 003e 42F00202 		orr	r2, r2, #2
 176 0042 D2B2     		uxtb	r2, r2
 177 0044 1A70     		strb	r2, [r3, #0]
 155:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 156:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 157:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 158:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 178              		.loc 1 158 0
 179 0046 44F2A133 		movw	r3, #:lower16:1073759137
 180 004a C4F20003 		movt	r3, #:upper16:1073759137
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 7


 181 004e 44F2A132 		movw	r2, #:lower16:1073759137
 182 0052 C4F20002 		movt	r2, #:upper16:1073759137
 183 0056 1278     		ldrb	r2, [r2, #0]
 184 0058 D2B2     		uxtb	r2, r2
 185 005a 42F00202 		orr	r2, r2, #2
 186 005e D2B2     		uxtb	r2, r2
 187 0060 1A70     		strb	r2, [r3, #0]
 159:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 188              		.loc 1 159 0
 189 0062 44F2B133 		movw	r3, #:lower16:1073759153
 190 0066 C4F20003 		movt	r3, #:upper16:1073759153
 191 006a 44F2B132 		movw	r2, #:lower16:1073759153
 192 006e C4F20002 		movt	r2, #:upper16:1073759153
 193 0072 1278     		ldrb	r2, [r2, #0]
 194 0074 D2B2     		uxtb	r2, r2
 195 0076 42F00202 		orr	r2, r2, #2
 196 007a D2B2     		uxtb	r2, r2
 197 007c 1A70     		strb	r2, [r3, #0]
 160:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 161:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 162:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 163:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 198              		.loc 1 163 0
 199 007e 45F60B13 		movw	r3, #:lower16:1073764619
 200 0082 C4F20003 		movt	r3, #:upper16:1073764619
 201 0086 1B78     		ldrb	r3, [r3, #0]
 202 0088 BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A) /* Make sure that full power is applied for VREF buffer */
 165:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_PWR_CTRL_VREF_DIV_BY4;
 203              		.loc 1 165 0
 204 008a BB79     		ldrb	r3, [r7, #6]
 205 008c 23F00C03 		bic	r3, r3, #12
 206 0090 BB71     		strb	r3, [r7, #6]
 166:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* CY_PSOC5A */
 167:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 207              		.loc 1 167 0
 208 0092 BB79     		ldrb	r3, [r7, #6]
 209 0094 43F00203 		orr	r3, r3, #2
 210 0098 BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 169:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 170:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 171:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 172:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 173:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 211              		.loc 1 173 0
 212 009a BB79     		ldrb	r3, [r7, #6]
 213 009c 43F00103 		orr	r3, r3, #1
 214 00a0 BB71     		strb	r3, [r7, #6]
 174:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 175:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 215              		.loc 1 175 0
 216 00a2 45F60B13 		movw	r3, #:lower16:1073764619
 217 00a6 C4F20003 		movt	r3, #:upper16:1073764619
 218 00aa BA79     		ldrb	r2, [r7, #6]
 219 00ac 1A70     		strb	r2, [r3, #0]
 176:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 8


 177:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 178:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 179:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 180:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 181:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 182:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 183:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 184:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 185:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 186:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 187:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 188:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 220              		.loc 1 188 0
 221 00ae 45F60E13 		movw	r3, #:lower16:1073764622
 222 00b2 C4F20003 		movt	r3, #:upper16:1073764622
 223 00b6 4FF00402 		mov	r2, #4
 224 00ba 1A70     		strb	r2, [r3, #0]
 189:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 190:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 191:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 192:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 193:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 194:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 225              		.loc 1 194 0
 226 00bc 45F60D13 		movw	r3, #:lower16:1073764621
 227 00c0 C4F20003 		movt	r3, #:upper16:1073764621
 228 00c4 45F60D12 		movw	r2, #:lower16:1073764621
 229 00c8 C4F20002 		movt	r2, #:upper16:1073764621
 230 00cc 1278     		ldrb	r2, [r2, #0]
 231 00ce D2B2     		uxtb	r2, r2
 232 00d0 02F0BF02 		and	r2, r2, #191
 233 00d4 1A70     		strb	r2, [r3, #0]
 195:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 196:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 197:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_CLOCK_FREQUENCY > (ADC_SAR_1_MAX_FREQUENCY / 2) */
 198:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 199:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Delay control for comparator latch enable, low delay, (Default for 1MSPS) */
 200:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 201:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DCEN;
 234              		.loc 1 201 0
 235 00d6 45F60D13 		movw	r3, #:lower16:1073764621
 236 00da C4F20003 		movt	r3, #:upper16:1073764621
 237 00de 45F60D12 		movw	r2, #:lower16:1073764621
 238 00e2 C4F20002 		movt	r2, #:upper16:1073764621
 239 00e6 1278     		ldrb	r2, [r2, #0]
 240 00e8 D2B2     		uxtb	r2, r2
 241 00ea 42F02002 		orr	r2, r2, #32
 242 00ee D2B2     		uxtb	r2, r2
 243 00f0 1A70     		strb	r2, [r3, #0]
 202:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Delay control for comparator latch enable, high delay (for <500ksps)*/
 203:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DCEN;
 204:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_CLOCK_FREQUENCY > (ADC_SAR_1_MAX_FREQUENCY / 2) */
 205:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 206:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 207:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 244              		.loc 1 207 0
 245 00f2 45F60813 		movw	r3, #:lower16:1073764616
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 9


 246 00f6 C4F20003 		movt	r3, #:upper16:1073764616
 247 00fa 4FF00802 		mov	r2, #8
 248 00fe 1A70     		strb	r2, [r3, #0]
 208:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 209:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 210:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 211:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 212:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 213:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 214:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 215:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 216:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 217:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 218:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 219:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 220:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 249              		.loc 1 220 0
 250 0100 45F62F33 		movw	r3, #:lower16:1073765167
 251 0104 C4F20003 		movt	r3, #:upper16:1073765167
 252 0108 45F62F32 		movw	r2, #:lower16:1073765167
 253 010c C4F20002 		movt	r2, #:upper16:1073765167
 254 0110 1278     		ldrb	r2, [r2, #0]
 255 0112 D2B2     		uxtb	r2, r2
 256 0114 42F00802 		orr	r2, r2, #8
 257 0118 D2B2     		uxtb	r2, r2
 258 011a 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 222:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A)
 223:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Software Reset */
 224:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_RESET_SOFT_ACTIVE;
 259              		.loc 1 224 0
 260 011c 45F60813 		movw	r3, #:lower16:1073764616
 261 0120 C4F20003 		movt	r3, #:upper16:1073764616
 262 0124 45F60812 		movw	r2, #:lower16:1073764616
 263 0128 C4F20002 		movt	r2, #:upper16:1073764616
 264 012c 1278     		ldrb	r2, [r2, #0]
 265 012e D2B2     		uxtb	r2, r2
 266 0130 42F02002 		orr	r2, r2, #32
 267 0134 D2B2     		uxtb	r2, r2
 268 0136 1A70     		strb	r2, [r3, #0]
 225:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(2u); /* 2us delay is required for the lowest 1Mhz clock connected to SAR */
 269              		.loc 1 225 0
 270 0138 4FF00200 		mov	r0, #2
 271 013c FFF7FEFF 		bl	CyDelayUs
 226:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_RESET_SOFT_ACTIVE;
 272              		.loc 1 226 0
 273 0140 45F60813 		movw	r3, #:lower16:1073764616
 274 0144 C4F20003 		movt	r3, #:upper16:1073764616
 275 0148 45F60812 		movw	r2, #:lower16:1073764616
 276 014c C4F20002 		movt	r2, #:upper16:1073764616
 277 0150 1278     		ldrb	r2, [r2, #0]
 278 0152 D2B2     		uxtb	r2, r2
 279 0154 02F0DF02 		and	r2, r2, #223
 280 0158 1A70     		strb	r2, [r3, #0]
 227:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 228:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 229:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End CY_PSOC5A */
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 10


 230:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 232:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 233:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 281              		.loc 1 233 0
 282 015a 4EF28023 		movw	r3, #:lower16:-536812928
 283 015e CEF20003 		movt	r3, #:upper16:-536812928
 284 0162 4FF00102 		mov	r2, #1
 285 0166 1A60     		str	r2, [r3, #0]
 234:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */        
 235:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 236:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 286              		.loc 1 236 0
 287 0168 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 016a 1846     		mov	r0, r3
 289 016c FFF7FEFF 		bl	CyExitCriticalSection
 237:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 290              		.loc 1 237 0
 291 0170 07F10807 		add	r7, r7, #8
 292 0174 BD46     		mov	sp, r7
 293 0176 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE2:
 296              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 297              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 298              		.align	2
 299              		.global	ADC_SAR_1_Stop
 300              		.thumb
 301              		.thumb_func
 302              		.type	ADC_SAR_1_Stop, %function
 303              	ADC_SAR_1_Stop:
 304              	.LFB3:
 238:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 239:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 240:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 241:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 242:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 243:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 245:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops convertion and reduce the power to the minimum.
 246:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 248:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 249:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 250:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 251:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 252:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 253:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 255:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 305              		.loc 1 255 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              	.LCFI7:
 311              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 11


 312 0002 82B0     		sub	sp, sp, #8
 313              	.LCFI8:
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_offset 14, -4
 317              		.cfi_offset 7, -8
 318              	.LCFI9:
 319              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 257:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 320              		.loc 1 257 0
 321 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 322 000a 0346     		mov	r3, r0
 323 000c FB71     		strb	r3, [r7, #7]
 258:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 259:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 260:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 324              		.loc 1 260 0
 325 000e 45F60813 		movw	r3, #:lower16:1073764616
 326 0012 C4F20003 		movt	r3, #:upper16:1073764616
 327 0016 45F60812 		movw	r2, #:lower16:1073764616
 328 001a C4F20002 		movt	r2, #:upper16:1073764616
 329 001e 1278     		ldrb	r2, [r2, #0]
 330 0020 D2B2     		uxtb	r2, r2
 331 0022 02F0FE02 		and	r2, r2, #254
 332 0026 1A70     		strb	r2, [r3, #0]
 261:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 262:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A)
 263:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Leave the SAR block powered and reduce the power to the minimum */
 264:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_ICONT_LV_3;
 333              		.loc 1 264 0
 334 0028 45F60813 		movw	r3, #:lower16:1073764616
 335 002c C4F20003 		movt	r3, #:upper16:1073764616
 336 0030 45F60812 		movw	r2, #:lower16:1073764616
 337 0034 C4F20002 		movt	r2, #:upper16:1073764616
 338 0038 1278     		ldrb	r2, [r2, #0]
 339 003a D2B2     		uxtb	r2, r2
 340 003c 6FEA8262 		mvn	r2, r2, lsl #26
 341 0040 6FEA9262 		mvn	r2, r2, lsr #26
 342 0044 D2B2     		uxtb	r2, r2
 343 0046 1A70     		strb	r2, [r3, #0]
 265:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          /* Disconnect Bypass Cap */
 266:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR6_REG &= (uint8)~ADC_SAR_1_INT_BYPASS_EXT_VREF;
 344              		.loc 1 266 0
 345 0048 45F60E13 		movw	r3, #:lower16:1073764622
 346 004c C4F20003 		movt	r3, #:upper16:1073764622
 347 0050 45F60E12 		movw	r2, #:lower16:1073764622
 348 0054 C4F20002 		movt	r2, #:upper16:1073764622
 349 0058 1278     		ldrb	r2, [r2, #0]
 350 005a D2B2     		uxtb	r2, r2
 351 005c 02F0FB02 		and	r2, r2, #251
 352 0060 1A70     		strb	r2, [r3, #0]
 267:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Disable reference buffer and reduce the reference power to the minimum */
 268:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR3_REG &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN; /*VCM buffer is absent in P
 353              		.loc 1 268 0
 354 0062 45F60B13 		movw	r3, #:lower16:1073764619
 355 0066 C4F20003 		movt	r3, #:upper16:1073764619
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 12


 356 006a 45F60B12 		movw	r2, #:lower16:1073764619
 357 006e C4F20002 		movt	r2, #:upper16:1073764619
 358 0072 1278     		ldrb	r2, [r2, #0]
 359 0074 D2B2     		uxtb	r2, r2
 360 0076 02F0FE02 		and	r2, r2, #254
 361 007a 1A70     		strb	r2, [r3, #0]
 269:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR3_REG |= ADC_SAR_1_SAR_PWR_CTRL_VREF_DIV_BY4;
 362              		.loc 1 269 0
 363 007c 45F60B13 		movw	r3, #:lower16:1073764619
 364 0080 C4F20003 		movt	r3, #:upper16:1073764619
 365 0084 45F60B12 		movw	r2, #:lower16:1073764619
 366 0088 C4F20002 		movt	r2, #:upper16:1073764619
 367 008c 1278     		ldrb	r2, [r2, #0]
 368 008e D2B2     		uxtb	r2, r2
 369 0090 42F00C02 		orr	r2, r2, #12
 370 0094 D2B2     		uxtb	r2, r2
 371 0096 1A70     		strb	r2, [r3, #0]
 270:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 271:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Disable the SAR ADC block in Active Power Mode */
 272:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 273:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Disable the SAR ADC in Standby Power Mode */
 274:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 275:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End CY_PSOC5A */
 276:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 277:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 278:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 279:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 372              		.loc 1 279 0
 373 0098 44F2A133 		movw	r3, #:lower16:1073759137
 374 009c C4F20003 		movt	r3, #:upper16:1073759137
 375 00a0 44F2A132 		movw	r2, #:lower16:1073759137
 376 00a4 C4F20002 		movt	r2, #:upper16:1073759137
 377 00a8 1278     		ldrb	r2, [r2, #0]
 378 00aa D2B2     		uxtb	r2, r2
 379 00ac 02F0FD02 		and	r2, r2, #253
 380 00b0 1A70     		strb	r2, [r3, #0]
 280:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 381              		.loc 1 280 0
 382 00b2 44F2B133 		movw	r3, #:lower16:1073759153
 383 00b6 C4F20003 		movt	r3, #:upper16:1073759153
 384 00ba 44F2B132 		movw	r2, #:lower16:1073759153
 385 00be C4F20002 		movt	r2, #:upper16:1073759153
 386 00c2 1278     		ldrb	r2, [r2, #0]
 387 00c4 D2B2     		uxtb	r2, r2
 388 00c6 02F0FD02 		and	r2, r2, #253
 389 00ca 1A70     		strb	r2, [r3, #0]
 281:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 282:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 283:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 390              		.loc 1 283 0
 391 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 392 00ce 1846     		mov	r0, r3
 393 00d0 FFF7FEFF 		bl	CyExitCriticalSection
 284:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 285:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 394              		.loc 1 285 0
 395 00d4 07F10807 		add	r7, r7, #8
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 13


 396 00d8 BD46     		mov	sp, r7
 397 00da 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE3:
 400              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 401              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 402              		.align	2
 403              		.global	ADC_SAR_1_SetPower
 404              		.thumb
 405              		.thumb_func
 406              		.type	ADC_SAR_1_SetPower, %function
 407              	ADC_SAR_1_SetPower:
 408              	.LFB4:
 286:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 287:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 288:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 289:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 290:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 291:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 292:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 293:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Power mode.
 294:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 295:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 296:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 297:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 298:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Half power
 299:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1/3rd power
 300:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Quarter power.
 301:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 302:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 303:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 304:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 305:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 306:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 307:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 409              		.loc 1 307 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 16
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414 0000 80B4     		push	{r7}
 415              	.LCFI10:
 416              		.cfi_def_cfa_offset 4
 417 0002 85B0     		sub	sp, sp, #20
 418              	.LCFI11:
 419              		.cfi_def_cfa_offset 24
 420 0004 00AF     		add	r7, sp, #0
 421              		.cfi_offset 7, -4
 422              	.LCFI12:
 423              		.cfi_def_cfa_register 7
 424 0006 0346     		mov	r3, r0
 425 0008 FB71     		strb	r3, [r7, #7]
 308:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 309:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 310:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 311:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 426              		.loc 1 311 0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 14


 427 000a FB79     		ldrb	r3, [r7, #7]
 428 000c 03F00303 		and	r3, r3, #3
 429 0010 FB71     		strb	r3, [r7, #7]
 312:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 313:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 314:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 430              		.loc 1 314 0
 431 0012 45F60813 		movw	r3, #:lower16:1073764616
 432 0016 C4F20003 		movt	r3, #:upper16:1073764616
 433 001a 1B78     		ldrb	r3, [r3, #0]
 434 001c DBB2     		uxtb	r3, r3
 435 001e 03F03F03 		and	r3, r3, #63
 436 0022 FB73     		strb	r3, [r7, #15]
 315:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 437              		.loc 1 315 0
 438 0024 FB79     		ldrb	r3, [r7, #7]
 439 0026 4FEA8313 		lsl	r3, r3, #6
 440 002a DAB2     		uxtb	r2, r3
 441 002c FB7B     		ldrb	r3, [r7, #15]
 442 002e 42EA0303 		orr	r3, r2, r3
 443 0032 FB73     		strb	r3, [r7, #15]
 316:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 444              		.loc 1 316 0
 445 0034 45F60813 		movw	r3, #:lower16:1073764616
 446 0038 C4F20003 		movt	r3, #:upper16:1073764616
 447 003c FA7B     		ldrb	r2, [r7, #15]
 448 003e 1A70     		strb	r2, [r3, #0]
 317:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 449              		.loc 1 317 0
 450 0040 07F11407 		add	r7, r7, #20
 451 0044 BD46     		mov	sp, r7
 452 0046 80BC     		pop	{r7}
 453 0048 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE4:
 456              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 457 004a 00BF     		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 458              		.align	2
 459              		.global	ADC_SAR_1_SetResolution
 460              		.thumb
 461              		.thumb_func
 462              		.type	ADC_SAR_1_SetResolution, %function
 463              	ADC_SAR_1_SetResolution:
 464              	.LFB5:
 318:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 319:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 320:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 322:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 323:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 324:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 325:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 326:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function does not affect the actual conversion with PSoC5 ES1 silicon.
 327:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 328:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 329:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 330:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 15


 331:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 332:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 333:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 334:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 335:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 336:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 337:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 338:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 339:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 340:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 341:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 342:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 343:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 344:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 345:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 346:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 347:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 348:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 349:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 350:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 351:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 352:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 353:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 354:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 355:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 356:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 358:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 465              		.loc 1 358 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 16
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 80B5     		push	{r7, lr}
 470              	.LCFI13:
 471              		.cfi_def_cfa_offset 8
 472 0002 84B0     		sub	sp, sp, #16
 473              	.LCFI14:
 474              		.cfi_def_cfa_offset 24
 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_offset 14, -4
 477              		.cfi_offset 7, -8
 478              	.LCFI15:
 479              		.cfi_def_cfa_register 7
 480 0006 0346     		mov	r3, r0
 481 0008 FB71     		strb	r3, [r7, #7]
 359:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 360:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 361:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* remember resolution for the GetResult APIs */
 362:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A)
 363:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_resolution = resolution;
 482              		.loc 1 363 0
 483 000a 40F20003 		movw	r3, #:lower16:ADC_SAR_1_resolution
 484 000e C0F20003 		movt	r3, #:upper16:ADC_SAR_1_resolution
 485 0012 FA79     		ldrb	r2, [r7, #7]
 486 0014 1A70     		strb	r2, [r3, #0]
 364:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End CY_PSOC5A */
 365:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 16


 366:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 367:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 487              		.loc 1 367 0
 488 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 489 0018 0A2B     		cmp	r3, #10
 490 001a 08D0     		beq	.L15
 491 001c 0C2B     		cmp	r3, #12
 492 001e 02D0     		beq	.L16
 493 0020 082B     		cmp	r3, #8
 494 0022 08D0     		beq	.L14
 495 0024 0BE0     		b	.L19
 496              	.L16:
 368:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 369:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 370:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 497              		.loc 1 370 0
 498 0026 6FF03A03 		mvn	r3, #58
 499 002a FB73     		strb	r3, [r7, #15]
 371:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 500              		.loc 1 371 0
 501 002c 0EE0     		b	.L17
 502              	.L15:
 372:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 373:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Use 12bits for PSoC5 production silicon and shift the
 374:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             *  results for lower resolution in GetResult16() API
 375:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             */
 376:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(CY_PSOC5A)
 377:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 503              		.loc 1 377 0
 504 002e 6FF03A03 		mvn	r3, #58
 505 0032 FB73     		strb	r3, [r7, #15]
 378:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #else
 379:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 380:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End CY_PSOC5A */
 381:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 506              		.loc 1 381 0
 507 0034 0AE0     		b	.L17
 508              	.L14:
 382:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 383:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(CY_PSOC5A)
 384:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 509              		.loc 1 384 0
 510 0036 6FF03A03 		mvn	r3, #58
 511 003a FB73     		strb	r3, [r7, #15]
 385:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #else
 386:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 387:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End CY_PSOC5A */
 388:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 512              		.loc 1 388 0
 513 003c 06E0     		b	.L17
 514              	.L19:
 389:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 390:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 515              		.loc 1 390 0
 516 003e 6FF03A03 		mvn	r3, #58
 517 0042 FB73     		strb	r3, [r7, #15]
 391:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 17


 392:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 518              		.loc 1 392 0
 519 0044 4FF00000 		mov	r0, #0
 520 0048 FFF7FEFF 		bl	CyHalt
 521              	.L17:
 393:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 394:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 395:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 522              		.loc 1 395 0
 523 004c 45F60A13 		movw	r3, #:lower16:1073764618
 524 0050 C4F20003 		movt	r3, #:upper16:1073764618
 525 0054 FA7B     		ldrb	r2, [r7, #15]
 526 0056 1A70     		strb	r2, [r3, #0]
 396:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 397:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 398:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 527              		.loc 1 398 0
 528 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 529 005a 1846     		mov	r0, r3
 530 005c FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 399:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 531              		.loc 1 399 0
 532 0060 07F11007 		add	r7, r7, #16
 533 0064 BD46     		mov	sp, r7
 534 0066 80BD     		pop	{r7, pc}
 535              		.cfi_endproc
 536              	.LFE5:
 537              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 538              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 539              		.align	2
 540              		.global	ADC_SAR_1_StartConvert
 541              		.thumb
 542              		.thumb_func
 543              		.type	ADC_SAR_1_StartConvert, %function
 544              	ADC_SAR_1_StartConvert:
 545              	.LFB6:
 400:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 401:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 402:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 403:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 404:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 405:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 406:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
 407:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 408:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 409:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 410:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Starts ADC conversion using the given mode. The API is available in the 
 411:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  free running and the software trigger mode.
 412:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 413:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 414:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 415:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 417:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 418:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 419:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 420:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 18


 421:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a 
 422:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by 
 423:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 424:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 425:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 426:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the 
 427:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call 
 428:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 429:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 430:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 431:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 546              		.loc 1 431 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              	.LCFI16:
 553              		.cfi_def_cfa_offset 4
 554 0002 00AF     		add	r7, sp, #0
 555              		.cfi_offset 7, -4
 556              	.LCFI17:
 557              		.cfi_def_cfa_register 7
 432:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 433:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 434:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 435:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 436:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 437:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 558              		.loc 1 437 0
 559 0004 45F60813 		movw	r3, #:lower16:1073764616
 560 0008 C4F20003 		movt	r3, #:upper16:1073764616
 561 000c 45F60812 		movw	r2, #:lower16:1073764616
 562 0010 C4F20002 		movt	r2, #:upper16:1073764616
 563 0014 1278     		ldrb	r2, [r2, #0]
 564 0016 D2B2     		uxtb	r2, r2
 565 0018 42F00102 		orr	r2, r2, #1
 566 001c D2B2     		uxtb	r2, r2
 567 001e 1A70     		strb	r2, [r3, #0]
 438:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 568              		.loc 1 438 0
 569 0020 BD46     		mov	sp, r7
 570 0022 80BC     		pop	{r7}
 571 0024 7047     		bx	lr
 572              		.cfi_endproc
 573              	.LFE6:
 574              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 575 0026 00BF     		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 576              		.align	2
 577              		.global	ADC_SAR_1_StopConvert
 578              		.thumb
 579              		.thumb_func
 580              		.type	ADC_SAR_1_StopConvert, %function
 581              	ADC_SAR_1_StopConvert:
 582              	.LFB7:
 439:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 19


 441:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 442:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 443:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 444:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 445:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 446:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion using the given mode. The API is available in the 
 447:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  free running and the software trigger mode.
 448:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 449:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 450:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 451:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 452:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 453:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 454:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 455:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 456:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 457:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  This writes into the SOC bit in SAR_CTRL reg.
 458:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 459:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 460:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function set a software version of the SOC 
 461:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  to low level and switch SOF source to hardware SOF input.
 462:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 463:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 465:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 583              		.loc 1 465 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0000 80B4     		push	{r7}
 589              	.LCFI18:
 590              		.cfi_def_cfa_offset 4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_offset 7, -4
 593              	.LCFI19:
 594              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 467:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 595              		.loc 1 467 0
 596 0004 45F60813 		movw	r3, #:lower16:1073764616
 597 0008 C4F20003 		movt	r3, #:upper16:1073764616
 598 000c 45F60812 		movw	r2, #:lower16:1073764616
 599 0010 C4F20002 		movt	r2, #:upper16:1073764616
 600 0014 1278     		ldrb	r2, [r2, #0]
 601 0016 D2B2     		uxtb	r2, r2
 602 0018 02F0FE02 		and	r2, r2, #254
 603 001c 1A70     		strb	r2, [r3, #0]
 468:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 469:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 470:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 471:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 472:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 473:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 474:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 604              		.loc 1 474 0
 605 001e BD46     		mov	sp, r7
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 20


 606 0020 80BC     		pop	{r7}
 607 0022 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE7:
 610              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 611              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 612              		.align	2
 613              		.global	ADC_SAR_1_IsEndConversion
 614              		.thumb
 615              		.thumb_func
 616              		.type	ADC_SAR_1_IsEndConversion, %function
 617              	ADC_SAR_1_IsEndConversion:
 618              	.LFB8:
 475:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 476:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 477:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 478:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 480:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 481:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 482:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 483:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 484:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Queries the ADC to see if conversion is complete
 485:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 486:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 487:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Wait mode,
 488:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   0 if return with answer imediately.
 489:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   1 if wait until conversion is complete, then return.
 490:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 491:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 492:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  Conversion not complete.
 493:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  Conversion complete.
 494:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 495:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 497:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 619              		.loc 1 497 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 16
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              	.LCFI20:
 625              		.cfi_def_cfa_offset 8
 626 0002 84B0     		sub	sp, sp, #16
 627              	.LCFI21:
 628              		.cfi_def_cfa_offset 24
 629 0004 00AF     		add	r7, sp, #0
 630              		.cfi_offset 14, -4
 631              		.cfi_offset 7, -8
 632              	.LCFI22:
 633              		.cfi_def_cfa_register 7
 634 0006 0346     		mov	r3, r0
 635 0008 FB71     		strb	r3, [r7, #7]
 636              	.L26:
 498:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 499:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 500:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     do
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 21


 501:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 502:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 637              		.loc 1 502 0
 638 000a 45F60913 		movw	r3, #:lower16:1073764617
 639 000e C4F20003 		movt	r3, #:upper16:1073764617
 640 0012 1B78     		ldrb	r3, [r3, #0]
 641 0014 DBB2     		uxtb	r3, r3
 642 0016 03F00103 		and	r3, r3, #1
 643 001a FB73     		strb	r3, [r7, #15]
 503:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 644              		.loc 1 503 0
 645 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 646 001e 012B     		cmp	r3, #1
 647 0020 02D0     		beq	.L25
 648 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 0024 002B     		cmp	r3, #0
 650 0026 F0D0     		beq	.L26
 651              	.L25:
 504:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 505:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 652              		.loc 1 505 0
 653 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 654 002a 012B     		cmp	r3, #1
 655 002c 08D1     		bne	.L27
 506:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 507:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 508:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 656              		.loc 1 508 0
 657 002e 4FF00100 		mov	r0, #1
 658 0032 FFF7FEFF 		bl	CyDelayUs
 509:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 510:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 659              		.loc 1 510 0
 660 0036 45F60913 		movw	r3, #:lower16:1073764617
 661 003a C4F20003 		movt	r3, #:upper16:1073764617
 662 003e 1B78     		ldrb	r3, [r3, #0]
 663              	.L27:
 511:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 512:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 513:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 664              		.loc 1 513 0
 665 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 514:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 666              		.loc 1 514 0
 667 0042 1846     		mov	r0, r3
 668 0044 07F11007 		add	r7, r7, #16
 669 0048 BD46     		mov	sp, r7
 670 004a 80BD     		pop	{r7, pc}
 671              		.cfi_endproc
 672              	.LFE8:
 673              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 674              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 675              		.align	2
 676              		.global	ADC_SAR_1_GetResult8
 677              		.thumb
 678              		.thumb_func
 679              		.type	ADC_SAR_1_GetResult8, %function
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 22


 680              	ADC_SAR_1_GetResult8:
 681              	.LFB9:
 515:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 516:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 517:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 518:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 519:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 520:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 521:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 522:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns an 8-bit result or the LSB of the last conversion.
 523:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 524:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 525:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 526:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 527:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 528:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 529:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 530:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC result.
 531:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 532:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 533:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2's
 534:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 535:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_resolution - used to shift the results for lower
 536:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   resolution.
 537:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 538:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 539:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 540:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 682              		.loc 1 540 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 8
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687 0000 80B4     		push	{r7}
 688              	.LCFI23:
 689              		.cfi_def_cfa_offset 4
 690 0002 83B0     		sub	sp, sp, #12
 691              	.LCFI24:
 692              		.cfi_def_cfa_offset 16
 693 0004 00AF     		add	r7, sp, #0
 694              		.cfi_offset 7, -4
 695              	.LCFI25:
 696              		.cfi_def_cfa_register 7
 541:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 542:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A)
 543:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 544:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 res;
 545:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 546:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 697              		.loc 1 546 0
 698 0006 45F6A233 		movw	r3, #:lower16:1073765282
 699 000a C4F20003 		movt	r3, #:upper16:1073765282
 700 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 701 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 547:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 548:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Use 12bits for PSoC5 production silicon and shift the results for lower resolution in th
 549:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         switch (ADC_SAR_1_resolution)
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 23


 702              		.loc 1 549 0
 703 0012 40F20003 		movw	r3, #:lower16:ADC_SAR_1_resolution
 704 0016 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_resolution
 705 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 706 001c 082B     		cmp	r3, #8
 707 001e 06D0     		beq	.L31
 708 0020 0A2B     		cmp	r3, #10
 709 0022 08D1     		bne	.L30
 710              	.L32:
 550:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         {
 551:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             case (uint8)ADC_SAR_1__BITS_10:
 552:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 res >>= 2u;
 711              		.loc 1 552 0
 712 0024 FB88     		ldrh	r3, [r7, #6]
 713 0026 4FEA9303 		lsr	r3, r3, #2
 714 002a FB80     		strh	r3, [r7, #6]	@ movhi
 553:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 715              		.loc 1 553 0
 716 002c 03E0     		b	.L30
 717              	.L31:
 554:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             case (uint8)ADC_SAR_1__BITS_8:
 555:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 res >>= 4u;
 718              		.loc 1 555 0
 719 002e FB88     		ldrh	r3, [r7, #6]
 720 0030 4FEA1313 		lsr	r3, r3, #4
 721 0034 FB80     		strh	r3, [r7, #6]	@ movhi
 722              	.L30:
 556:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 557:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             default: /* Do not shift for 12 bits */
 558:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 559:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         }
 560:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         return( (int8)((int16)res - ADC_SAR_1_shift) );
 723              		.loc 1 560 0
 724 0036 FB88     		ldrh	r3, [r7, #6]	@ movhi
 725 0038 DAB2     		uxtb	r2, r3
 726 003a 40F20003 		movw	r3, #:lower16:ADC_SAR_1_shift
 727 003e C0F20003 		movt	r3, #:upper16:ADC_SAR_1_shift
 728 0042 1B88     		ldrh	r3, [r3, #0]	@ movhi
 729 0044 9BB2     		uxth	r3, r3
 730 0046 DBB2     		uxtb	r3, r3
 731 0048 C3EB0203 		rsb	r3, r3, r2
 732 004c DBB2     		uxtb	r3, r3
 733 004e 5BB2     		sxtb	r3, r3
 561:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 562:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 563:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End CY_PSOC5A */
 564:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 565:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 734              		.loc 1 565 0
 735 0050 1846     		mov	r0, r3
 736 0052 07F10C07 		add	r7, r7, #12
 737 0056 BD46     		mov	sp, r7
 738 0058 80BC     		pop	{r7}
 739 005a 7047     		bx	lr
 740              		.cfi_endproc
 741              	.LFE9:
 742              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 24


 743              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 744              		.align	2
 745              		.global	ADC_SAR_1_GetResult16
 746              		.thumb
 747              		.thumb_func
 748              		.type	ADC_SAR_1_GetResult16, %function
 749              	ADC_SAR_1_GetResult16:
 750              	.LFB10:
 566:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 567:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 568:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 570:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 571:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 572:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 573:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Gets the data available in the SAR DATA registers.
 574:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 575:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 576:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 578:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 579:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 580:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 581:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC result. WORD value which has the converted 12bits. In the differential
 582:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input mode the SAR ADC outputs digitally converted data in binary offset
 583:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  scheme, this function converts the data into 2's compliment form.
 584:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 585:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 586:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2's
 587:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 588:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_resolution - used to shift the results for lower
 589:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   resolution.
 590:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 591:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 592:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 593:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 751              		.loc 1 593 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              	.LCFI26:
 758              		.cfi_def_cfa_offset 4
 759 0002 83B0     		sub	sp, sp, #12
 760              	.LCFI27:
 761              		.cfi_def_cfa_offset 16
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_offset 7, -4
 764              	.LCFI28:
 765              		.cfi_def_cfa_register 7
 594:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 595:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 596:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 766              		.loc 1 596 0
 767 0006 45F6A233 		movw	r3, #:lower16:1073765282
 768 000a C4F20003 		movt	r3, #:upper16:1073765282
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 25


 769 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 770 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 597:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 598:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(CY_PSOC5A)
 599:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Use 12bits for PSoC5 production silicon and shift the results for lower resolution in th
 600:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         switch (ADC_SAR_1_resolution)
 771              		.loc 1 600 0
 772 0012 40F20003 		movw	r3, #:lower16:ADC_SAR_1_resolution
 773 0016 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_resolution
 774 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 775 001c 082B     		cmp	r3, #8
 776 001e 06D0     		beq	.L36
 777 0020 0A2B     		cmp	r3, #10
 778 0022 08D1     		bne	.L35
 779              	.L37:
 601:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         {
 602:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             case (uint8)ADC_SAR_1__BITS_10:
 603:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 res >>= 2u;
 780              		.loc 1 603 0
 781 0024 FB88     		ldrh	r3, [r7, #6]
 782 0026 4FEA9303 		lsr	r3, r3, #2
 783 002a FB80     		strh	r3, [r7, #6]	@ movhi
 604:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 784              		.loc 1 604 0
 785 002c 03E0     		b	.L35
 786              	.L36:
 605:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             case (uint8)ADC_SAR_1__BITS_8:
 606:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 res >>= 4u;
 787              		.loc 1 606 0
 788 002e FB88     		ldrh	r3, [r7, #6]
 789 0030 4FEA1313 		lsr	r3, r3, #4
 790 0034 FB80     		strh	r3, [r7, #6]	@ movhi
 791              	.L35:
 607:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 608:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             default: /* Do not shift for 12 bits */
 609:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 break;
 610:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         }
 611:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End CY_PSOC5A */
 612:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 613:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 792              		.loc 1 613 0
 793 0036 40F20003 		movw	r3, #:lower16:ADC_SAR_1_shift
 794 003a C0F20003 		movt	r3, #:upper16:ADC_SAR_1_shift
 795 003e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 796 0040 9BB2     		uxth	r3, r3
 797 0042 9BB2     		uxth	r3, r3
 798 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 799 0046 C3EB0203 		rsb	r3, r3, r2
 800 004a 9BB2     		uxth	r3, r3
 801 004c 1BB2     		sxth	r3, r3
 614:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 802              		.loc 1 614 0
 803 004e 1846     		mov	r0, r3
 804 0050 07F10C07 		add	r7, r7, #12
 805 0054 BD46     		mov	sp, r7
 806 0056 80BC     		pop	{r7}
 807 0058 7047     		bx	lr
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 26


 808              		.cfi_endproc
 809              	.LFE10:
 810              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 811 005a 00BF     		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 812              		.align	2
 813              		.global	ADC_SAR_1_SetOffset
 814              		.thumb
 815              		.thumb_func
 816              		.type	ADC_SAR_1_SetOffset, %function
 817              	ADC_SAR_1_SetOffset:
 818              	.LFB11:
 615:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 616:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 617:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 618:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 619:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 620:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 621:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 622:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function sets the offset for voltage readings.
 623:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 624:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 625:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: Offset in counts
 626:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 627:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 628:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 629:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 630:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 631:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 632:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 633:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 634:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 635:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 636:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 637:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 639:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 819              		.loc 1 639 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824 0000 80B4     		push	{r7}
 825              	.LCFI29:
 826              		.cfi_def_cfa_offset 4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI30:
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_offset 7, -4
 832              	.LCFI31:
 833              		.cfi_def_cfa_register 7
 834 0006 0346     		mov	r3, r0
 835 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 640:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 836              		.loc 1 640 0
 837 000a 40F20003 		movw	r3, #:lower16:ADC_SAR_1_offset
 838 000e C0F20003 		movt	r3, #:upper16:ADC_SAR_1_offset
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 27


 839 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 840 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 641:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 841              		.loc 1 641 0
 842 0016 07F10C07 		add	r7, r7, #12
 843 001a BD46     		mov	sp, r7
 844 001c 80BC     		pop	{r7}
 845 001e 7047     		bx	lr
 846              		.cfi_endproc
 847              	.LFE11:
 848              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 849              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
 850              		.align	2
 851              		.thumb
 852              		.thumb_func
 853              		.type	ADC_SAR_1_CalcGain, %function
 854              	ADC_SAR_1_CalcGain:
 855              	.LFB12:
 642:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 643:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 644:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 646:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 648:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 649:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per volt.
 650:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 651:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 652:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 653:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 654:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 655:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 656:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 657:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 658:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 659:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2's compliment form.
 660:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPerVolt variable initialized. This variable is used
 661:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 662:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 663:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 665:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 856              		.loc 1 665 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 16
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860 0000 80B5     		push	{r7, lr}
 861              	.LCFI32:
 862              		.cfi_def_cfa_offset 8
 863 0002 84B0     		sub	sp, sp, #16
 864              	.LCFI33:
 865              		.cfi_def_cfa_offset 24
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_offset 14, -4
 868              		.cfi_offset 7, -8
 869              	.LCFI34:
 870              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 28


 871 0006 0346     		mov	r3, r0
 872 0008 FB71     		strb	r3, [r7, #7]
 666:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 667:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 668:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 669:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 670:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 671:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 672:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 673:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 873              		.loc 1 673 0
 874 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 875 000c 0A2B     		cmp	r3, #10
 876 000e 08D0     		beq	.L44
 877 0010 0C2B     		cmp	r3, #12
 878 0012 02D0     		beq	.L45
 879 0014 082B     		cmp	r3, #8
 880 0016 08D0     		beq	.L43
 881 0018 0BE0     		b	.L48
 882              	.L45:
 674:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 675:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 676:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX;
 883              		.loc 1 676 0
 884 001a 40F6FF73 		movw	r3, #4095
 885 001e FB60     		str	r3, [r7, #12]
 677:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 678:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 679:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 680:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 681:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 682:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 886              		.loc 1 682 0
 887 0020 0EE0     		b	.L46
 888              	.L44:
 683:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 684:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)(ADC_SAR_1_SAR_WRK_MAX >> 2u);
 889              		.loc 1 684 0
 890 0022 40F2FF33 		movw	r3, #1023
 891 0026 FB60     		str	r3, [r7, #12]
 685:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 686:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 687:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 688:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
 689:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 690:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 892              		.loc 1 690 0
 893 0028 0AE0     		b	.L46
 894              	.L43:
 691:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 692:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)(ADC_SAR_1_SAR_WRK_MAX >> 4u);
 895              		.loc 1 692 0
 896 002a 4FF0FF03 		mov	r3, #255
 897 002e FB60     		str	r3, [r7, #12]
 693:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 694:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 695:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 29


 696:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 697:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 698:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 898              		.loc 1 698 0
 899 0030 06E0     		b	.L46
 900              	.L48:
 699:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 700:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 901              		.loc 1 700 0
 902 0032 4FF00003 		mov	r3, #0
 903 0036 FB60     		str	r3, [r7, #12]
 701:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 702:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 703:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 704:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 705:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 706:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 904              		.loc 1 706 0
 905 0038 4FF00000 		mov	r0, #0
 906 003c FFF7FEFF 		bl	CyHalt
 907              	.L46:
 707:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 708:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 709:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     counts *= 1000; /* To avoid float point arithmetic*/
 908              		.loc 1 709 0
 909 0040 FB68     		ldr	r3, [r7, #12]
 910 0042 4FF47A72 		mov	r2, #1000
 911 0046 02FB03F3 		mul	r3, r2, r3
 912 004a FB60     		str	r3, [r7, #12]
 710:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = (int16)(counts / ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV / 2);
 913              		.loc 1 710 0
 914 004c FB68     		ldr	r3, [r7, #12]
 915 004e 03F5FE62 		add	r2, r3, #2032
 916 0052 02F10F02 		add	r2, r2, #15
 917 0056 002B     		cmp	r3, #0
 918 0058 B8BF     		it	lt
 919 005a 1346     		movlt	r3, r2
 920 005c 4FEAE323 		asr	r3, r3, #11
 921 0060 9AB2     		uxth	r2, r3
 922 0062 40F20003 		movw	r3, #:lower16:ADC_SAR_1_countsPerVolt
 923 0066 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_countsPerVolt
 924 006a 1A80     		strh	r2, [r3, #0]	@ movhi
 711:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 712:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 713:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 714:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 715:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
 925              		.loc 1 715 0
 926 006c 40F20003 		movw	r3, #:lower16:ADC_SAR_1_shift
 927 0070 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_shift
 928 0074 4FF00002 		mov	r2, #0
 929 0078 1A80     		strh	r2, [r3, #0]	@ movhi
 716:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 717:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 718:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 719:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 930              		.loc 1 719 0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 30


 931 007a 07F11007 		add	r7, r7, #16
 932 007e BD46     		mov	sp, r7
 933 0080 80BD     		pop	{r7, pc}
 934              		.cfi_endproc
 935              	.LFE12:
 936              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 937 0082 00BF     		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 938              		.align	2
 939              		.global	ADC_SAR_1_SetGain
 940              		.thumb
 941              		.thumb_func
 942              		.type	ADC_SAR_1_SetGain, %function
 943              	ADC_SAR_1_SetGain:
 944              	.LFB13:
 720:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 721:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 722:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 724:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 725:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 726:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 727:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function sets the ADC gain in counts per volt.
 728:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 730:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16  adcGain  counts per volt
 731:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 733:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 734:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 736:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPerVolt variable modified. This variable is used
 737:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 738:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 739:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 740:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 741:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 945              		.loc 1 741 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 8
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950 0000 80B4     		push	{r7}
 951              	.LCFI35:
 952              		.cfi_def_cfa_offset 4
 953 0002 83B0     		sub	sp, sp, #12
 954              	.LCFI36:
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              		.cfi_offset 7, -4
 958              	.LCFI37:
 959              		.cfi_def_cfa_register 7
 960 0006 0346     		mov	r3, r0
 961 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 742:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = adcGain;
 962              		.loc 1 742 0
 963 000a 40F20003 		movw	r3, #:lower16:ADC_SAR_1_countsPerVolt
 964 000e C0F20003 		movt	r3, #:upper16:ADC_SAR_1_countsPerVolt
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 31


 965 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 966 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 743:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 967              		.loc 1 743 0
 968 0016 07F10C07 		add	r7, r7, #12
 969 001a BD46     		mov	sp, r7
 970 001c 80BC     		pop	{r7}
 971 001e 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE13:
 974              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 975              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 976              		.align	2
 977              		.global	ADC_SAR_1_CountsTo_mVolts
 978              		.thumb
 979              		.thumb_func
 980              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 981              	ADC_SAR_1_CountsTo_mVolts:
 982              	.LFB14:
 744:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 745:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 746:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 748:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 750:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 751:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function converts ADC counts to mVolts
 752:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 753:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 754:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16  adcCounts   Reading from ADC.
 755:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 756:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 757:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16  Result in mVolts
 758:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 759:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 761:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPerVolt variable used.
 762:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 763:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 764:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 765:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 983              		.loc 1 765 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 16
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988 0000 80B4     		push	{r7}
 989              	.LCFI38:
 990              		.cfi_def_cfa_offset 4
 991 0002 85B0     		sub	sp, sp, #20
 992              	.LCFI39:
 993              		.cfi_def_cfa_offset 24
 994 0004 00AF     		add	r7, sp, #0
 995              		.cfi_offset 7, -4
 996              	.LCFI40:
 997              		.cfi_def_cfa_register 7
 998 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 32


 999 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 766:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 768:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 769:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 770:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1000              		.loc 1 770 0
 1001 000a FA88     		ldrh	r2, [r7, #6]
 1002 000c 40F20003 		movw	r3, #:lower16:ADC_SAR_1_offset
 1003 0010 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_offset
 1004 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1005 0016 9BB2     		uxth	r3, r3
 1006 0018 9BB2     		uxth	r3, r3
 1007 001a C3EB0203 		rsb	r3, r3, r2
 1008 001e 9BB2     		uxth	r3, r3
 1009 0020 FB80     		strh	r3, [r7, #6]	@ movhi
 771:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 772:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)(( (int32)adcCounts * 1000 ) / ADC_SAR_1_countsPerVolt) ;
 1010              		.loc 1 772 0
 1011 0022 B7F90630 		ldrsh	r3, [r7, #6]
 1012 0026 4FF47A72 		mov	r2, #1000
 1013 002a 02FB03F2 		mul	r2, r2, r3
 1014 002e 40F20003 		movw	r3, #:lower16:ADC_SAR_1_countsPerVolt
 1015 0032 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_countsPerVolt
 1016 0036 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1017 0038 9BB2     		uxth	r3, r3
 1018 003a 1BB2     		sxth	r3, r3
 1019 003c 92FBF3F3 		sdiv	r3, r2, r3
 1020 0040 FB81     		strh	r3, [r7, #14]	@ movhi
 773:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 774:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 1021              		.loc 1 774 0
 1022 0042 FB89     		ldrh	r3, [r7, #14]
 1023 0044 1BB2     		sxth	r3, r3
 775:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1024              		.loc 1 775 0
 1025 0046 1846     		mov	r0, r3
 1026 0048 07F11407 		add	r7, r7, #20
 1027 004c BD46     		mov	sp, r7
 1028 004e 80BC     		pop	{r7}
 1029 0050 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE14:
 1032              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 1033 0052 00BF     		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 1034              		.align	2
 1035              		.global	ADC_SAR_1_CountsTo_uVolts
 1036              		.thumb
 1037              		.thumb_func
 1038              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 1039              	ADC_SAR_1_CountsTo_uVolts:
 1040              	.LFB15:
 776:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 777:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 778:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 779:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 780:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 33


 781:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 782:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 783:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function converts ADC counts to micro Volts
 784:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 785:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 786:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16  adcCounts   Reading from ADC.
 787:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 788:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 789:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32  Result in micro Volts
 790:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 791:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 792:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 793:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPerVolt variable used.
 794:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 795:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 796:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 797:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1041              		.loc 1 797 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 16
 1044              		@ frame_needed = 1, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046 0000 80B4     		push	{r7}
 1047              	.LCFI41:
 1048              		.cfi_def_cfa_offset 4
 1049 0002 85B0     		sub	sp, sp, #20
 1050              	.LCFI42:
 1051              		.cfi_def_cfa_offset 24
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_offset 7, -4
 1054              	.LCFI43:
 1055              		.cfi_def_cfa_register 7
 1056 0006 0346     		mov	r3, r0
 1057 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 798:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 799:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 uVolts;
 800:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 801:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 802:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1058              		.loc 1 802 0
 1059 000a FA88     		ldrh	r2, [r7, #6]
 1060 000c 40F20003 		movw	r3, #:lower16:ADC_SAR_1_offset
 1061 0010 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_offset
 1062 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1063 0016 9BB2     		uxth	r3, r3
 1064 0018 9BB2     		uxth	r3, r3
 1065 001a C3EB0203 		rsb	r3, r3, r2
 1066 001e 9BB2     		uxth	r3, r3
 1067 0020 FB80     		strh	r3, [r7, #6]	@ movhi
 803:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 804:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 1 million. It is multiplied on 500000 and later on 2 to
 805:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  to avoid 32bit arithmetic overflows.
 806:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 807:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int32)adcCounts * 500000 ) / ADC_SAR_1_countsPerVolt) * 2;
 1068              		.loc 1 807 0
 1069 0022 B7F90620 		ldrsh	r2, [r7, #6]
 1070 0026 4AF22013 		movw	r3, #:lower16:500000
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 34


 1071 002a C0F20703 		movt	r3, #:upper16:500000
 1072 002e 03FB02F2 		mul	r2, r3, r2
 1073 0032 40F20003 		movw	r3, #:lower16:ADC_SAR_1_countsPerVolt
 1074 0036 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_countsPerVolt
 1075 003a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1076 003c 9BB2     		uxth	r3, r3
 1077 003e 1BB2     		sxth	r3, r3
 1078 0040 92FBF3F3 		sdiv	r3, r2, r3
 1079 0044 4FEA4303 		lsl	r3, r3, #1
 1080 0048 FB60     		str	r3, [r7, #12]
 808:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 809:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( uVolts );
 1081              		.loc 1 809 0
 1082 004a FB68     		ldr	r3, [r7, #12]
 810:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1083              		.loc 1 810 0
 1084 004c 1846     		mov	r0, r3
 1085 004e 07F11407 		add	r7, r7, #20
 1086 0052 BD46     		mov	sp, r7
 1087 0054 80BC     		pop	{r7}
 1088 0056 7047     		bx	lr
 1089              		.cfi_endproc
 1090              	.LFE15:
 1091              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 1092              		.global	__aeabi_i2f
 1093              		.global	__aeabi_fdiv
 1094              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 1095              		.align	2
 1096              		.global	ADC_SAR_1_CountsTo_Volts
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	ADC_SAR_1_CountsTo_Volts, %function
 1100              	ADC_SAR_1_CountsTo_Volts:
 1101              	.LFB16:
 811:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 812:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 813:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 815:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 816:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 817:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 818:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function converts ADC counts to Volts
 819:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 820:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 821:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16  adcCounts   Reading from ADC.
 822:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 823:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 824:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  float  Result in mVolts
 825:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 826:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 827:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 828:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPerVolt variable used.
 829:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 830:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 831:.\Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 832:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1102              		.loc 1 832 0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 35


 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 16
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 90B5     		push	{r4, r7, lr}
 1107              	.LCFI44:
 1108              		.cfi_def_cfa_offset 12
 1109 0002 85B0     		sub	sp, sp, #20
 1110              	.LCFI45:
 1111              		.cfi_def_cfa_offset 32
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_offset 14, -4
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 4, -12
 1116              	.LCFI46:
 1117              		.cfi_def_cfa_register 7
 1118 0006 0346     		mov	r3, r0
 1119 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 833:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 834:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 835:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 836:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1120              		.loc 1 836 0
 1121 000a FA88     		ldrh	r2, [r7, #6]
 1122 000c 40F20003 		movw	r3, #:lower16:ADC_SAR_1_offset
 1123 0010 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_offset
 1124 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1125 0016 9BB2     		uxth	r3, r3
 1126 0018 9BB2     		uxth	r3, r3
 1127 001a C3EB0203 		rsb	r3, r3, r2
 1128 001e 9BB2     		uxth	r3, r3
 1129 0020 FB80     		strh	r3, [r7, #6]	@ movhi
 837:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 838:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = (float32)adcCounts / (float32)ADC_SAR_1_countsPerVolt;
 1130              		.loc 1 838 0
 1131 0022 B7F90630 		ldrsh	r3, [r7, #6]
 1132 0026 1846     		mov	r0, r3
 1133 0028 FFF7FEFF 		bl	__aeabi_i2f
 1134 002c 0446     		mov	r4, r0
 1135 002e 40F20003 		movw	r3, #:lower16:ADC_SAR_1_countsPerVolt
 1136 0032 C0F20003 		movt	r3, #:upper16:ADC_SAR_1_countsPerVolt
 1137 0036 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1138 0038 9BB2     		uxth	r3, r3
 1139 003a 1BB2     		sxth	r3, r3
 1140 003c 1846     		mov	r0, r3
 1141 003e FFF7FEFF 		bl	__aeabi_i2f
 1142 0042 0346     		mov	r3, r0
 1143 0044 2046     		mov	r0, r4
 1144 0046 1946     		mov	r1, r3
 1145 0048 FFF7FEFF 		bl	__aeabi_fdiv
 1146 004c 0346     		mov	r3, r0
 1147 004e FB60     		str	r3, [r7, #12]	@ float
 839:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 840:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 1148              		.loc 1 840 0
 1149 0050 FB68     		ldr	r3, [r7, #12]	@ float
 841:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1150              		.loc 1 841 0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 36


 1151 0052 1846     		mov	r0, r3
 1152 0054 07F11407 		add	r7, r7, #20
 1153 0058 BD46     		mov	sp, r7
 1154 005a 90BD     		pop	{r4, r7, pc}
 1155              		.cfi_endproc
 1156              	.LFE16:
 1157              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 1158              		.text
 1159              	.Letext0:
 1160              		.section	.debug_loc,"",%progbits
 1161              	.Ldebug_loc0:
 1162              	.LLST0:
 1163 0000 00000000 		.4byte	.LFB0
 1164 0004 02000000 		.4byte	.LCFI0
 1165 0008 0100     		.2byte	0x1
 1166 000a 5D       		.byte	0x5d
 1167 000b 02000000 		.4byte	.LCFI0
 1168 000f 04000000 		.4byte	.LCFI1
 1169 0013 0200     		.2byte	0x2
 1170 0015 7D       		.byte	0x7d
 1171 0016 08       		.sleb128 8
 1172 0017 04000000 		.4byte	.LCFI1
 1173 001b 2A000000 		.4byte	.LFE0
 1174 001f 0200     		.2byte	0x2
 1175 0021 77       		.byte	0x77
 1176 0022 08       		.sleb128 8
 1177 0023 00000000 		.4byte	0x0
 1178 0027 00000000 		.4byte	0x0
 1179              	.LLST1:
 1180 002b 00000000 		.4byte	.LFB1
 1181 002f 02000000 		.4byte	.LCFI2
 1182 0033 0100     		.2byte	0x1
 1183 0035 5D       		.byte	0x5d
 1184 0036 02000000 		.4byte	.LCFI2
 1185 003a 04000000 		.4byte	.LCFI3
 1186 003e 0200     		.2byte	0x2
 1187 0040 7D       		.byte	0x7d
 1188 0041 08       		.sleb128 8
 1189 0042 04000000 		.4byte	.LCFI3
 1190 0046 5C000000 		.4byte	.LFE1
 1191 004a 0200     		.2byte	0x2
 1192 004c 77       		.byte	0x77
 1193 004d 08       		.sleb128 8
 1194 004e 00000000 		.4byte	0x0
 1195 0052 00000000 		.4byte	0x0
 1196              	.LLST2:
 1197 0056 00000000 		.4byte	.LFB2
 1198 005a 02000000 		.4byte	.LCFI4
 1199 005e 0100     		.2byte	0x1
 1200 0060 5D       		.byte	0x5d
 1201 0061 02000000 		.4byte	.LCFI4
 1202 0065 04000000 		.4byte	.LCFI5
 1203 0069 0200     		.2byte	0x2
 1204 006b 7D       		.byte	0x7d
 1205 006c 08       		.sleb128 8
 1206 006d 04000000 		.4byte	.LCFI5
 1207 0071 06000000 		.4byte	.LCFI6
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 37


 1208 0075 0200     		.2byte	0x2
 1209 0077 7D       		.byte	0x7d
 1210 0078 10       		.sleb128 16
 1211 0079 06000000 		.4byte	.LCFI6
 1212 007d 78010000 		.4byte	.LFE2
 1213 0081 0200     		.2byte	0x2
 1214 0083 77       		.byte	0x77
 1215 0084 10       		.sleb128 16
 1216 0085 00000000 		.4byte	0x0
 1217 0089 00000000 		.4byte	0x0
 1218              	.LLST3:
 1219 008d 00000000 		.4byte	.LFB3
 1220 0091 02000000 		.4byte	.LCFI7
 1221 0095 0100     		.2byte	0x1
 1222 0097 5D       		.byte	0x5d
 1223 0098 02000000 		.4byte	.LCFI7
 1224 009c 04000000 		.4byte	.LCFI8
 1225 00a0 0200     		.2byte	0x2
 1226 00a2 7D       		.byte	0x7d
 1227 00a3 08       		.sleb128 8
 1228 00a4 04000000 		.4byte	.LCFI8
 1229 00a8 06000000 		.4byte	.LCFI9
 1230 00ac 0200     		.2byte	0x2
 1231 00ae 7D       		.byte	0x7d
 1232 00af 10       		.sleb128 16
 1233 00b0 06000000 		.4byte	.LCFI9
 1234 00b4 DC000000 		.4byte	.LFE3
 1235 00b8 0200     		.2byte	0x2
 1236 00ba 77       		.byte	0x77
 1237 00bb 10       		.sleb128 16
 1238 00bc 00000000 		.4byte	0x0
 1239 00c0 00000000 		.4byte	0x0
 1240              	.LLST4:
 1241 00c4 00000000 		.4byte	.LFB4
 1242 00c8 02000000 		.4byte	.LCFI10
 1243 00cc 0100     		.2byte	0x1
 1244 00ce 5D       		.byte	0x5d
 1245 00cf 02000000 		.4byte	.LCFI10
 1246 00d3 04000000 		.4byte	.LCFI11
 1247 00d7 0200     		.2byte	0x2
 1248 00d9 7D       		.byte	0x7d
 1249 00da 04       		.sleb128 4
 1250 00db 04000000 		.4byte	.LCFI11
 1251 00df 06000000 		.4byte	.LCFI12
 1252 00e3 0200     		.2byte	0x2
 1253 00e5 7D       		.byte	0x7d
 1254 00e6 18       		.sleb128 24
 1255 00e7 06000000 		.4byte	.LCFI12
 1256 00eb 4A000000 		.4byte	.LFE4
 1257 00ef 0200     		.2byte	0x2
 1258 00f1 77       		.byte	0x77
 1259 00f2 18       		.sleb128 24
 1260 00f3 00000000 		.4byte	0x0
 1261 00f7 00000000 		.4byte	0x0
 1262              	.LLST5:
 1263 00fb 00000000 		.4byte	.LFB5
 1264 00ff 02000000 		.4byte	.LCFI13
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 38


 1265 0103 0100     		.2byte	0x1
 1266 0105 5D       		.byte	0x5d
 1267 0106 02000000 		.4byte	.LCFI13
 1268 010a 04000000 		.4byte	.LCFI14
 1269 010e 0200     		.2byte	0x2
 1270 0110 7D       		.byte	0x7d
 1271 0111 08       		.sleb128 8
 1272 0112 04000000 		.4byte	.LCFI14
 1273 0116 06000000 		.4byte	.LCFI15
 1274 011a 0200     		.2byte	0x2
 1275 011c 7D       		.byte	0x7d
 1276 011d 18       		.sleb128 24
 1277 011e 06000000 		.4byte	.LCFI15
 1278 0122 68000000 		.4byte	.LFE5
 1279 0126 0200     		.2byte	0x2
 1280 0128 77       		.byte	0x77
 1281 0129 18       		.sleb128 24
 1282 012a 00000000 		.4byte	0x0
 1283 012e 00000000 		.4byte	0x0
 1284              	.LLST6:
 1285 0132 00000000 		.4byte	.LFB6
 1286 0136 02000000 		.4byte	.LCFI16
 1287 013a 0100     		.2byte	0x1
 1288 013c 5D       		.byte	0x5d
 1289 013d 02000000 		.4byte	.LCFI16
 1290 0141 04000000 		.4byte	.LCFI17
 1291 0145 0200     		.2byte	0x2
 1292 0147 7D       		.byte	0x7d
 1293 0148 04       		.sleb128 4
 1294 0149 04000000 		.4byte	.LCFI17
 1295 014d 26000000 		.4byte	.LFE6
 1296 0151 0200     		.2byte	0x2
 1297 0153 77       		.byte	0x77
 1298 0154 04       		.sleb128 4
 1299 0155 00000000 		.4byte	0x0
 1300 0159 00000000 		.4byte	0x0
 1301              	.LLST7:
 1302 015d 00000000 		.4byte	.LFB7
 1303 0161 02000000 		.4byte	.LCFI18
 1304 0165 0100     		.2byte	0x1
 1305 0167 5D       		.byte	0x5d
 1306 0168 02000000 		.4byte	.LCFI18
 1307 016c 04000000 		.4byte	.LCFI19
 1308 0170 0200     		.2byte	0x2
 1309 0172 7D       		.byte	0x7d
 1310 0173 04       		.sleb128 4
 1311 0174 04000000 		.4byte	.LCFI19
 1312 0178 24000000 		.4byte	.LFE7
 1313 017c 0200     		.2byte	0x2
 1314 017e 77       		.byte	0x77
 1315 017f 04       		.sleb128 4
 1316 0180 00000000 		.4byte	0x0
 1317 0184 00000000 		.4byte	0x0
 1318              	.LLST8:
 1319 0188 00000000 		.4byte	.LFB8
 1320 018c 02000000 		.4byte	.LCFI20
 1321 0190 0100     		.2byte	0x1
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 39


 1322 0192 5D       		.byte	0x5d
 1323 0193 02000000 		.4byte	.LCFI20
 1324 0197 04000000 		.4byte	.LCFI21
 1325 019b 0200     		.2byte	0x2
 1326 019d 7D       		.byte	0x7d
 1327 019e 08       		.sleb128 8
 1328 019f 04000000 		.4byte	.LCFI21
 1329 01a3 06000000 		.4byte	.LCFI22
 1330 01a7 0200     		.2byte	0x2
 1331 01a9 7D       		.byte	0x7d
 1332 01aa 18       		.sleb128 24
 1333 01ab 06000000 		.4byte	.LCFI22
 1334 01af 4C000000 		.4byte	.LFE8
 1335 01b3 0200     		.2byte	0x2
 1336 01b5 77       		.byte	0x77
 1337 01b6 18       		.sleb128 24
 1338 01b7 00000000 		.4byte	0x0
 1339 01bb 00000000 		.4byte	0x0
 1340              	.LLST9:
 1341 01bf 00000000 		.4byte	.LFB9
 1342 01c3 02000000 		.4byte	.LCFI23
 1343 01c7 0100     		.2byte	0x1
 1344 01c9 5D       		.byte	0x5d
 1345 01ca 02000000 		.4byte	.LCFI23
 1346 01ce 04000000 		.4byte	.LCFI24
 1347 01d2 0200     		.2byte	0x2
 1348 01d4 7D       		.byte	0x7d
 1349 01d5 04       		.sleb128 4
 1350 01d6 04000000 		.4byte	.LCFI24
 1351 01da 06000000 		.4byte	.LCFI25
 1352 01de 0200     		.2byte	0x2
 1353 01e0 7D       		.byte	0x7d
 1354 01e1 10       		.sleb128 16
 1355 01e2 06000000 		.4byte	.LCFI25
 1356 01e6 5C000000 		.4byte	.LFE9
 1357 01ea 0200     		.2byte	0x2
 1358 01ec 77       		.byte	0x77
 1359 01ed 10       		.sleb128 16
 1360 01ee 00000000 		.4byte	0x0
 1361 01f2 00000000 		.4byte	0x0
 1362              	.LLST10:
 1363 01f6 00000000 		.4byte	.LFB10
 1364 01fa 02000000 		.4byte	.LCFI26
 1365 01fe 0100     		.2byte	0x1
 1366 0200 5D       		.byte	0x5d
 1367 0201 02000000 		.4byte	.LCFI26
 1368 0205 04000000 		.4byte	.LCFI27
 1369 0209 0200     		.2byte	0x2
 1370 020b 7D       		.byte	0x7d
 1371 020c 04       		.sleb128 4
 1372 020d 04000000 		.4byte	.LCFI27
 1373 0211 06000000 		.4byte	.LCFI28
 1374 0215 0200     		.2byte	0x2
 1375 0217 7D       		.byte	0x7d
 1376 0218 10       		.sleb128 16
 1377 0219 06000000 		.4byte	.LCFI28
 1378 021d 5A000000 		.4byte	.LFE10
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 40


 1379 0221 0200     		.2byte	0x2
 1380 0223 77       		.byte	0x77
 1381 0224 10       		.sleb128 16
 1382 0225 00000000 		.4byte	0x0
 1383 0229 00000000 		.4byte	0x0
 1384              	.LLST11:
 1385 022d 00000000 		.4byte	.LFB11
 1386 0231 02000000 		.4byte	.LCFI29
 1387 0235 0100     		.2byte	0x1
 1388 0237 5D       		.byte	0x5d
 1389 0238 02000000 		.4byte	.LCFI29
 1390 023c 04000000 		.4byte	.LCFI30
 1391 0240 0200     		.2byte	0x2
 1392 0242 7D       		.byte	0x7d
 1393 0243 04       		.sleb128 4
 1394 0244 04000000 		.4byte	.LCFI30
 1395 0248 06000000 		.4byte	.LCFI31
 1396 024c 0200     		.2byte	0x2
 1397 024e 7D       		.byte	0x7d
 1398 024f 10       		.sleb128 16
 1399 0250 06000000 		.4byte	.LCFI31
 1400 0254 20000000 		.4byte	.LFE11
 1401 0258 0200     		.2byte	0x2
 1402 025a 77       		.byte	0x77
 1403 025b 10       		.sleb128 16
 1404 025c 00000000 		.4byte	0x0
 1405 0260 00000000 		.4byte	0x0
 1406              	.LLST12:
 1407 0264 00000000 		.4byte	.LFB12
 1408 0268 02000000 		.4byte	.LCFI32
 1409 026c 0100     		.2byte	0x1
 1410 026e 5D       		.byte	0x5d
 1411 026f 02000000 		.4byte	.LCFI32
 1412 0273 04000000 		.4byte	.LCFI33
 1413 0277 0200     		.2byte	0x2
 1414 0279 7D       		.byte	0x7d
 1415 027a 08       		.sleb128 8
 1416 027b 04000000 		.4byte	.LCFI33
 1417 027f 06000000 		.4byte	.LCFI34
 1418 0283 0200     		.2byte	0x2
 1419 0285 7D       		.byte	0x7d
 1420 0286 18       		.sleb128 24
 1421 0287 06000000 		.4byte	.LCFI34
 1422 028b 82000000 		.4byte	.LFE12
 1423 028f 0200     		.2byte	0x2
 1424 0291 77       		.byte	0x77
 1425 0292 18       		.sleb128 24
 1426 0293 00000000 		.4byte	0x0
 1427 0297 00000000 		.4byte	0x0
 1428              	.LLST13:
 1429 029b 00000000 		.4byte	.LFB13
 1430 029f 02000000 		.4byte	.LCFI35
 1431 02a3 0100     		.2byte	0x1
 1432 02a5 5D       		.byte	0x5d
 1433 02a6 02000000 		.4byte	.LCFI35
 1434 02aa 04000000 		.4byte	.LCFI36
 1435 02ae 0200     		.2byte	0x2
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 41


 1436 02b0 7D       		.byte	0x7d
 1437 02b1 04       		.sleb128 4
 1438 02b2 04000000 		.4byte	.LCFI36
 1439 02b6 06000000 		.4byte	.LCFI37
 1440 02ba 0200     		.2byte	0x2
 1441 02bc 7D       		.byte	0x7d
 1442 02bd 10       		.sleb128 16
 1443 02be 06000000 		.4byte	.LCFI37
 1444 02c2 20000000 		.4byte	.LFE13
 1445 02c6 0200     		.2byte	0x2
 1446 02c8 77       		.byte	0x77
 1447 02c9 10       		.sleb128 16
 1448 02ca 00000000 		.4byte	0x0
 1449 02ce 00000000 		.4byte	0x0
 1450              	.LLST14:
 1451 02d2 00000000 		.4byte	.LFB14
 1452 02d6 02000000 		.4byte	.LCFI38
 1453 02da 0100     		.2byte	0x1
 1454 02dc 5D       		.byte	0x5d
 1455 02dd 02000000 		.4byte	.LCFI38
 1456 02e1 04000000 		.4byte	.LCFI39
 1457 02e5 0200     		.2byte	0x2
 1458 02e7 7D       		.byte	0x7d
 1459 02e8 04       		.sleb128 4
 1460 02e9 04000000 		.4byte	.LCFI39
 1461 02ed 06000000 		.4byte	.LCFI40
 1462 02f1 0200     		.2byte	0x2
 1463 02f3 7D       		.byte	0x7d
 1464 02f4 18       		.sleb128 24
 1465 02f5 06000000 		.4byte	.LCFI40
 1466 02f9 52000000 		.4byte	.LFE14
 1467 02fd 0200     		.2byte	0x2
 1468 02ff 77       		.byte	0x77
 1469 0300 18       		.sleb128 24
 1470 0301 00000000 		.4byte	0x0
 1471 0305 00000000 		.4byte	0x0
 1472              	.LLST15:
 1473 0309 00000000 		.4byte	.LFB15
 1474 030d 02000000 		.4byte	.LCFI41
 1475 0311 0100     		.2byte	0x1
 1476 0313 5D       		.byte	0x5d
 1477 0314 02000000 		.4byte	.LCFI41
 1478 0318 04000000 		.4byte	.LCFI42
 1479 031c 0200     		.2byte	0x2
 1480 031e 7D       		.byte	0x7d
 1481 031f 04       		.sleb128 4
 1482 0320 04000000 		.4byte	.LCFI42
 1483 0324 06000000 		.4byte	.LCFI43
 1484 0328 0200     		.2byte	0x2
 1485 032a 7D       		.byte	0x7d
 1486 032b 18       		.sleb128 24
 1487 032c 06000000 		.4byte	.LCFI43
 1488 0330 58000000 		.4byte	.LFE15
 1489 0334 0200     		.2byte	0x2
 1490 0336 77       		.byte	0x77
 1491 0337 18       		.sleb128 24
 1492 0338 00000000 		.4byte	0x0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 42


 1493 033c 00000000 		.4byte	0x0
 1494              	.LLST16:
 1495 0340 00000000 		.4byte	.LFB16
 1496 0344 02000000 		.4byte	.LCFI44
 1497 0348 0100     		.2byte	0x1
 1498 034a 5D       		.byte	0x5d
 1499 034b 02000000 		.4byte	.LCFI44
 1500 034f 04000000 		.4byte	.LCFI45
 1501 0353 0200     		.2byte	0x2
 1502 0355 7D       		.byte	0x7d
 1503 0356 0C       		.sleb128 12
 1504 0357 04000000 		.4byte	.LCFI45
 1505 035b 06000000 		.4byte	.LCFI46
 1506 035f 0200     		.2byte	0x2
 1507 0361 7D       		.byte	0x7d
 1508 0362 20       		.sleb128 32
 1509 0363 06000000 		.4byte	.LCFI46
 1510 0367 5C000000 		.4byte	.LFE16
 1511 036b 0200     		.2byte	0x2
 1512 036d 77       		.byte	0x77
 1513 036e 20       		.sleb128 32
 1514 036f 00000000 		.4byte	0x0
 1515 0373 00000000 		.4byte	0x0
 1516              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 1517              		.section	.debug_info
 1518 0000 27040000 		.4byte	0x427
 1519 0004 0200     		.2byte	0x2
 1520 0006 00000000 		.4byte	.Ldebug_abbrev0
 1521 000a 04       		.byte	0x4
 1522 000b 01       		.uleb128 0x1
 1523 000c 6C020000 		.4byte	.LASF52
 1524 0010 01       		.byte	0x1
 1525 0011 F8010000 		.4byte	.LASF53
 1526 0015 1B030000 		.4byte	.LASF54
 1527 0019 00000000 		.4byte	0x0
 1528 001d 00000000 		.4byte	0x0
 1529 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1530 0025 00000000 		.4byte	.Ldebug_line0
 1531 0029 02       		.uleb128 0x2
 1532 002a 01       		.byte	0x1
 1533 002b 06       		.byte	0x6
 1534 002c F4020000 		.4byte	.LASF0
 1535 0030 02       		.uleb128 0x2
 1536 0031 01       		.byte	0x1
 1537 0032 08       		.byte	0x8
 1538 0033 1F010000 		.4byte	.LASF1
 1539 0037 02       		.uleb128 0x2
 1540 0038 02       		.byte	0x2
 1541 0039 05       		.byte	0x5
 1542 003a CA020000 		.4byte	.LASF2
 1543 003e 02       		.uleb128 0x2
 1544 003f 02       		.byte	0x2
 1545 0040 07       		.byte	0x7
 1546 0041 69000000 		.4byte	.LASF3
 1547 0045 03       		.uleb128 0x3
 1548 0046 04       		.byte	0x4
 1549 0047 05       		.byte	0x5
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 43


 1550 0048 696E7400 		.ascii	"int\000"
 1551 004c 02       		.uleb128 0x2
 1552 004d 04       		.byte	0x4
 1553 004e 07       		.byte	0x7
 1554 004f C3010000 		.4byte	.LASF4
 1555 0053 02       		.uleb128 0x2
 1556 0054 08       		.byte	0x8
 1557 0055 05       		.byte	0x5
 1558 0056 00000000 		.4byte	.LASF5
 1559 005a 02       		.uleb128 0x2
 1560 005b 08       		.byte	0x8
 1561 005c 07       		.byte	0x7
 1562 005d E1010000 		.4byte	.LASF6
 1563 0061 02       		.uleb128 0x2
 1564 0062 04       		.byte	0x4
 1565 0063 05       		.byte	0x5
 1566 0064 EB020000 		.4byte	.LASF7
 1567 0068 04       		.uleb128 0x4
 1568 0069 04       		.byte	0x4
 1569 006a 07       		.byte	0x7
 1570 006b 02       		.uleb128 0x2
 1571 006c 04       		.byte	0x4
 1572 006d 07       		.byte	0x7
 1573 006e 43010000 		.4byte	.LASF8
 1574 0072 02       		.uleb128 0x2
 1575 0073 01       		.byte	0x1
 1576 0074 08       		.byte	0x8
 1577 0075 7F020000 		.4byte	.LASF9
 1578 0079 05       		.uleb128 0x5
 1579 007a E5020000 		.4byte	.LASF10
 1580 007e 02       		.byte	0x2
 1581 007f 4C       		.byte	0x4c
 1582 0080 30000000 		.4byte	0x30
 1583 0084 05       		.uleb128 0x5
 1584 0085 90010000 		.4byte	.LASF11
 1585 0089 02       		.byte	0x2
 1586 008a 4D       		.byte	0x4d
 1587 008b 3E000000 		.4byte	0x3e
 1588 008f 05       		.uleb128 0x5
 1589 0090 97010000 		.4byte	.LASF12
 1590 0094 02       		.byte	0x2
 1591 0095 4F       		.byte	0x4f
 1592 0096 29000000 		.4byte	0x29
 1593 009a 05       		.uleb128 0x5
 1594 009b 3D010000 		.4byte	.LASF13
 1595 009f 02       		.byte	0x2
 1596 00a0 50       		.byte	0x50
 1597 00a1 37000000 		.4byte	0x37
 1598 00a5 05       		.uleb128 0x5
 1599 00a6 55010000 		.4byte	.LASF14
 1600 00aa 02       		.byte	0x2
 1601 00ab 51       		.byte	0x51
 1602 00ac 61000000 		.4byte	0x61
 1603 00b0 05       		.uleb128 0x5
 1604 00b1 BB000000 		.4byte	.LASF15
 1605 00b5 02       		.byte	0x2
 1606 00b6 52       		.byte	0x52
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 44


 1607 00b7 BB000000 		.4byte	0xbb
 1608 00bb 02       		.uleb128 0x2
 1609 00bc 04       		.byte	0x4
 1610 00bd 04       		.byte	0x4
 1611 00be DC000000 		.4byte	.LASF16
 1612 00c2 02       		.uleb128 0x2
 1613 00c3 08       		.byte	0x8
 1614 00c4 04       		.byte	0x4
 1615 00c5 81010000 		.4byte	.LASF17
 1616 00c9 06       		.uleb128 0x6
 1617 00ca 01       		.byte	0x1
 1618 00cb 00030000 		.4byte	.LASF18
 1619 00cf 01       		.byte	0x1
 1620 00d0 4B       		.byte	0x4b
 1621 00d1 01       		.byte	0x1
 1622 00d2 00000000 		.4byte	.LFB0
 1623 00d6 2A000000 		.4byte	.LFE0
 1624 00da 00000000 		.4byte	.LLST0
 1625 00de 06       		.uleb128 0x6
 1626 00df 01       		.byte	0x1
 1627 00e0 53000000 		.4byte	.LASF19
 1628 00e4 01       		.byte	0x1
 1629 00e5 6B       		.byte	0x6b
 1630 00e6 01       		.byte	0x1
 1631 00e7 00000000 		.4byte	.LFB1
 1632 00eb 5C000000 		.4byte	.LFE1
 1633 00ef 2B000000 		.4byte	.LLST1
 1634 00f3 07       		.uleb128 0x7
 1635 00f4 01       		.byte	0x1
 1636 00f5 FC000000 		.4byte	.LASF22
 1637 00f9 01       		.byte	0x1
 1638 00fa 90       		.byte	0x90
 1639 00fb 01       		.byte	0x1
 1640 00fc 00000000 		.4byte	.LFB2
 1641 0100 78010000 		.4byte	.LFE2
 1642 0104 56000000 		.4byte	.LLST2
 1643 0108 29010000 		.4byte	0x129
 1644 010c 08       		.uleb128 0x8
 1645 010d 78020000 		.4byte	.LASF20
 1646 0111 01       		.byte	0x1
 1647 0112 92       		.byte	0x92
 1648 0113 79000000 		.4byte	0x79
 1649 0117 02       		.byte	0x2
 1650 0118 91       		.byte	0x91
 1651 0119 76       		.sleb128 -10
 1652 011a 08       		.uleb128 0x8
 1653 011b 5B010000 		.4byte	.LASF21
 1654 011f 01       		.byte	0x1
 1655 0120 93       		.byte	0x93
 1656 0121 79000000 		.4byte	0x79
 1657 0125 02       		.byte	0x2
 1658 0126 91       		.byte	0x91
 1659 0127 77       		.sleb128 -9
 1660 0128 00       		.byte	0x0
 1661 0129 07       		.uleb128 0x7
 1662 012a 01       		.byte	0x1
 1663 012b B4010000 		.4byte	.LASF23
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 45


 1664 012f 01       		.byte	0x1
 1665 0130 FE       		.byte	0xfe
 1666 0131 01       		.byte	0x1
 1667 0132 00000000 		.4byte	.LFB3
 1668 0136 DC000000 		.4byte	.LFE3
 1669 013a 8D000000 		.4byte	.LLST3
 1670 013e 52010000 		.4byte	0x152
 1671 0142 09       		.uleb128 0x9
 1672 0143 5B010000 		.4byte	.LASF21
 1673 0147 01       		.byte	0x1
 1674 0148 0001     		.2byte	0x100
 1675 014a 79000000 		.4byte	0x79
 1676 014e 02       		.byte	0x2
 1677 014f 91       		.byte	0x91
 1678 0150 77       		.sleb128 -9
 1679 0151 00       		.byte	0x0
 1680 0152 0A       		.uleb128 0xa
 1681 0153 01       		.byte	0x1
 1682 0154 23000000 		.4byte	.LASF24
 1683 0158 01       		.byte	0x1
 1684 0159 3201     		.2byte	0x132
 1685 015b 01       		.byte	0x1
 1686 015c 00000000 		.4byte	.LFB4
 1687 0160 4A000000 		.4byte	.LFE4
 1688 0164 C4000000 		.4byte	.LLST4
 1689 0168 8B010000 		.4byte	0x18b
 1690 016c 0B       		.uleb128 0xb
 1691 016d B5000000 		.4byte	.LASF26
 1692 0171 01       		.byte	0x1
 1693 0172 3201     		.2byte	0x132
 1694 0174 79000000 		.4byte	0x79
 1695 0178 02       		.byte	0x2
 1696 0179 91       		.byte	0x91
 1697 017a 6F       		.sleb128 -17
 1698 017b 09       		.uleb128 0x9
 1699 017c 78020000 		.4byte	.LASF20
 1700 0180 01       		.byte	0x1
 1701 0181 3401     		.2byte	0x134
 1702 0183 79000000 		.4byte	0x79
 1703 0187 02       		.byte	0x2
 1704 0188 91       		.byte	0x91
 1705 0189 77       		.sleb128 -9
 1706 018a 00       		.byte	0x0
 1707 018b 0A       		.uleb128 0xa
 1708 018c 01       		.byte	0x1
 1709 018d 7C000000 		.4byte	.LASF25
 1710 0191 01       		.byte	0x1
 1711 0192 6501     		.2byte	0x165
 1712 0194 01       		.byte	0x1
 1713 0195 00000000 		.4byte	.LFB5
 1714 0199 68000000 		.4byte	.LFE5
 1715 019d FB000000 		.4byte	.LLST5
 1716 01a1 C4010000 		.4byte	0x1c4
 1717 01a5 0B       		.uleb128 0xb
 1718 01a6 10030000 		.4byte	.LASF27
 1719 01aa 01       		.byte	0x1
 1720 01ab 6501     		.2byte	0x165
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 46


 1721 01ad 79000000 		.4byte	0x79
 1722 01b1 02       		.byte	0x2
 1723 01b2 91       		.byte	0x91
 1724 01b3 6F       		.sleb128 -17
 1725 01b4 09       		.uleb128 0x9
 1726 01b5 78020000 		.4byte	.LASF20
 1727 01b9 01       		.byte	0x1
 1728 01ba 6701     		.2byte	0x167
 1729 01bc 79000000 		.4byte	0x79
 1730 01c0 02       		.byte	0x2
 1731 01c1 91       		.byte	0x91
 1732 01c2 77       		.sleb128 -9
 1733 01c3 00       		.byte	0x0
 1734 01c4 0C       		.uleb128 0xc
 1735 01c5 01       		.byte	0x1
 1736 01c6 A0020000 		.4byte	.LASF28
 1737 01ca 01       		.byte	0x1
 1738 01cb AE01     		.2byte	0x1ae
 1739 01cd 01       		.byte	0x1
 1740 01ce 00000000 		.4byte	.LFB6
 1741 01d2 26000000 		.4byte	.LFE6
 1742 01d6 32010000 		.4byte	.LLST6
 1743 01da 0C       		.uleb128 0xc
 1744 01db 01       		.byte	0x1
 1745 01dc 36000000 		.4byte	.LASF29
 1746 01e0 01       		.byte	0x1
 1747 01e1 D001     		.2byte	0x1d0
 1748 01e3 01       		.byte	0x1
 1749 01e4 00000000 		.4byte	.LFB7
 1750 01e8 24000000 		.4byte	.LFE7
 1751 01ec 5D010000 		.4byte	.LLST7
 1752 01f0 0D       		.uleb128 0xd
 1753 01f1 01       		.byte	0x1
 1754 01f2 E2000000 		.4byte	.LASF32
 1755 01f6 01       		.byte	0x1
 1756 01f7 F001     		.2byte	0x1f0
 1757 01f9 01       		.byte	0x1
 1758 01fa 79000000 		.4byte	0x79
 1759 01fe 00000000 		.4byte	.LFB8
 1760 0202 4C000000 		.4byte	.LFE8
 1761 0206 88010000 		.4byte	.LLST8
 1762 020a 2D020000 		.4byte	0x22d
 1763 020e 0B       		.uleb128 0xb
 1764 020f 98020000 		.4byte	.LASF30
 1765 0213 01       		.byte	0x1
 1766 0214 F001     		.2byte	0x1f0
 1767 0216 79000000 		.4byte	0x79
 1768 021a 02       		.byte	0x2
 1769 021b 91       		.byte	0x91
 1770 021c 6F       		.sleb128 -17
 1771 021d 09       		.uleb128 0x9
 1772 021e AE000000 		.4byte	.LASF31
 1773 0222 01       		.byte	0x1
 1774 0223 F201     		.2byte	0x1f2
 1775 0225 79000000 		.4byte	0x79
 1776 0229 02       		.byte	0x2
 1777 022a 91       		.byte	0x91
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 47


 1778 022b 77       		.sleb128 -9
 1779 022c 00       		.byte	0x0
 1780 022d 0D       		.uleb128 0xd
 1781 022e 01       		.byte	0x1
 1782 022f 6C010000 		.4byte	.LASF33
 1783 0233 01       		.byte	0x1
 1784 0234 1B02     		.2byte	0x21b
 1785 0236 01       		.byte	0x1
 1786 0237 8F000000 		.4byte	0x8f
 1787 023b 00000000 		.4byte	.LFB9
 1788 023f 5C000000 		.4byte	.LFE9
 1789 0243 BF010000 		.4byte	.LLST9
 1790 0247 5B020000 		.4byte	0x25b
 1791 024b 0E       		.uleb128 0xe
 1792 024c 72657300 		.ascii	"res\000"
 1793 0250 01       		.byte	0x1
 1794 0251 2002     		.2byte	0x220
 1795 0253 84000000 		.4byte	0x84
 1796 0257 02       		.byte	0x2
 1797 0258 91       		.byte	0x91
 1798 0259 76       		.sleb128 -10
 1799 025a 00       		.byte	0x0
 1800 025b 0D       		.uleb128 0xd
 1801 025c 01       		.byte	0x1
 1802 025d 56020000 		.4byte	.LASF34
 1803 0261 01       		.byte	0x1
 1804 0262 5002     		.2byte	0x250
 1805 0264 01       		.byte	0x1
 1806 0265 9A000000 		.4byte	0x9a
 1807 0269 00000000 		.4byte	.LFB10
 1808 026d 5A000000 		.4byte	.LFE10
 1809 0271 F6010000 		.4byte	.LLST10
 1810 0275 89020000 		.4byte	0x289
 1811 0279 0E       		.uleb128 0xe
 1812 027a 72657300 		.ascii	"res\000"
 1813 027e 01       		.byte	0x1
 1814 027f 5202     		.2byte	0x252
 1815 0281 84000000 		.4byte	0x84
 1816 0285 02       		.byte	0x2
 1817 0286 91       		.byte	0x91
 1818 0287 76       		.sleb128 -10
 1819 0288 00       		.byte	0x0
 1820 0289 0A       		.uleb128 0xa
 1821 028a 01       		.byte	0x1
 1822 028b 84020000 		.4byte	.LASF35
 1823 028f 01       		.byte	0x1
 1824 0290 7E02     		.2byte	0x27e
 1825 0292 01       		.byte	0x1
 1826 0293 00000000 		.4byte	.LFB11
 1827 0297 20000000 		.4byte	.LFE11
 1828 029b 2D020000 		.4byte	.LLST11
 1829 029f B3020000 		.4byte	0x2b3
 1830 02a3 0B       		.uleb128 0xb
 1831 02a4 4C000000 		.4byte	.LASF36
 1832 02a8 01       		.byte	0x1
 1833 02a9 7E02     		.2byte	0x27e
 1834 02ab 9A000000 		.4byte	0x9a
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 48


 1835 02af 02       		.byte	0x2
 1836 02b0 91       		.byte	0x91
 1837 02b1 76       		.sleb128 -10
 1838 02b2 00       		.byte	0x0
 1839 02b3 0F       		.uleb128 0xf
 1840 02b4 B7020000 		.4byte	.LASF55
 1841 02b8 01       		.byte	0x1
 1842 02b9 9802     		.2byte	0x298
 1843 02bb 01       		.byte	0x1
 1844 02bc 00000000 		.4byte	.LFB12
 1845 02c0 82000000 		.4byte	.LFE12
 1846 02c4 64020000 		.4byte	.LLST12
 1847 02c8 EB020000 		.4byte	0x2eb
 1848 02cc 0B       		.uleb128 0xb
 1849 02cd 10030000 		.4byte	.LASF27
 1850 02d1 01       		.byte	0x1
 1851 02d2 9802     		.2byte	0x298
 1852 02d4 79000000 		.4byte	0x79
 1853 02d8 02       		.byte	0x2
 1854 02d9 91       		.byte	0x91
 1855 02da 6F       		.sleb128 -17
 1856 02db 09       		.uleb128 0x9
 1857 02dc DA010000 		.4byte	.LASF37
 1858 02e0 01       		.byte	0x1
 1859 02e1 9A02     		.2byte	0x29a
 1860 02e3 A5000000 		.4byte	0xa5
 1861 02e7 02       		.byte	0x2
 1862 02e8 91       		.byte	0x91
 1863 02e9 74       		.sleb128 -12
 1864 02ea 00       		.byte	0x0
 1865 02eb 0A       		.uleb128 0xa
 1866 02ec 01       		.byte	0x1
 1867 02ed 37020000 		.4byte	.LASF38
 1868 02f1 01       		.byte	0x1
 1869 02f2 E402     		.2byte	0x2e4
 1870 02f4 01       		.byte	0x1
 1871 02f5 00000000 		.4byte	.LFB13
 1872 02f9 20000000 		.4byte	.LFE13
 1873 02fd 9B020000 		.4byte	.LLST13
 1874 0301 15030000 		.4byte	0x315
 1875 0305 0B       		.uleb128 0xb
 1876 0306 88010000 		.4byte	.LASF39
 1877 030a 01       		.byte	0x1
 1878 030b E402     		.2byte	0x2e4
 1879 030d 9A000000 		.4byte	0x9a
 1880 0311 02       		.byte	0x2
 1881 0312 91       		.byte	0x91
 1882 0313 76       		.sleb128 -10
 1883 0314 00       		.byte	0x0
 1884 0315 0D       		.uleb128 0xd
 1885 0316 01       		.byte	0x1
 1886 0317 94000000 		.4byte	.LASF40
 1887 031b 01       		.byte	0x1
 1888 031c FC02     		.2byte	0x2fc
 1889 031e 01       		.byte	0x1
 1890 031f 9A000000 		.4byte	0x9a
 1891 0323 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 49


 1892 0327 52000000 		.4byte	.LFE14
 1893 032b D2020000 		.4byte	.LLST14
 1894 032f 52030000 		.4byte	0x352
 1895 0333 0B       		.uleb128 0xb
 1896 0334 D0010000 		.4byte	.LASF41
 1897 0338 01       		.byte	0x1
 1898 0339 FC02     		.2byte	0x2fc
 1899 033b 9A000000 		.4byte	0x9a
 1900 033f 02       		.byte	0x2
 1901 0340 91       		.byte	0x91
 1902 0341 6E       		.sleb128 -18
 1903 0342 09       		.uleb128 0x9
 1904 0343 4F020000 		.4byte	.LASF42
 1905 0347 01       		.byte	0x1
 1906 0348 FF02     		.2byte	0x2ff
 1907 034a 9A000000 		.4byte	0x9a
 1908 034e 02       		.byte	0x2
 1909 034f 91       		.byte	0x91
 1910 0350 76       		.sleb128 -10
 1911 0351 00       		.byte	0x0
 1912 0352 0D       		.uleb128 0xd
 1913 0353 01       		.byte	0x1
 1914 0354 1D020000 		.4byte	.LASF43
 1915 0358 01       		.byte	0x1
 1916 0359 1C03     		.2byte	0x31c
 1917 035b 01       		.byte	0x1
 1918 035c A5000000 		.4byte	0xa5
 1919 0360 00000000 		.4byte	.LFB15
 1920 0364 58000000 		.4byte	.LFE15
 1921 0368 09030000 		.4byte	.LLST15
 1922 036c 8F030000 		.4byte	0x38f
 1923 0370 0B       		.uleb128 0xb
 1924 0371 D0010000 		.4byte	.LASF41
 1925 0375 01       		.byte	0x1
 1926 0376 1C03     		.2byte	0x31c
 1927 0378 9A000000 		.4byte	0x9a
 1928 037c 02       		.byte	0x2
 1929 037d 91       		.byte	0x91
 1930 037e 6E       		.sleb128 -18
 1931 037f 09       		.uleb128 0x9
 1932 0380 62000000 		.4byte	.LASF44
 1933 0384 01       		.byte	0x1
 1934 0385 1F03     		.2byte	0x31f
 1935 0387 A5000000 		.4byte	0xa5
 1936 038b 02       		.byte	0x2
 1937 038c 91       		.byte	0x91
 1938 038d 74       		.sleb128 -12
 1939 038e 00       		.byte	0x0
 1940 038f 0D       		.uleb128 0xd
 1941 0390 01       		.byte	0x1
 1942 0391 C3000000 		.4byte	.LASF45
 1943 0395 01       		.byte	0x1
 1944 0396 3F03     		.2byte	0x33f
 1945 0398 01       		.byte	0x1
 1946 0399 B0000000 		.4byte	0xb0
 1947 039d 00000000 		.4byte	.LFB16
 1948 03a1 5C000000 		.4byte	.LFE16
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 50


 1949 03a5 40030000 		.4byte	.LLST16
 1950 03a9 CC030000 		.4byte	0x3cc
 1951 03ad 0B       		.uleb128 0xb
 1952 03ae D0010000 		.4byte	.LASF41
 1953 03b2 01       		.byte	0x1
 1954 03b3 3F03     		.2byte	0x33f
 1955 03b5 9A000000 		.4byte	0x9a
 1956 03b9 02       		.byte	0x2
 1957 03ba 91       		.byte	0x91
 1958 03bb 66       		.sleb128 -26
 1959 03bc 09       		.uleb128 0x9
 1960 03bd 49020000 		.4byte	.LASF46
 1961 03c1 01       		.byte	0x1
 1962 03c2 4103     		.2byte	0x341
 1963 03c4 B0000000 		.4byte	0xb0
 1964 03c8 02       		.byte	0x2
 1965 03c9 91       		.byte	0x91
 1966 03ca 6C       		.sleb128 -20
 1967 03cb 00       		.byte	0x0
 1968 03cc 08       		.uleb128 0x8
 1969 03cd 0E000000 		.4byte	.LASF47
 1970 03d1 01       		.byte	0x1
 1971 03d2 2D       		.byte	0x2d
 1972 03d3 79000000 		.4byte	0x79
 1973 03d7 05       		.byte	0x5
 1974 03d8 03       		.byte	0x3
 1975 03d9 01000000 		.4byte	ADC_SAR_1_resolution
 1976 03dd 10       		.uleb128 0x10
 1977 03de 0D010000 		.4byte	.LASF48
 1978 03e2 01       		.byte	0x1
 1979 03e3 23       		.byte	0x23
 1980 03e4 79000000 		.4byte	0x79
 1981 03e8 01       		.byte	0x1
 1982 03e9 05       		.byte	0x5
 1983 03ea 03       		.byte	0x3
 1984 03eb 00000000 		.4byte	ADC_SAR_1_initVar
 1985 03ef 10       		.uleb128 0x10
 1986 03f0 D4020000 		.4byte	.LASF49
 1987 03f4 01       		.byte	0x1
 1988 03f5 24       		.byte	0x24
 1989 03f6 01040000 		.4byte	0x401
 1990 03fa 01       		.byte	0x1
 1991 03fb 05       		.byte	0x5
 1992 03fc 03       		.byte	0x3
 1993 03fd 00000000 		.4byte	ADC_SAR_1_offset
 1994 0401 11       		.uleb128 0x11
 1995 0402 9A000000 		.4byte	0x9a
 1996 0406 10       		.uleb128 0x10
 1997 0407 9C010000 		.4byte	.LASF50
 1998 040b 01       		.byte	0x1
 1999 040c 25       		.byte	0x25
 2000 040d 01040000 		.4byte	0x401
 2001 0411 01       		.byte	0x1
 2002 0412 05       		.byte	0x5
 2003 0413 03       		.byte	0x3
 2004 0414 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 2005 0418 10       		.uleb128 0x10
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 51


 2006 0419 2D010000 		.4byte	.LASF51
 2007 041d 01       		.byte	0x1
 2008 041e 26       		.byte	0x26
 2009 041f 01040000 		.4byte	0x401
 2010 0423 01       		.byte	0x1
 2011 0424 05       		.byte	0x5
 2012 0425 03       		.byte	0x3
 2013 0426 00000000 		.4byte	ADC_SAR_1_shift
 2014 042a 00       		.byte	0x0
 2015              		.section	.debug_abbrev
 2016 0000 01       		.uleb128 0x1
 2017 0001 11       		.uleb128 0x11
 2018 0002 01       		.byte	0x1
 2019 0003 25       		.uleb128 0x25
 2020 0004 0E       		.uleb128 0xe
 2021 0005 13       		.uleb128 0x13
 2022 0006 0B       		.uleb128 0xb
 2023 0007 03       		.uleb128 0x3
 2024 0008 0E       		.uleb128 0xe
 2025 0009 1B       		.uleb128 0x1b
 2026 000a 0E       		.uleb128 0xe
 2027 000b 11       		.uleb128 0x11
 2028 000c 01       		.uleb128 0x1
 2029 000d 52       		.uleb128 0x52
 2030 000e 01       		.uleb128 0x1
 2031 000f 55       		.uleb128 0x55
 2032 0010 06       		.uleb128 0x6
 2033 0011 10       		.uleb128 0x10
 2034 0012 06       		.uleb128 0x6
 2035 0013 00       		.byte	0x0
 2036 0014 00       		.byte	0x0
 2037 0015 02       		.uleb128 0x2
 2038 0016 24       		.uleb128 0x24
 2039 0017 00       		.byte	0x0
 2040 0018 0B       		.uleb128 0xb
 2041 0019 0B       		.uleb128 0xb
 2042 001a 3E       		.uleb128 0x3e
 2043 001b 0B       		.uleb128 0xb
 2044 001c 03       		.uleb128 0x3
 2045 001d 0E       		.uleb128 0xe
 2046 001e 00       		.byte	0x0
 2047 001f 00       		.byte	0x0
 2048 0020 03       		.uleb128 0x3
 2049 0021 24       		.uleb128 0x24
 2050 0022 00       		.byte	0x0
 2051 0023 0B       		.uleb128 0xb
 2052 0024 0B       		.uleb128 0xb
 2053 0025 3E       		.uleb128 0x3e
 2054 0026 0B       		.uleb128 0xb
 2055 0027 03       		.uleb128 0x3
 2056 0028 08       		.uleb128 0x8
 2057 0029 00       		.byte	0x0
 2058 002a 00       		.byte	0x0
 2059 002b 04       		.uleb128 0x4
 2060 002c 24       		.uleb128 0x24
 2061 002d 00       		.byte	0x0
 2062 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 52


 2063 002f 0B       		.uleb128 0xb
 2064 0030 3E       		.uleb128 0x3e
 2065 0031 0B       		.uleb128 0xb
 2066 0032 00       		.byte	0x0
 2067 0033 00       		.byte	0x0
 2068 0034 05       		.uleb128 0x5
 2069 0035 16       		.uleb128 0x16
 2070 0036 00       		.byte	0x0
 2071 0037 03       		.uleb128 0x3
 2072 0038 0E       		.uleb128 0xe
 2073 0039 3A       		.uleb128 0x3a
 2074 003a 0B       		.uleb128 0xb
 2075 003b 3B       		.uleb128 0x3b
 2076 003c 0B       		.uleb128 0xb
 2077 003d 49       		.uleb128 0x49
 2078 003e 13       		.uleb128 0x13
 2079 003f 00       		.byte	0x0
 2080 0040 00       		.byte	0x0
 2081 0041 06       		.uleb128 0x6
 2082 0042 2E       		.uleb128 0x2e
 2083 0043 00       		.byte	0x0
 2084 0044 3F       		.uleb128 0x3f
 2085 0045 0C       		.uleb128 0xc
 2086 0046 03       		.uleb128 0x3
 2087 0047 0E       		.uleb128 0xe
 2088 0048 3A       		.uleb128 0x3a
 2089 0049 0B       		.uleb128 0xb
 2090 004a 3B       		.uleb128 0x3b
 2091 004b 0B       		.uleb128 0xb
 2092 004c 27       		.uleb128 0x27
 2093 004d 0C       		.uleb128 0xc
 2094 004e 11       		.uleb128 0x11
 2095 004f 01       		.uleb128 0x1
 2096 0050 12       		.uleb128 0x12
 2097 0051 01       		.uleb128 0x1
 2098 0052 40       		.uleb128 0x40
 2099 0053 06       		.uleb128 0x6
 2100 0054 00       		.byte	0x0
 2101 0055 00       		.byte	0x0
 2102 0056 07       		.uleb128 0x7
 2103 0057 2E       		.uleb128 0x2e
 2104 0058 01       		.byte	0x1
 2105 0059 3F       		.uleb128 0x3f
 2106 005a 0C       		.uleb128 0xc
 2107 005b 03       		.uleb128 0x3
 2108 005c 0E       		.uleb128 0xe
 2109 005d 3A       		.uleb128 0x3a
 2110 005e 0B       		.uleb128 0xb
 2111 005f 3B       		.uleb128 0x3b
 2112 0060 0B       		.uleb128 0xb
 2113 0061 27       		.uleb128 0x27
 2114 0062 0C       		.uleb128 0xc
 2115 0063 11       		.uleb128 0x11
 2116 0064 01       		.uleb128 0x1
 2117 0065 12       		.uleb128 0x12
 2118 0066 01       		.uleb128 0x1
 2119 0067 40       		.uleb128 0x40
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 53


 2120 0068 06       		.uleb128 0x6
 2121 0069 01       		.uleb128 0x1
 2122 006a 13       		.uleb128 0x13
 2123 006b 00       		.byte	0x0
 2124 006c 00       		.byte	0x0
 2125 006d 08       		.uleb128 0x8
 2126 006e 34       		.uleb128 0x34
 2127 006f 00       		.byte	0x0
 2128 0070 03       		.uleb128 0x3
 2129 0071 0E       		.uleb128 0xe
 2130 0072 3A       		.uleb128 0x3a
 2131 0073 0B       		.uleb128 0xb
 2132 0074 3B       		.uleb128 0x3b
 2133 0075 0B       		.uleb128 0xb
 2134 0076 49       		.uleb128 0x49
 2135 0077 13       		.uleb128 0x13
 2136 0078 02       		.uleb128 0x2
 2137 0079 0A       		.uleb128 0xa
 2138 007a 00       		.byte	0x0
 2139 007b 00       		.byte	0x0
 2140 007c 09       		.uleb128 0x9
 2141 007d 34       		.uleb128 0x34
 2142 007e 00       		.byte	0x0
 2143 007f 03       		.uleb128 0x3
 2144 0080 0E       		.uleb128 0xe
 2145 0081 3A       		.uleb128 0x3a
 2146 0082 0B       		.uleb128 0xb
 2147 0083 3B       		.uleb128 0x3b
 2148 0084 05       		.uleb128 0x5
 2149 0085 49       		.uleb128 0x49
 2150 0086 13       		.uleb128 0x13
 2151 0087 02       		.uleb128 0x2
 2152 0088 0A       		.uleb128 0xa
 2153 0089 00       		.byte	0x0
 2154 008a 00       		.byte	0x0
 2155 008b 0A       		.uleb128 0xa
 2156 008c 2E       		.uleb128 0x2e
 2157 008d 01       		.byte	0x1
 2158 008e 3F       		.uleb128 0x3f
 2159 008f 0C       		.uleb128 0xc
 2160 0090 03       		.uleb128 0x3
 2161 0091 0E       		.uleb128 0xe
 2162 0092 3A       		.uleb128 0x3a
 2163 0093 0B       		.uleb128 0xb
 2164 0094 3B       		.uleb128 0x3b
 2165 0095 05       		.uleb128 0x5
 2166 0096 27       		.uleb128 0x27
 2167 0097 0C       		.uleb128 0xc
 2168 0098 11       		.uleb128 0x11
 2169 0099 01       		.uleb128 0x1
 2170 009a 12       		.uleb128 0x12
 2171 009b 01       		.uleb128 0x1
 2172 009c 40       		.uleb128 0x40
 2173 009d 06       		.uleb128 0x6
 2174 009e 01       		.uleb128 0x1
 2175 009f 13       		.uleb128 0x13
 2176 00a0 00       		.byte	0x0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 54


 2177 00a1 00       		.byte	0x0
 2178 00a2 0B       		.uleb128 0xb
 2179 00a3 05       		.uleb128 0x5
 2180 00a4 00       		.byte	0x0
 2181 00a5 03       		.uleb128 0x3
 2182 00a6 0E       		.uleb128 0xe
 2183 00a7 3A       		.uleb128 0x3a
 2184 00a8 0B       		.uleb128 0xb
 2185 00a9 3B       		.uleb128 0x3b
 2186 00aa 05       		.uleb128 0x5
 2187 00ab 49       		.uleb128 0x49
 2188 00ac 13       		.uleb128 0x13
 2189 00ad 02       		.uleb128 0x2
 2190 00ae 0A       		.uleb128 0xa
 2191 00af 00       		.byte	0x0
 2192 00b0 00       		.byte	0x0
 2193 00b1 0C       		.uleb128 0xc
 2194 00b2 2E       		.uleb128 0x2e
 2195 00b3 00       		.byte	0x0
 2196 00b4 3F       		.uleb128 0x3f
 2197 00b5 0C       		.uleb128 0xc
 2198 00b6 03       		.uleb128 0x3
 2199 00b7 0E       		.uleb128 0xe
 2200 00b8 3A       		.uleb128 0x3a
 2201 00b9 0B       		.uleb128 0xb
 2202 00ba 3B       		.uleb128 0x3b
 2203 00bb 05       		.uleb128 0x5
 2204 00bc 27       		.uleb128 0x27
 2205 00bd 0C       		.uleb128 0xc
 2206 00be 11       		.uleb128 0x11
 2207 00bf 01       		.uleb128 0x1
 2208 00c0 12       		.uleb128 0x12
 2209 00c1 01       		.uleb128 0x1
 2210 00c2 40       		.uleb128 0x40
 2211 00c3 06       		.uleb128 0x6
 2212 00c4 00       		.byte	0x0
 2213 00c5 00       		.byte	0x0
 2214 00c6 0D       		.uleb128 0xd
 2215 00c7 2E       		.uleb128 0x2e
 2216 00c8 01       		.byte	0x1
 2217 00c9 3F       		.uleb128 0x3f
 2218 00ca 0C       		.uleb128 0xc
 2219 00cb 03       		.uleb128 0x3
 2220 00cc 0E       		.uleb128 0xe
 2221 00cd 3A       		.uleb128 0x3a
 2222 00ce 0B       		.uleb128 0xb
 2223 00cf 3B       		.uleb128 0x3b
 2224 00d0 05       		.uleb128 0x5
 2225 00d1 27       		.uleb128 0x27
 2226 00d2 0C       		.uleb128 0xc
 2227 00d3 49       		.uleb128 0x49
 2228 00d4 13       		.uleb128 0x13
 2229 00d5 11       		.uleb128 0x11
 2230 00d6 01       		.uleb128 0x1
 2231 00d7 12       		.uleb128 0x12
 2232 00d8 01       		.uleb128 0x1
 2233 00d9 40       		.uleb128 0x40
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 55


 2234 00da 06       		.uleb128 0x6
 2235 00db 01       		.uleb128 0x1
 2236 00dc 13       		.uleb128 0x13
 2237 00dd 00       		.byte	0x0
 2238 00de 00       		.byte	0x0
 2239 00df 0E       		.uleb128 0xe
 2240 00e0 34       		.uleb128 0x34
 2241 00e1 00       		.byte	0x0
 2242 00e2 03       		.uleb128 0x3
 2243 00e3 08       		.uleb128 0x8
 2244 00e4 3A       		.uleb128 0x3a
 2245 00e5 0B       		.uleb128 0xb
 2246 00e6 3B       		.uleb128 0x3b
 2247 00e7 05       		.uleb128 0x5
 2248 00e8 49       		.uleb128 0x49
 2249 00e9 13       		.uleb128 0x13
 2250 00ea 02       		.uleb128 0x2
 2251 00eb 0A       		.uleb128 0xa
 2252 00ec 00       		.byte	0x0
 2253 00ed 00       		.byte	0x0
 2254 00ee 0F       		.uleb128 0xf
 2255 00ef 2E       		.uleb128 0x2e
 2256 00f0 01       		.byte	0x1
 2257 00f1 03       		.uleb128 0x3
 2258 00f2 0E       		.uleb128 0xe
 2259 00f3 3A       		.uleb128 0x3a
 2260 00f4 0B       		.uleb128 0xb
 2261 00f5 3B       		.uleb128 0x3b
 2262 00f6 05       		.uleb128 0x5
 2263 00f7 27       		.uleb128 0x27
 2264 00f8 0C       		.uleb128 0xc
 2265 00f9 11       		.uleb128 0x11
 2266 00fa 01       		.uleb128 0x1
 2267 00fb 12       		.uleb128 0x12
 2268 00fc 01       		.uleb128 0x1
 2269 00fd 40       		.uleb128 0x40
 2270 00fe 06       		.uleb128 0x6
 2271 00ff 01       		.uleb128 0x1
 2272 0100 13       		.uleb128 0x13
 2273 0101 00       		.byte	0x0
 2274 0102 00       		.byte	0x0
 2275 0103 10       		.uleb128 0x10
 2276 0104 34       		.uleb128 0x34
 2277 0105 00       		.byte	0x0
 2278 0106 03       		.uleb128 0x3
 2279 0107 0E       		.uleb128 0xe
 2280 0108 3A       		.uleb128 0x3a
 2281 0109 0B       		.uleb128 0xb
 2282 010a 3B       		.uleb128 0x3b
 2283 010b 0B       		.uleb128 0xb
 2284 010c 49       		.uleb128 0x49
 2285 010d 13       		.uleb128 0x13
 2286 010e 3F       		.uleb128 0x3f
 2287 010f 0C       		.uleb128 0xc
 2288 0110 02       		.uleb128 0x2
 2289 0111 0A       		.uleb128 0xa
 2290 0112 00       		.byte	0x0
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 56


 2291 0113 00       		.byte	0x0
 2292 0114 11       		.uleb128 0x11
 2293 0115 35       		.uleb128 0x35
 2294 0116 00       		.byte	0x0
 2295 0117 49       		.uleb128 0x49
 2296 0118 13       		.uleb128 0x13
 2297 0119 00       		.byte	0x0
 2298 011a 00       		.byte	0x0
 2299 011b 00       		.byte	0x0
 2300              		.section	.debug_pubnames,"",%progbits
 2301 0000 F8010000 		.4byte	0x1f8
 2302 0004 0200     		.2byte	0x2
 2303 0006 00000000 		.4byte	.Ldebug_info0
 2304 000a 2B040000 		.4byte	0x42b
 2305 000e C9000000 		.4byte	0xc9
 2306 0012 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2306      5341525F 
 2306      315F5374 
 2306      61727400 
 2307 0022 DE000000 		.4byte	0xde
 2308 0026 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2308      5341525F 
 2308      315F496E 
 2308      697400
 2309 0035 F3000000 		.4byte	0xf3
 2310 0039 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2310      5341525F 
 2310      315F456E 
 2310      61626C65 
 2310      00
 2311 004a 29010000 		.4byte	0x129
 2312 004e 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2312      5341525F 
 2312      315F5374 
 2312      6F7000
 2313 005d 52010000 		.4byte	0x152
 2314 0061 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2314      5341525F 
 2314      315F5365 
 2314      74506F77 
 2314      657200
 2315 0074 8B010000 		.4byte	0x18b
 2316 0078 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2316      5341525F 
 2316      315F5365 
 2316      74526573 
 2316      6F6C7574 
 2317 0090 C4010000 		.4byte	0x1c4
 2318 0094 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2318      5341525F 
 2318      315F5374 
 2318      61727443 
 2318      6F6E7665 
 2319 00ab DA010000 		.4byte	0x1da
 2320 00af 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2320      5341525F 
 2320      315F5374 
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 57


 2320      6F70436F 
 2320      6E766572 
 2321 00c5 F0010000 		.4byte	0x1f0
 2322 00c9 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2322      5341525F 
 2322      315F4973 
 2322      456E6443 
 2322      6F6E7665 
 2323 00e3 2D020000 		.4byte	0x22d
 2324 00e7 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2324      5341525F 
 2324      315F4765 
 2324      74526573 
 2324      756C7438 
 2325 00fc 5B020000 		.4byte	0x25b
 2326 0100 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2326      5341525F 
 2326      315F4765 
 2326      74526573 
 2326      756C7431 
 2327 0116 89020000 		.4byte	0x289
 2328 011a 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2328      5341525F 
 2328      315F5365 
 2328      744F6666 
 2328      73657400 
 2329 012e EB020000 		.4byte	0x2eb
 2330 0132 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2330      5341525F 
 2330      315F5365 
 2330      74476169 
 2330      6E00
 2331 0144 15030000 		.4byte	0x315
 2332 0148 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2332      5341525F 
 2332      315F436F 
 2332      756E7473 
 2332      546F5F6D 
 2333 0162 52030000 		.4byte	0x352
 2334 0166 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2334      5341525F 
 2334      315F436F 
 2334      756E7473 
 2334      546F5F75 
 2335 0180 8F030000 		.4byte	0x38f
 2336 0184 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2336      5341525F 
 2336      315F436F 
 2336      756E7473 
 2336      546F5F56 
 2337 019d DD030000 		.4byte	0x3dd
 2338 01a1 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2338      5341525F 
 2338      315F696E 
 2338      69745661 
 2338      7200
 2339 01b3 EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 58


 2340 01b7 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2340      5341525F 
 2340      315F6F66 
 2340      66736574 
 2340      00
 2341 01c8 06040000 		.4byte	0x406
 2342 01cc 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2342      5341525F 
 2342      315F636F 
 2342      756E7473 
 2342      50657256 
 2343 01e4 18040000 		.4byte	0x418
 2344 01e8 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2344      5341525F 
 2344      315F7368 
 2344      69667400 
 2345 01f8 00000000 		.4byte	0x0
 2346              		.section	.debug_aranges,"",%progbits
 2347 0000 9C000000 		.4byte	0x9c
 2348 0004 0200     		.2byte	0x2
 2349 0006 00000000 		.4byte	.Ldebug_info0
 2350 000a 04       		.byte	0x4
 2351 000b 00       		.byte	0x0
 2352 000c 0000     		.2byte	0x0
 2353 000e 0000     		.2byte	0x0
 2354 0010 00000000 		.4byte	.LFB0
 2355 0014 2A000000 		.4byte	.LFE0-.LFB0
 2356 0018 00000000 		.4byte	.LFB1
 2357 001c 5C000000 		.4byte	.LFE1-.LFB1
 2358 0020 00000000 		.4byte	.LFB2
 2359 0024 78010000 		.4byte	.LFE2-.LFB2
 2360 0028 00000000 		.4byte	.LFB3
 2361 002c DC000000 		.4byte	.LFE3-.LFB3
 2362 0030 00000000 		.4byte	.LFB4
 2363 0034 4A000000 		.4byte	.LFE4-.LFB4
 2364 0038 00000000 		.4byte	.LFB5
 2365 003c 68000000 		.4byte	.LFE5-.LFB5
 2366 0040 00000000 		.4byte	.LFB6
 2367 0044 26000000 		.4byte	.LFE6-.LFB6
 2368 0048 00000000 		.4byte	.LFB7
 2369 004c 24000000 		.4byte	.LFE7-.LFB7
 2370 0050 00000000 		.4byte	.LFB8
 2371 0054 4C000000 		.4byte	.LFE8-.LFB8
 2372 0058 00000000 		.4byte	.LFB9
 2373 005c 5C000000 		.4byte	.LFE9-.LFB9
 2374 0060 00000000 		.4byte	.LFB10
 2375 0064 5A000000 		.4byte	.LFE10-.LFB10
 2376 0068 00000000 		.4byte	.LFB11
 2377 006c 20000000 		.4byte	.LFE11-.LFB11
 2378 0070 00000000 		.4byte	.LFB12
 2379 0074 82000000 		.4byte	.LFE12-.LFB12
 2380 0078 00000000 		.4byte	.LFB13
 2381 007c 20000000 		.4byte	.LFE13-.LFB13
 2382 0080 00000000 		.4byte	.LFB14
 2383 0084 52000000 		.4byte	.LFE14-.LFB14
 2384 0088 00000000 		.4byte	.LFB15
 2385 008c 58000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 59


 2386 0090 00000000 		.4byte	.LFB16
 2387 0094 5C000000 		.4byte	.LFE16-.LFB16
 2388 0098 00000000 		.4byte	0x0
 2389 009c 00000000 		.4byte	0x0
 2390              		.section	.debug_ranges,"",%progbits
 2391              	.Ldebug_ranges0:
 2392 0000 00000000 		.4byte	.Ltext0
 2393 0004 00000000 		.4byte	.Letext0
 2394 0008 00000000 		.4byte	.LFB0
 2395 000c 2A000000 		.4byte	.LFE0
 2396 0010 00000000 		.4byte	.LFB1
 2397 0014 5C000000 		.4byte	.LFE1
 2398 0018 00000000 		.4byte	.LFB2
 2399 001c 78010000 		.4byte	.LFE2
 2400 0020 00000000 		.4byte	.LFB3
 2401 0024 DC000000 		.4byte	.LFE3
 2402 0028 00000000 		.4byte	.LFB4
 2403 002c 4A000000 		.4byte	.LFE4
 2404 0030 00000000 		.4byte	.LFB5
 2405 0034 68000000 		.4byte	.LFE5
 2406 0038 00000000 		.4byte	.LFB6
 2407 003c 26000000 		.4byte	.LFE6
 2408 0040 00000000 		.4byte	.LFB7
 2409 0044 24000000 		.4byte	.LFE7
 2410 0048 00000000 		.4byte	.LFB8
 2411 004c 4C000000 		.4byte	.LFE8
 2412 0050 00000000 		.4byte	.LFB9
 2413 0054 5C000000 		.4byte	.LFE9
 2414 0058 00000000 		.4byte	.LFB10
 2415 005c 5A000000 		.4byte	.LFE10
 2416 0060 00000000 		.4byte	.LFB11
 2417 0064 20000000 		.4byte	.LFE11
 2418 0068 00000000 		.4byte	.LFB12
 2419 006c 82000000 		.4byte	.LFE12
 2420 0070 00000000 		.4byte	.LFB13
 2421 0074 20000000 		.4byte	.LFE13
 2422 0078 00000000 		.4byte	.LFB14
 2423 007c 52000000 		.4byte	.LFE14
 2424 0080 00000000 		.4byte	.LFB15
 2425 0084 58000000 		.4byte	.LFE15
 2426 0088 00000000 		.4byte	.LFB16
 2427 008c 5C000000 		.4byte	.LFE16
 2428 0090 00000000 		.4byte	0x0
 2429 0094 00000000 		.4byte	0x0
 2430              		.section	.debug_str,"MS",%progbits,1
 2431              	.LASF5:
 2432 0000 6C6F6E67 		.ascii	"long long int\000"
 2432      206C6F6E 
 2432      6720696E 
 2432      7400
 2433              	.LASF47:
 2434 000e 4144435F 		.ascii	"ADC_SAR_1_resolution\000"
 2434      5341525F 
 2434      315F7265 
 2434      736F6C75 
 2434      74696F6E 
 2435              	.LASF24:
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 60


 2436 0023 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2436      5341525F 
 2436      315F5365 
 2436      74506F77 
 2436      657200
 2437              	.LASF29:
 2438 0036 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2438      5341525F 
 2438      315F5374 
 2438      6F70436F 
 2438      6E766572 
 2439              	.LASF36:
 2440 004c 6F666673 		.ascii	"offset\000"
 2440      657400
 2441              	.LASF19:
 2442 0053 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2442      5341525F 
 2442      315F496E 
 2442      697400
 2443              	.LASF44:
 2444 0062 75566F6C 		.ascii	"uVolts\000"
 2444      747300
 2445              	.LASF3:
 2446 0069 73686F72 		.ascii	"short unsigned int\000"
 2446      7420756E 
 2446      7369676E 
 2446      65642069 
 2446      6E7400
 2447              	.LASF25:
 2448 007c 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2448      5341525F 
 2448      315F5365 
 2448      74526573 
 2448      6F6C7574 
 2449              	.LASF40:
 2450 0094 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2450      5341525F 
 2450      315F436F 
 2450      756E7473 
 2450      546F5F6D 
 2451              	.LASF31:
 2452 00ae 73746174 		.ascii	"status\000"
 2452      757300
 2453              	.LASF26:
 2454 00b5 706F7765 		.ascii	"power\000"
 2454      7200
 2455              	.LASF15:
 2456 00bb 666C6F61 		.ascii	"float32\000"
 2456      74333200 
 2457              	.LASF45:
 2458 00c3 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2458      5341525F 
 2458      315F436F 
 2458      756E7473 
 2458      546F5F56 
 2459              	.LASF16:
 2460 00dc 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 61


 2460      7400
 2461              	.LASF32:
 2462 00e2 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2462      5341525F 
 2462      315F4973 
 2462      456E6443 
 2462      6F6E7665 
 2463              	.LASF22:
 2464 00fc 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2464      5341525F 
 2464      315F456E 
 2464      61626C65 
 2464      00
 2465              	.LASF48:
 2466 010d 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2466      5341525F 
 2466      315F696E 
 2466      69745661 
 2466      7200
 2467              	.LASF1:
 2468 011f 756E7369 		.ascii	"unsigned char\000"
 2468      676E6564 
 2468      20636861 
 2468      7200
 2469              	.LASF51:
 2470 012d 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2470      5341525F 
 2470      315F7368 
 2470      69667400 
 2471              	.LASF13:
 2472 013d 696E7431 		.ascii	"int16\000"
 2472      3600
 2473              	.LASF8:
 2474 0143 6C6F6E67 		.ascii	"long unsigned int\000"
 2474      20756E73 
 2474      69676E65 
 2474      6420696E 
 2474      7400
 2475              	.LASF14:
 2476 0155 696E7433 		.ascii	"int32\000"
 2476      3200
 2477              	.LASF21:
 2478 015b 656E6162 		.ascii	"enableInterrupts\000"
 2478      6C65496E 
 2478      74657272 
 2478      75707473 
 2478      00
 2479              	.LASF33:
 2480 016c 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2480      5341525F 
 2480      315F4765 
 2480      74526573 
 2480      756C7438 
 2481              	.LASF17:
 2482 0181 646F7562 		.ascii	"double\000"
 2482      6C6500
 2483              	.LASF39:
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 62


 2484 0188 61646347 		.ascii	"adcGain\000"
 2484      61696E00 
 2485              	.LASF11:
 2486 0190 75696E74 		.ascii	"uint16\000"
 2486      313600
 2487              	.LASF12:
 2488 0197 696E7438 		.ascii	"int8\000"
 2488      00
 2489              	.LASF50:
 2490 019c 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2490      5341525F 
 2490      315F636F 
 2490      756E7473 
 2490      50657256 
 2491              	.LASF23:
 2492 01b4 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2492      5341525F 
 2492      315F5374 
 2492      6F7000
 2493              	.LASF4:
 2494 01c3 756E7369 		.ascii	"unsigned int\000"
 2494      676E6564 
 2494      20696E74 
 2494      00
 2495              	.LASF41:
 2496 01d0 61646343 		.ascii	"adcCounts\000"
 2496      6F756E74 
 2496      7300
 2497              	.LASF37:
 2498 01da 636F756E 		.ascii	"counts\000"
 2498      747300
 2499              	.LASF6:
 2500 01e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 2500      206C6F6E 
 2500      6720756E 
 2500      7369676E 
 2500      65642069 
 2501              	.LASF53:
 2502 01f8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2502      6E657261 
 2502      7465645F 
 2502      536F7572 
 2502      63655C50 
 2503              	.LASF43:
 2504 021d 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2504      5341525F 
 2504      315F436F 
 2504      756E7473 
 2504      546F5F75 
 2505              	.LASF38:
 2506 0237 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2506      5341525F 
 2506      315F5365 
 2506      74476169 
 2506      6E00
 2507              	.LASF46:
 2508 0249 766F6C74 		.ascii	"volts\000"
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 63


 2508      7300
 2509              	.LASF42:
 2510 024f 6D566F6C 		.ascii	"mVolts\000"
 2510      747300
 2511              	.LASF34:
 2512 0256 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2512      5341525F 
 2512      315F4765 
 2512      74526573 
 2512      756C7431 
 2513              	.LASF52:
 2514 026c 474E5520 		.ascii	"GNU C 4.4.1\000"
 2514      4320342E 
 2514      342E3100 
 2515              	.LASF20:
 2516 0278 746D7052 		.ascii	"tmpReg\000"
 2516      656700
 2517              	.LASF9:
 2518 027f 63686172 		.ascii	"char\000"
 2518      00
 2519              	.LASF35:
 2520 0284 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2520      5341525F 
 2520      315F5365 
 2520      744F6666 
 2520      73657400 
 2521              	.LASF30:
 2522 0298 7265744D 		.ascii	"retMode\000"
 2522      6F646500 
 2523              	.LASF28:
 2524 02a0 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2524      5341525F 
 2524      315F5374 
 2524      61727443 
 2524      6F6E7665 
 2525              	.LASF55:
 2526 02b7 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2526      5341525F 
 2526      315F4361 
 2526      6C634761 
 2526      696E00
 2527              	.LASF2:
 2528 02ca 73686F72 		.ascii	"short int\000"
 2528      7420696E 
 2528      7400
 2529              	.LASF49:
 2530 02d4 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2530      5341525F 
 2530      315F6F66 
 2530      66736574 
 2530      00
 2531              	.LASF10:
 2532 02e5 75696E74 		.ascii	"uint8\000"
 2532      3800
 2533              	.LASF7:
 2534 02eb 6C6F6E67 		.ascii	"long int\000"
 2534      20696E74 
ARM GAS  C:\Users\USER\AppData\Local\Temp\cc66eXUV.s 			page 64


 2534      00
 2535              	.LASF0:
 2536 02f4 7369676E 		.ascii	"signed char\000"
 2536      65642063 
 2536      68617200 
 2537              	.LASF18:
 2538 0300 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2538      5341525F 
 2538      315F5374 
 2538      61727400 
 2539              	.LASF27:
 2540 0310 7265736F 		.ascii	"resolution\000"
 2540      6C757469 
 2540      6F6E00
 2541              	.LASF54:
 2542 031b 433A5C55 		.ascii	"C:\\Users\\USER\\Documents\\GitHub\\EE542\\firmware"
 2542      73657273 
 2542      5C555345 
 2542      525C446F 
 2542      63756D65 
 2543 0348 5C696E76 		.ascii	"\\invert\\invert.cydsn\000"
 2543      6572745C 
 2543      696E7665 
 2543      72742E63 
 2543      7964736E 
 2544              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
