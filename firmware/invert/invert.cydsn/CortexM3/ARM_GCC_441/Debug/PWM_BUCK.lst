ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_BUCK.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 CE010000 		.text
  20      02006100 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	PWM_BUCK_initVar
  24              		.bss
  25              		.type	PWM_BUCK_initVar, %object
  26              		.size	PWM_BUCK_initVar, 1
  27              	PWM_BUCK_initVar:
  28 0000 00       		.space	1
  29              		.section	.text.PWM_BUCK_Start,"ax",%progbits
  30              		.align	2
  31              		.global	PWM_BUCK_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	PWM_BUCK_Start, %function
  35              	PWM_BUCK_Start:
  36              	.LFB0:
  37              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_BUCK.c"
   1:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_BUCK.c **** * File Name: PWM_BUCK.c  
   3:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
   5:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  15:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 2


  17:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_BUCK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_BUCK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_BUCK.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  24:.\Generated_Source\PSoC5/PWM_BUCK.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_BUCK.c **** #include "PWM_BUCK.h"
  26:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  27:.\Generated_Source\PSoC5/PWM_BUCK.c **** uint8 PWM_BUCK_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  29:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  30:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_Start
  32:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  34:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  39:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  42:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  45:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  PWM_BUCK_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_BUCK.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  49:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_BUCK.c **** void PWM_BUCK_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
  38              		.loc 1 51 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_offset 14, -4
  47              		.cfi_offset 7, -8
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  52:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_BUCK.c ****     if(PWM_BUCK_initVar == 0u)
  50              		.loc 1 53 0
  51 0004 40F20003 		movw	r3, #:lower16:PWM_BUCK_initVar
  52 0008 C0F20003 		movt	r3, #:upper16:PWM_BUCK_initVar
  53 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  54 000e 002B     		cmp	r3, #0
  55 0010 08D1     		bne	.L2
  54:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
  55:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_Init();
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 3


  56              		.loc 1 55 0
  57 0012 FFF7FEFF 		bl	PWM_BUCK_Init
  56:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_initVar = 1u;
  58              		.loc 1 56 0
  59 0016 40F20003 		movw	r3, #:lower16:PWM_BUCK_initVar
  60 001a C0F20003 		movt	r3, #:upper16:PWM_BUCK_initVar
  61 001e 4FF00102 		mov	r2, #1
  62 0022 1A70     		strb	r2, [r3, #0]
  63              	.L2:
  57:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
  58:.\Generated_Source\PSoC5/PWM_BUCK.c ****     PWM_BUCK_Enable();
  64              		.loc 1 58 0
  65 0024 FFF7FEFF 		bl	PWM_BUCK_Enable
  59:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  60:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
  66              		.loc 1 60 0
  67 0028 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	PWM_BUCK_Start, .-PWM_BUCK_Start
  71 002a 00BF     		.section	.text.PWM_BUCK_Init,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_BUCK_Init
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_BUCK_Init, %function
  77              	PWM_BUCK_Init:
  78              	.LFB1:
  61:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  62:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
  63:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_Init
  65:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  67:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  PWM_BUCK_Start().
  71:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  72:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  75:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
  78:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_BUCK.c **** void PWM_BUCK_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
  79              		.loc 1 80 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 8
  86 0002 82B0     		sub	sp, sp, #8
  87              	.LCFI3:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 4


  88              		.cfi_def_cfa_offset 16
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_offset 14, -4
  91              		.cfi_offset 7, -8
  92              	.LCFI4:
  93              		.cfi_def_cfa_register 7
  81:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UsingFixedFunction || PWM_BUCK_UseControl)
  82:.\Generated_Source\PSoC5/PWM_BUCK.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction || PWM_BUCK_UseControl) */
  84:.\Generated_Source\PSoC5/PWM_BUCK.c ****     
  85:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if(!PWM_BUCK_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(PWM_BUCK_UseStatus)
  87:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_BUCK.c ****             uint8 PWM_BUCK_interruptState;
  89:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (!PWM_BUCK_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_BUCK.c ****     
  92:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_CONTROL |= PWM_BUCK_CFG0_MODE;
  95:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_CONTROL |= PWM_BUCK_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 
  99:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Set the default Compare Mode */
 100:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(CY_PSOC5A)
 101:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 ctrl = PWM_BUCK_CONTROL2 & ((uint8)(~PWM_BUCK_CTRL_CMPMODE1_MASK));
 102:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 PWM_BUCK_CONTROL2 = ctrl | PWM_BUCK_DEFAULT_COMPARE1_MODE;
 103:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (CY_PSOC5A) */
 104:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(CY_PSOC3 || CY_PSOC5LP)
 105:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 ctrl = PWM_BUCK_CONTROL3 & ((uint8 )(~PWM_BUCK_CTRL_CMPMODE1_MASK));
 106:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 PWM_BUCK_CONTROL3 = ctrl | PWM_BUCK_DEFAULT_COMPARE1_MODE;
 107:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 108:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 109:.\Generated_Source\PSoC5/PWM_BUCK.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 110:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_RT1 &= ((uint8)(~PWM_BUCK_RT1_MASK));
 111:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_RT1 |= PWM_BUCK_SYNC;     
 112:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 
 113:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 114:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_RT1 &= ((uint8)(~PWM_BUCK_SYNCDSI_MASK));
 115:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_RT1 |= PWM_BUCK_SYNCDSI_EN;
 116:.\Generated_Source\PSoC5/PWM_BUCK.c ****        
 117:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #elif (PWM_BUCK_UseControl)
 118:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Set the default compare mode defined in the parameter */
 119:.\Generated_Source\PSoC5/PWM_BUCK.c ****         ctrl = PWM_BUCK_CONTROL & ((uint8)(~PWM_BUCK_CTRL_CMPMODE2_MASK)) & ((uint8)(~PWM_BUCK_CTRL
  94              		.loc 1 119 0
  95 0006 46F27453 		movw	r3, #:lower16:1073767796
  96 000a C4F20003 		movt	r3, #:upper16:1073767796
  97 000e 1B78     		ldrb	r3, [r3, #0]
  98 0010 DBB2     		uxtb	r3, r3
  99 0012 23F03F03 		bic	r3, r3, #63
 100 0016 BB71     		strb	r3, [r7, #6]
 120:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_CONTROL = ctrl | PWM_BUCK_DEFAULT_COMPARE2_MODE | 
 101              		.loc 1 120 0
 102 0018 46F27453 		movw	r3, #:lower16:1073767796
 103 001c C4F20003 		movt	r3, #:upper16:1073767796
 104 0020 BA79     		ldrb	r2, [r7, #6]
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 5


 105 0022 42F01902 		orr	r2, r2, #25
 106 0026 D2B2     		uxtb	r2, r2
 107 0028 1A70     		strb	r2, [r3, #0]
 121:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                    PWM_BUCK_DEFAULT_COMPARE1_MODE;
 122:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
 123:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 124:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (!PWM_BUCK_UsingFixedFunction)
 125:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_Resolution == 8)
 126:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Set FIFO 0 to 1 byte register for period*/
 127:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_AUX_CONTROLDP0 |= (PWM_BUCK_AUX_CTRL_FIFO0_CLR);
 128:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else /* (PWM_BUCK_Resolution == 16)*/
 129:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Set FIFO 0 to 1 byte register for period */
 130:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_AUX_CONTROLDP0 |= (PWM_BUCK_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 130 0
 109 002a 46F29453 		movw	r3, #:lower16:1073767828
 110 002e C4F20003 		movt	r3, #:upper16:1073767828
 111 0032 46F29452 		movw	r2, #:lower16:1073767828
 112 0036 C4F20002 		movt	r2, #:upper16:1073767828
 113 003a 1278     		ldrb	r2, [r2, #0]
 114 003c D2B2     		uxtb	r2, r2
 115 003e 42F00102 		orr	r2, r2, #1
 116 0042 D2B2     		uxtb	r2, r2
 117 0044 1A70     		strb	r2, [r3, #0]
 131:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_AUX_CONTROLDP1 |= (PWM_BUCK_AUX_CTRL_FIFO0_CLR);
 118              		.loc 1 131 0
 119 0046 46F29553 		movw	r3, #:lower16:1073767829
 120 004a C4F20003 		movt	r3, #:upper16:1073767829
 121 004e 46F29552 		movw	r2, #:lower16:1073767829
 122 0052 C4F20002 		movt	r2, #:upper16:1073767829
 123 0056 1278     		ldrb	r2, [r2, #0]
 124 0058 D2B2     		uxtb	r2, r2
 125 005a 42F00102 		orr	r2, r2, #1
 126 005e D2B2     		uxtb	r2, r2
 127 0060 1A70     		strb	r2, [r3, #0]
 132:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_Resolution == 8) */
 133:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 134:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_WriteCounter(PWM_BUCK_INIT_PERIOD_VALUE);
 128              		.loc 1 134 0
 129 0062 4FF40070 		mov	r0, #512
 130 0066 FFF7FEFF 		bl	PWM_BUCK_WriteCounter
 135:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (!PWM_BUCK_UsingFixedFunction) */
 136:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 137:.\Generated_Source\PSoC5/PWM_BUCK.c ****     PWM_BUCK_WritePeriod(PWM_BUCK_INIT_PERIOD_VALUE);
 131              		.loc 1 137 0
 132 006a 4FF40070 		mov	r0, #512
 133 006e FFF7FEFF 		bl	PWM_BUCK_WritePeriod
 138:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 139:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_UseOneCompareMode)
 140:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_WriteCompare(PWM_BUCK_INIT_COMPARE_VALUE1);
 134              		.loc 1 140 0
 135 0072 4FF07C00 		mov	r0, #124
 136 0076 FFF7FEFF 		bl	PWM_BUCK_WriteCompare
 141:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 142:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_WriteCompare1(PWM_BUCK_INIT_COMPARE_VALUE1);
 143:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_WriteCompare2(PWM_BUCK_INIT_COMPARE_VALUE2);
 144:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UseOneCompareMode) */
 145:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 6


 146:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_KillModeMinTime)
 147:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_WriteKillTime(PWM_BUCK_MinimumKillTime);
 148:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_KillModeMinTime) */
 149:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 150:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_DeadBandUsed)
 151:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_WriteDeadTime(PWM_BUCK_INIT_DEAD_TIME);
 137              		.loc 1 151 0
 138 007a 4FF00900 		mov	r0, #9
 139 007e FFF7FEFF 		bl	PWM_BUCK_WriteDeadTime
 152:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_DeadBandUsed) */
 153:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 154:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UseStatus || PWM_BUCK_UsingFixedFunction)
 155:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_SetInterruptMode(PWM_BUCK_INIT_INTERRUPTS_MODE);
 140              		.loc 1 155 0
 141 0082 4FF00000 		mov	r0, #0
 142 0086 FFF7FEFF 		bl	PWM_BUCK_SetInterruptMode
 156:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UseStatus || PWM_BUCK_UsingFixedFunction) */
 157:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 158:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UsingFixedFunction)
 159:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Globally Enable the Fixed Function Block chosen */
 160:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_GLOBAL_ENABLE |= PWM_BUCK_BLOCK_EN_MASK;
 161:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Set the Interrupt source to come from the status register */
 162:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_CONTROL2 |= PWM_BUCK_CTRL2_IRQ_SEL;
 163:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #else
 164:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(PWM_BUCK_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 166:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 167:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Enter Critical Region*/
 168:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_interruptState = CyEnterCriticalSection();
 143              		.loc 1 168 0
 144 008a FFF7FEFF 		bl	CyEnterCriticalSection
 145 008e 0346     		mov	r3, r0
 146 0090 FB71     		strb	r3, [r7, #7]
 169:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Use the interrupt output of the status register for IRQ output */
 170:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_STATUS_AUX_CTRL |= PWM_BUCK_STATUS_ACTL_INT_EN_MASK;
 147              		.loc 1 170 0
 148 0092 46F29553 		movw	r3, #:lower16:1073767829
 149 0096 C4F20003 		movt	r3, #:upper16:1073767829
 150 009a 46F29552 		movw	r2, #:lower16:1073767829
 151 009e C4F20002 		movt	r2, #:upper16:1073767829
 152 00a2 1278     		ldrb	r2, [r2, #0]
 153 00a4 D2B2     		uxtb	r2, r2
 154 00a6 42F01002 		orr	r2, r2, #16
 155 00aa D2B2     		uxtb	r2, r2
 156 00ac 1A70     		strb	r2, [r3, #0]
 171:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 172:.\Generated_Source\PSoC5/PWM_BUCK.c ****              /* Exit Critical Region*/
 173:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CyExitCriticalSection(PWM_BUCK_interruptState);
 157              		.loc 1 173 0
 158 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 159 00b0 1846     		mov	r0, r3
 160 00b2 FFF7FEFF 		bl	CyExitCriticalSection
 174:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 175:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Clear the FIFO to enable the PWM_BUCK_STATUS_FIFOFULL
 176:.\Generated_Source\PSoC5/PWM_BUCK.c ****                    bit to be set on FIFO full. */
 177:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_ClearFIFO();
 161              		.loc 1 177 0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 7


 162 00b6 FFF7FEFF 		bl	PWM_BUCK_ClearFIFO
 178:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UseStatus) */
 179:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
 180:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
 163              		.loc 1 180 0
 164 00ba 07F10807 		add	r7, r7, #8
 165 00be BD46     		mov	sp, r7
 166 00c0 80BD     		pop	{r7, pc}
 167              		.cfi_endproc
 168              	.LFE1:
 169              		.size	PWM_BUCK_Init, .-PWM_BUCK_Init
 170 00c2 00BF     		.section	.text.PWM_BUCK_Enable,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_BUCK_Enable
 173              		.thumb
 174              		.thumb_func
 175              		.type	PWM_BUCK_Enable, %function
 176              	PWM_BUCK_Enable:
 177              	.LFB2:
 181:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 182:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 183:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_Enable
 185:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
 186:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 187:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary: 
 188:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  Enables the PWM block operation
 189:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 190:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
 191:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
 192:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 193:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
 194:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
 195:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 196:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Side Effects: 
 197:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  This works only if software enable mode is chosen
 198:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 199:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC5/PWM_BUCK.c **** void PWM_BUCK_Enable(void) 
 201:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
 178              		.loc 1 201 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183 0000 80B4     		push	{r7}
 184              	.LCFI5:
 185              		.cfi_def_cfa_offset 4
 186 0002 00AF     		add	r7, sp, #0
 187              		.cfi_offset 7, -4
 188              	.LCFI6:
 189              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /* Globally Enable the Fixed Function Block chosen */
 203:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UsingFixedFunction)
 204:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_GLOBAL_ENABLE |= PWM_BUCK_BLOCK_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_GLOBAL_STBY_ENABLE |= PWM_BUCK_BLOCK_STBY_EN_MASK;
 206:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 8


 207:.\Generated_Source\PSoC5/PWM_BUCK.c ****     
 208:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /* Enable the PWM from the control register  */
 209:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UseControl || PWM_BUCK_UsingFixedFunction)
 210:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_CONTROL |= PWM_BUCK_CTRL_ENABLE;
 190              		.loc 1 210 0
 191 0004 46F27453 		movw	r3, #:lower16:1073767796
 192 0008 C4F20003 		movt	r3, #:upper16:1073767796
 193 000c 46F27452 		movw	r2, #:lower16:1073767796
 194 0010 C4F20002 		movt	r2, #:upper16:1073767796
 195 0014 1278     		ldrb	r2, [r2, #0]
 196 0016 D2B2     		uxtb	r2, r2
 197 0018 6FEA4262 		mvn	r2, r2, lsl #25
 198 001c 6FEA5262 		mvn	r2, r2, lsr #25
 199 0020 D2B2     		uxtb	r2, r2
 200 0022 1A70     		strb	r2, [r3, #0]
 211:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UseControl || PWM_BUCK_UsingFixedFunction) */
 212:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
 201              		.loc 1 212 0
 202 0024 BD46     		mov	sp, r7
 203 0026 80BC     		pop	{r7}
 204 0028 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	PWM_BUCK_Enable, .-PWM_BUCK_Enable
 208 002a 00BF     		.section	.text.PWM_BUCK_Stop,"ax",%progbits
 209              		.align	2
 210              		.global	PWM_BUCK_Stop
 211              		.thumb
 212              		.thumb_func
 213              		.type	PWM_BUCK_Stop, %function
 214              	PWM_BUCK_Stop:
 215              	.LFB3:
 213:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 214:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 215:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
 216:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_Stop
 217:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
 218:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 219:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary:
 220:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  The stop function halts the PWM, but does not change any modes or disable
 221:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  interrupts.
 222:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 223:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
 224:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None  
 225:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 226:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
 227:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
 228:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 229:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Side Effects:
 230:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  If the Enable mode is set to Hardware only then this function
 231:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  has no effect on the operation of the PWM
 232:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 233:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/
 234:.\Generated_Source\PSoC5/PWM_BUCK.c **** void PWM_BUCK_Stop(void) 
 235:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
 216              		.loc 1 235 0
 217              		.cfi_startproc
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 9


 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              	.LCFI7:
 223              		.cfi_def_cfa_offset 4
 224 0002 00AF     		add	r7, sp, #0
 225              		.cfi_offset 7, -4
 226              	.LCFI8:
 227              		.cfi_def_cfa_register 7
 236:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UseControl || PWM_BUCK_UsingFixedFunction)
 237:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_CONTROL &= ((uint8)(~PWM_BUCK_CTRL_ENABLE));
 228              		.loc 1 237 0
 229 0004 46F27453 		movw	r3, #:lower16:1073767796
 230 0008 C4F20003 		movt	r3, #:upper16:1073767796
 231 000c 46F27452 		movw	r2, #:lower16:1073767796
 232 0010 C4F20002 		movt	r2, #:upper16:1073767796
 233 0014 1278     		ldrb	r2, [r2, #0]
 234 0016 D2B2     		uxtb	r2, r2
 235 0018 02F07F02 		and	r2, r2, #127
 236 001c 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UseControl || PWM_BUCK_UsingFixedFunction) */
 239:.\Generated_Source\PSoC5/PWM_BUCK.c ****     
 240:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /* Globally disable the Fixed Function Block chosen */
 241:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if (PWM_BUCK_UsingFixedFunction)
 242:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_GLOBAL_ENABLE &= ((uint8)(~PWM_BUCK_BLOCK_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_BUCK.c ****         PWM_BUCK_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BUCK_BLOCK_STBY_EN_MASK));
 244:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
 245:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
 237              		.loc 1 245 0
 238 001e BD46     		mov	sp, r7
 239 0020 80BC     		pop	{r7}
 240 0022 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE3:
 243              		.size	PWM_BUCK_Stop, .-PWM_BUCK_Stop
 244              		.section	.text.PWM_BUCK_WriteCounter,"ax",%progbits
 245              		.align	2
 246              		.global	PWM_BUCK_WriteCounter
 247              		.thumb
 248              		.thumb_func
 249              		.type	PWM_BUCK_WriteCounter, %function
 250              	PWM_BUCK_WriteCounter:
 251              	.LFB4:
 246:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 247:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 248:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_UseOneCompareMode)
 249:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	#if (PWM_BUCK_CompareMode1SW)
 250:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 251:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 252:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		/*******************************************************************************
 253:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Function Name: PWM_BUCK_SetCompareMode
 254:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		********************************************************************************
 255:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* 
 256:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Summary:
 257:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 258:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  Center Align Mode or One Output Mode.
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 10


 259:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Parameters:
 261:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 262:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*                defined in the H file as input arguments.
 263:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 264:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Return:
 265:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  None
 266:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 267:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*******************************************************************************/
 268:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		void PWM_BUCK_SetCompareMode(uint8 comparemode) 
 269:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		{
 270:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #if(PWM_BUCK_UsingFixedFunction)
 271:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 272:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #if(0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT)
 273:.\Generated_Source\PSoC5/PWM_BUCK.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_BUCK_CTRL_CMPMODE1
 274:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #else
 275:.\Generated_Source\PSoC5/PWM_BUCK.c ****                     uint8 comparemodemasked = comparemode;
 276:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #endif /* (0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT) */
 277:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 278:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        #if(CY_PSOC5A)
 279:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		            PWM_BUCK_CONTROL2 &= ((uint8)(~PWM_BUCK_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 280:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		            PWM_BUCK_CONTROL2 |= comparemodemasked;  
 281:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        #endif /* (CY_PSOC5A) */
 282:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		                
 283:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        #if(CY_PSOC3 || CY_PSOC5LP)
 284:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		            PWM_BUCK_CONTROL3 &= ((uint8)(~PWM_BUCK_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 285:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		            PWM_BUCK_CONTROL3 |= comparemodemasked;     
 286:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 287:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		                
 288:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #elif (PWM_BUCK_UseControl)
 289:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        
 290:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #if(0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT)
 291:.\Generated_Source\PSoC5/PWM_BUCK.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_BUCK_CTRL_CMPMODE
 292:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		                                    PWM_BUCK_CTRL_CMPMODE1_MASK;
 293:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #else
 294:.\Generated_Source\PSoC5/PWM_BUCK.c ****                     uint8 comparemode1masked = comparemode & PWM_BUCK_CTRL_CMPMODE1_MASK;          
 295:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #endif /* (0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT) */
 296:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 
 297:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #if(0 != PWM_BUCK_CTRL_CMPMODE2_SHIFT)                            
 298:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_BUCK_CTRL_CMPMODE2_SHIF
 299:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		                                   PWM_BUCK_CTRL_CMPMODE2_MASK;
 300:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #else
 301:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		        uint8 comparemode2masked = comparemode & PWM_BUCK_CTRL_CMPMODE2_MASK;                
 302:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 #endif /* (0 != PWM_BUCK_CTRL_CMPMODE2_SHIFT) */
 303:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 
 304:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        /*Clear existing mode */
 305:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        PWM_BUCK_CONTROL &= ((uint8)(~(PWM_BUCK_CTRL_CMPMODE1_MASK | PWM_BUCK_CTRL_CMPMODE2_MASK)
 306:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        PWM_BUCK_CONTROL |= (comparemode1masked | comparemode2masked);
 307:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        
 308:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #else
 309:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        uint8 temp = comparemode;
 310:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #endif /* (PWM_BUCK_UsingFixedFunction) */
 311:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		}
 312:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	#endif /* PWM_BUCK_CompareMode1SW */
 313:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 314:.\Generated_Source\PSoC5/PWM_BUCK.c **** #else /* UseOneCompareMode */
 315:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 11


 316:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	#if (PWM_BUCK_CompareMode1SW)
 317:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 318:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 319:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		/*******************************************************************************
 320:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Function Name: PWM_BUCK_SetCompareMode1
 321:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		********************************************************************************
 322:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* 
 323:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Summary:
 324:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 325:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 326:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Parameters:  
 327:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 328:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*                defined in the H file as input arguments.
 329:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 330:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		* Return: 
 331:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*  None
 332:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*
 333:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		*******************************************************************************/
 334:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		void PWM_BUCK_SetCompareMode1(uint8 comparemode) 
 335:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		{
 336:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #if(0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT)
 337:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_BUCK_CTRL_CMPMODE1_SHI
 338:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		                               PWM_BUCK_CTRL_CMPMODE1_MASK;
 339:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #else
 340:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 uint8 comparemodemasked = comparemode & PWM_BUCK_CTRL_CMPMODE1_MASK;               
 341:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #endif /* (0 != PWM_BUCK_CTRL_CMPMODE1_SHIFT) */
 342:.\Generated_Source\PSoC5/PWM_BUCK.c ****                    
 343:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #if (PWM_BUCK_UseControl)
 344:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        PWM_BUCK_CONTROL &= ((uint8)(~PWM_BUCK_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 345:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		        PWM_BUCK_CONTROL |= comparemodemasked;
 346:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		    #endif /* (PWM_BUCK_UseControl) */
 347:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		}
 348:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	#endif /* PWM_BUCK_CompareMode1SW */
 349:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 350:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_CompareMode2SW)
 351:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 352:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 353:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 354:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_SetCompareMode2
 355:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 356:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 357:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 358:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 359:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 360:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 361:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 362:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *                defined in the H file as input arguments.
 363:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 364:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 365:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 366:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 367:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 368:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_SetCompareMode2(uint8 comparemode) 
 369:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 370:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 371:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(0 != PWM_BUCK_CTRL_CMPMODE2_SHIFT)
 372:.\Generated_Source\PSoC5/PWM_BUCK.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_BUCK_CTRL_CMPMODE2_SHIFT))
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 12


 373:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                                  PWM_BUCK_CTRL_CMPMODE2_MASK;
 374:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 375:.\Generated_Source\PSoC5/PWM_BUCK.c ****             uint8 comparemodemasked = comparemode & PWM_BUCK_CTRL_CMPMODE2_MASK;            
 376:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (0 != PWM_BUCK_CTRL_CMPMODE2_SHIFT) */
 377:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 378:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_UseControl)
 379:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_CONTROL &= ((uint8)(~PWM_BUCK_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 380:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_CONTROL |= comparemodemasked;
 381:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UseControl) */
 382:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 383:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /*PWM_BUCK_CompareMode2SW */
 384:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 385:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* UseOneCompareMode */
 386:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 387:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 388:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (!PWM_BUCK_UsingFixedFunction)
 389:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 390:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 391:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteCounter
 393:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 395:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 396:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function is used to change the counter value.
 397:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 398:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 399:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  counter:  This value may be between 1 and (2^Resolution)-1.   
 400:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 401:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 402:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 403:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 404:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 405:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteCounter(uint16 counter) \
 406:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                        
 407:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 252              		.loc 1 407 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 80B4     		push	{r7}
 258              	.LCFI9:
 259              		.cfi_def_cfa_offset 4
 260 0002 83B0     		sub	sp, sp, #12
 261              	.LCFI10:
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_offset 7, -4
 265              	.LCFI11:
 266              		.cfi_def_cfa_register 7
 267 0006 0346     		mov	r3, r0
 268 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 408:.\Generated_Source\PSoC5/PWM_BUCK.c ****         CY_SET_REG16(PWM_BUCK_COUNTER_LSB_PTR, counter);
 269              		.loc 1 408 0
 270 000a 46F60823 		movw	r3, #:lower16:1073768968
 271 000e C4F20003 		movt	r3, #:upper16:1073768968
 272 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 13


 273 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 409:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 274              		.loc 1 409 0
 275 0016 07F10C07 		add	r7, r7, #12
 276 001a BD46     		mov	sp, r7
 277 001c 80BC     		pop	{r7}
 278 001e 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE4:
 281              		.size	PWM_BUCK_WriteCounter, .-PWM_BUCK_WriteCounter
 282              		.section	.text.PWM_BUCK_ReadCounter,"ax",%progbits
 283              		.align	2
 284              		.global	PWM_BUCK_ReadCounter
 285              		.thumb
 286              		.thumb_func
 287              		.type	PWM_BUCK_ReadCounter, %function
 288              	PWM_BUCK_ReadCounter:
 289              	.LFB5:
 410:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 411:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 412:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadCounter
 414:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 416:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 417:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function returns the current value of the counter.  It doesn't matter
 418:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  if the counter is enabled or running.
 419:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 420:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 421:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None  
 422:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 423:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 424:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  The current value of the counter.
 425:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 426:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 427:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint16 PWM_BUCK_ReadCounter(void) 
 428:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 290              		.loc 1 428 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 295 0000 80B4     		push	{r7}
 296              	.LCFI12:
 297              		.cfi_def_cfa_offset 4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_offset 7, -4
 300              	.LCFI13:
 301              		.cfi_def_cfa_register 7
 429:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Force capture by reading Accumulator */
 430:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Must first do a software capture to be able to read the counter */
 431:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 432:.\Generated_Source\PSoC5/PWM_BUCK.c ****         (void)PWM_BUCK_COUNTERCAP_LSB;
 302              		.loc 1 432 0
 303 0004 46F62823 		movw	r3, #:lower16:1073769000
 304 0008 C4F20003 		movt	r3, #:upper16:1073769000
 305 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 14


 433:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 434:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 435:.\Generated_Source\PSoC5/PWM_BUCK.c ****         return (CY_GET_REG16(PWM_BUCK_CAPTURE_LSB_PTR));
 306              		.loc 1 435 0
 307 000e 46F6A823 		movw	r3, #:lower16:1073769128
 308 0012 C4F20003 		movt	r3, #:upper16:1073769128
 309 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 310 0018 9BB2     		uxth	r3, r3
 436:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 311              		.loc 1 436 0
 312 001a 1846     		mov	r0, r3
 313 001c BD46     		mov	sp, r7
 314 001e 80BC     		pop	{r7}
 315 0020 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	PWM_BUCK_ReadCounter, .-PWM_BUCK_ReadCounter
 319 0022 00BF     		.section	.text.PWM_BUCK_ClearFIFO,"ax",%progbits
 320              		.align	2
 321              		.global	PWM_BUCK_ClearFIFO
 322              		.thumb
 323              		.thumb_func
 324              		.type	PWM_BUCK_ClearFIFO, %function
 325              	PWM_BUCK_ClearFIFO:
 326              	.LFB6:
 437:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 438:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_UseStatus)
 439:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 440:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 441:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /*******************************************************************************
 442:.\Generated_Source\PSoC5/PWM_BUCK.c ****             * Function Name: PWM_BUCK_ClearFIFO
 443:.\Generated_Source\PSoC5/PWM_BUCK.c ****             ********************************************************************************
 444:.\Generated_Source\PSoC5/PWM_BUCK.c ****             * 
 445:.\Generated_Source\PSoC5/PWM_BUCK.c ****             * Summary:
 446:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *  This function clears all capture data from the capture FIFO
 447:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *
 448:.\Generated_Source\PSoC5/PWM_BUCK.c ****             * Parameters:  
 449:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *  None
 450:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *
 451:.\Generated_Source\PSoC5/PWM_BUCK.c ****             * Return: 
 452:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *  None
 453:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *
 454:.\Generated_Source\PSoC5/PWM_BUCK.c ****             *******************************************************************************/
 455:.\Generated_Source\PSoC5/PWM_BUCK.c ****             void PWM_BUCK_ClearFIFO(void) 
 456:.\Generated_Source\PSoC5/PWM_BUCK.c ****             {
 327              		.loc 1 456 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI14:
 333              		.cfi_def_cfa_offset 8
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_offset 14, -4
 336              		.cfi_offset 7, -8
 337              	.LCFI15:
 338              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 15


 457:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 while(0u != (PWM_BUCK_ReadStatusRegister() & PWM_BUCK_STATUS_FIFONEMPTY))
 339              		.loc 1 457 0
 340 0004 01E0     		b	.L15
 341              	.L16:
 458:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 {
 459:.\Generated_Source\PSoC5/PWM_BUCK.c ****                     (void)PWM_BUCK_ReadCapture();
 342              		.loc 1 459 0
 343 0006 FFF7FEFF 		bl	PWM_BUCK_ReadCapture
 344              	.L15:
 345              		.loc 1 457 0
 346 000a FFF7FEFF 		bl	PWM_BUCK_ReadStatusRegister
 347 000e 0346     		mov	r3, r0
 348 0010 03F01003 		and	r3, r3, #16
 349 0014 002B     		cmp	r3, #0
 350 0016 F6D1     		bne	.L16
 460:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 }
 461:.\Generated_Source\PSoC5/PWM_BUCK.c ****             }
 351              		.loc 1 461 0
 352 0018 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	PWM_BUCK_ClearFIFO, .-PWM_BUCK_ClearFIFO
 356 001a 00BF     		.section	.text.PWM_BUCK_WritePeriod,"ax",%progbits
 357              		.align	2
 358              		.global	PWM_BUCK_WritePeriod
 359              		.thumb
 360              		.thumb_func
 361              		.type	PWM_BUCK_WritePeriod, %function
 362              	PWM_BUCK_WritePeriod:
 363              	.LFB7:
 462:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 463:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* PWM_BUCK_UseStatus */
 464:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 465:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* !PWM_BUCK_UsingFixedFunction */
 466:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 467:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 468:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
 469:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_WritePeriod
 470:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
 471:.\Generated_Source\PSoC5/PWM_BUCK.c **** * 
 472:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary:
 473:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  This function is used to change the period of the counter.  The new period 
 474:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  will be loaded the next time terminal count is detected.
 475:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 476:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
 477:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
 478:.\Generated_Source\PSoC5/PWM_BUCK.c **** *           will result in the counter remaining at zero.
 479:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 480:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
 481:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
 482:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 483:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC5/PWM_BUCK.c **** void PWM_BUCK_WritePeriod(uint16 period) 
 485:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
 364              		.loc 1 485 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 16


 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              	.LCFI16:
 371              		.cfi_def_cfa_offset 4
 372 0002 83B0     		sub	sp, sp, #12
 373              	.LCFI17:
 374              		.cfi_def_cfa_offset 16
 375 0004 00AF     		add	r7, sp, #0
 376              		.cfi_offset 7, -4
 377              	.LCFI18:
 378              		.cfi_def_cfa_register 7
 379 0006 0346     		mov	r3, r0
 380 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 486:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #if(PWM_BUCK_UsingFixedFunction)
 487:.\Generated_Source\PSoC5/PWM_BUCK.c ****         CY_SET_REG16(PWM_BUCK_PERIOD_LSB_PTR, (uint16)period);
 488:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #else
 489:.\Generated_Source\PSoC5/PWM_BUCK.c ****         CY_SET_REG16(PWM_BUCK_PERIOD_LSB_PTR, period);
 381              		.loc 1 489 0
 382 000a 46F68823 		movw	r3, #:lower16:1073769096
 383 000e C4F20003 		movt	r3, #:upper16:1073769096
 384 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 385 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 490:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
 491:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
 386              		.loc 1 491 0
 387 0016 07F10C07 		add	r7, r7, #12
 388 001a BD46     		mov	sp, r7
 389 001c 80BC     		pop	{r7}
 390 001e 7047     		bx	lr
 391              		.cfi_endproc
 392              	.LFE7:
 393              		.size	PWM_BUCK_WritePeriod, .-PWM_BUCK_WritePeriod
 394              		.section	.text.PWM_BUCK_WriteCompare,"ax",%progbits
 395              		.align	2
 396              		.global	PWM_BUCK_WriteCompare
 397              		.thumb
 398              		.thumb_func
 399              		.type	PWM_BUCK_WriteCompare, %function
 400              	PWM_BUCK_WriteCompare:
 401              	.LFB8:
 492:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 493:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_UseOneCompareMode)
 494:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 495:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 496:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 497:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteCompare
 498:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 499:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 500:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 501:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 502:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 503:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  The compare output will be driven high when the present counter value is 
 504:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  compared to the compare value based on the compare mode defined in 
 505:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Dither Mode.
 506:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 507:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 17


 508:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  compare:  New compare value.  
 509:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 510:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 511:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 512:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 513:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Side Effects:
 514:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function is only available if the PWM mode parameter is set to
 515:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 516:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 517:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 518:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteCompare(uint16 compare) \
 519:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                        
 520:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {	
 402              		.loc 1 520 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              	.LCFI19:
 409              		.cfi_def_cfa_offset 4
 410 0002 83B0     		sub	sp, sp, #12
 411              	.LCFI20:
 412              		.cfi_def_cfa_offset 16
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_offset 7, -4
 415              	.LCFI21:
 416              		.cfi_def_cfa_register 7
 417 0006 0346     		mov	r3, r0
 418 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 521:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		#if(PWM_BUCK_UsingFixedFunction)
 522:.\Generated_Source\PSoC5/PWM_BUCK.c **** 			CY_SET_REG16(PWM_BUCK_COMPARE1_LSB_PTR, (uint16)compare);
 523:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		#else
 524:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	        CY_SET_REG16(PWM_BUCK_COMPARE1_LSB_PTR, compare);	
 419              		.loc 1 524 0
 420 000a 46F64823 		movw	r3, #:lower16:1073769032
 421 000e C4F20003 		movt	r3, #:upper16:1073769032
 422 0012 FA88     		ldrh	r2, [r7, #6]	@ movhi
 423 0014 1A80     		strh	r2, [r3, #0]	@ movhi
 525:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		#endif /* (PWM_BUCK_UsingFixedFunction) */
 526:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 527:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if (PWM_BUCK_PWMMode == PWM_BUCK__B_PWM__DITHER)
 528:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #if(PWM_BUCK_UsingFixedFunction)
 529:.\Generated_Source\PSoC5/PWM_BUCK.c ****     			CY_SET_REG16(PWM_BUCK_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		#else
 531:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	        CY_SET_REG16(PWM_BUCK_COMPARE2_LSB_PTR, (compare + 1u));	
 532:.\Generated_Source\PSoC5/PWM_BUCK.c ****     		#endif /* (PWM_BUCK_UsingFixedFunction) */
 533:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_PWMMode == PWM_BUCK__B_PWM__DITHER) */
 534:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 424              		.loc 1 534 0
 425 0016 07F10C07 		add	r7, r7, #12
 426 001a BD46     		mov	sp, r7
 427 001c 80BC     		pop	{r7}
 428 001e 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE8:
 431              		.size	PWM_BUCK_WriteCompare, .-PWM_BUCK_WriteCompare
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 18


 432              		.section	.text.PWM_BUCK_WriteDeadTime,"ax",%progbits
 433              		.align	2
 434              		.global	PWM_BUCK_WriteDeadTime
 435              		.thumb
 436              		.thumb_func
 437              		.type	PWM_BUCK_WriteDeadTime, %function
 438              	PWM_BUCK_WriteDeadTime:
 439              	.LFB9:
 535:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 536:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 537:.\Generated_Source\PSoC5/PWM_BUCK.c **** #else
 538:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 539:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 540:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 541:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteCompare1
 542:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 543:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 544:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 545:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 546:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 547:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  driven high when the present counter value is less than or less than or 
 548:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  equal to the compare register, depending on the mode.
 549:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 550:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 551:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  compare:  New compare value.  
 552:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 553:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 554:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 555:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 556:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 557:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteCompare1(uint16 compare) \
 558:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                         
 559:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 560:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(PWM_BUCK_UsingFixedFunction)
 561:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CY_SET_REG16(PWM_BUCK_COMPARE1_LSB_PTR, (uint16)compare);
 562:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 563:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CY_SET_REG16(PWM_BUCK_COMPARE1_LSB_PTR, compare);
 564:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UsingFixedFunction) */
 565:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 566:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 567:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 568:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 569:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteCompare2
 570:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 571:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 572:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 573:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 574:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 575:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  The compare output will be driven high when the present counter value is 
 576:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  less than or less than or equal to the compare register, depending on the 
 577:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  mode.
 578:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 579:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 580:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  compare:  New compare value.  
 581:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 582:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 583:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 19


 584:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 585:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 586:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteCompare2(uint16 compare) \
 587:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                         
 588:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 589:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(PWM_BUCK_UsingFixedFunction)
 590:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CY_SET_REG16(PWM_BUCK_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 592:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CY_SET_REG16(PWM_BUCK_COMPARE2_LSB_PTR, compare);
 593:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UsingFixedFunction) */
 594:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 595:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* UseOneCompareMode */
 596:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 597:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_DeadBandUsed)
 598:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 599:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 600:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 601:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteDeadTime
 602:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 603:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 604:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 605:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function writes the dead-band counts to the corresponding register
 606:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 607:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 608:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  deadtime:  Number of counts for dead time 
 609:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 610:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 611:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 612:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 613:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 614:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteDeadTime(uint8 deadtime) 
 615:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 440              		.loc 1 615 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 8
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              	.LCFI22:
 447              		.cfi_def_cfa_offset 4
 448 0002 83B0     		sub	sp, sp, #12
 449              	.LCFI23:
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_offset 7, -4
 453              	.LCFI24:
 454              		.cfi_def_cfa_register 7
 455 0006 0346     		mov	r3, r0
 456 0008 FB71     		strb	r3, [r7, #7]
 616:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 617:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(!PWM_BUCK_DeadBand2_4)
 618:.\Generated_Source\PSoC5/PWM_BUCK.c ****             CY_SET_REG8(PWM_BUCK_DEADBAND_COUNT_PTR, deadtime);
 457              		.loc 1 618 0
 458 000a 46F22B53 		movw	r3, #:lower16:1073767723
 459 000e C4F20003 		movt	r3, #:upper16:1073767723
 460 0012 FA79     		ldrb	r2, [r7, #7]
 461 0014 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 20


 619:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 620:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Otherwise the data has to be masked and offset */        
 621:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Clear existing data */
 622:.\Generated_Source\PSoC5/PWM_BUCK.c ****             PWM_BUCK_DEADBAND_COUNT &= ((uint8)(~PWM_BUCK_DEADBAND_COUNT_MASK));
 623:.\Generated_Source\PSoC5/PWM_BUCK.c ****             
 624:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Set new dead time */
 625:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #if(PWM_BUCK_DEADBAND_COUNT_SHIFT)        
 626:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 PWM_BUCK_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_BUCK_DEADBAND_COUNT_SHIF
 627:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                                     PWM_BUCK_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #else
 629:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 PWM_BUCK_DEADBAND_COUNT |= deadtime & PWM_BUCK_DEADBAND_COUNT_MASK;        
 630:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #endif /* (PWM_BUCK_DEADBAND_COUNT_SHIFT) */
 631:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 632:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (!PWM_BUCK_DeadBand2_4) */
 633:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 462              		.loc 1 633 0
 463 0016 07F10C07 		add	r7, r7, #12
 464 001a BD46     		mov	sp, r7
 465 001c 80BC     		pop	{r7}
 466 001e 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE9:
 469              		.size	PWM_BUCK_WriteDeadTime, .-PWM_BUCK_WriteDeadTime
 470              		.section	.text.PWM_BUCK_ReadDeadTime,"ax",%progbits
 471              		.align	2
 472              		.global	PWM_BUCK_ReadDeadTime
 473              		.thumb
 474              		.thumb_func
 475              		.type	PWM_BUCK_ReadDeadTime, %function
 476              	PWM_BUCK_ReadDeadTime:
 477              	.LFB10:
 634:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 635:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 636:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 637:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadDeadTime
 638:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 639:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 640:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 641:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function reads the dead-band counts from the corresponding register
 642:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 643:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 644:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 645:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 646:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 647:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Dead Band Counts
 648:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 649:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 650:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint8 PWM_BUCK_ReadDeadTime(void) 
 651:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 478              		.loc 1 651 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0000 80B4     		push	{r7}
 484              	.LCFI25:
 485              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 21


 486 0002 00AF     		add	r7, sp, #0
 487              		.cfi_offset 7, -4
 488              	.LCFI26:
 489              		.cfi_def_cfa_register 7
 652:.\Generated_Source\PSoC5/PWM_BUCK.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 653:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #if(!PWM_BUCK_DeadBand2_4)
 654:.\Generated_Source\PSoC5/PWM_BUCK.c ****             return (CY_GET_REG8(PWM_BUCK_DEADBAND_COUNT_PTR));
 490              		.loc 1 654 0
 491 0004 46F22B53 		movw	r3, #:lower16:1073767723
 492 0008 C4F20003 		movt	r3, #:upper16:1073767723
 493 000c 1B78     		ldrb	r3, [r3, #0]
 494 000e DBB2     		uxtb	r3, r3
 655:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 656:.\Generated_Source\PSoC5/PWM_BUCK.c ****         
 657:.\Generated_Source\PSoC5/PWM_BUCK.c ****             /* Otherwise the data has to be masked and offset */
 658:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #if(PWM_BUCK_DEADBAND_COUNT_SHIFT)      
 659:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 return ((uint8)(((uint8)(PWM_BUCK_DEADBAND_COUNT & PWM_BUCK_DEADBAND_COUNT_MASK)) >
 660:.\Generated_Source\PSoC5/PWM_BUCK.c ****                                                                            PWM_BUCK_DEADBAND_COUNT_
 661:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #else
 662:.\Generated_Source\PSoC5/PWM_BUCK.c ****                 return (PWM_BUCK_DEADBAND_COUNT & PWM_BUCK_DEADBAND_COUNT_MASK);
 663:.\Generated_Source\PSoC5/PWM_BUCK.c ****             #endif /* (PWM_BUCK_DEADBAND_COUNT_SHIFT) */
 664:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (!PWM_BUCK_DeadBand2_4) */
 665:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 495              		.loc 1 665 0
 496 0010 1846     		mov	r0, r3
 497 0012 BD46     		mov	sp, r7
 498 0014 80BC     		pop	{r7}
 499 0016 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE10:
 502              		.size	PWM_BUCK_ReadDeadTime, .-PWM_BUCK_ReadDeadTime
 503              		.section	.text.PWM_BUCK_SetInterruptMode,"ax",%progbits
 504              		.align	2
 505              		.global	PWM_BUCK_SetInterruptMode
 506              		.thumb
 507              		.thumb_func
 508              		.type	PWM_BUCK_SetInterruptMode, %function
 509              	PWM_BUCK_SetInterruptMode:
 510              	.LFB11:
 666:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* DeadBandUsed */
 667:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 668:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_UseStatus || PWM_BUCK_UsingFixedFunction)
 669:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 670:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 671:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 672:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_SetInterruptMode
 673:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 674:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 675:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 676:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function configures the interrupts mask control of theinterrupt 
 677:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  source status register.
 678:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 679:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 680:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 681:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 682:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 683:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 22


 684:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 685:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 686:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_SetInterruptMode(uint8 interruptMode)  
 687:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 511              		.loc 1 687 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516 0000 80B4     		push	{r7}
 517              	.LCFI27:
 518              		.cfi_def_cfa_offset 4
 519 0002 83B0     		sub	sp, sp, #12
 520              	.LCFI28:
 521              		.cfi_def_cfa_offset 16
 522 0004 00AF     		add	r7, sp, #0
 523              		.cfi_offset 7, -4
 524              	.LCFI29:
 525              		.cfi_def_cfa_register 7
 526 0006 0346     		mov	r3, r0
 527 0008 FB71     		strb	r3, [r7, #7]
 688:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	CY_SET_REG8(PWM_BUCK_STATUS_MASK_PTR, interruptMode);
 528              		.loc 1 688 0
 529 000a 46F28553 		movw	r3, #:lower16:1073767813
 530 000e C4F20003 		movt	r3, #:upper16:1073767813
 531 0012 FA79     		ldrb	r2, [r7, #7]
 532 0014 1A70     		strb	r2, [r3, #0]
 689:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 533              		.loc 1 689 0
 534 0016 07F10C07 		add	r7, r7, #12
 535 001a BD46     		mov	sp, r7
 536 001c 80BC     		pop	{r7}
 537 001e 7047     		bx	lr
 538              		.cfi_endproc
 539              	.LFE11:
 540              		.size	PWM_BUCK_SetInterruptMode, .-PWM_BUCK_SetInterruptMode
 541              		.section	.text.PWM_BUCK_ReadStatusRegister,"ax",%progbits
 542              		.align	2
 543              		.global	PWM_BUCK_ReadStatusRegister
 544              		.thumb
 545              		.thumb_func
 546              		.type	PWM_BUCK_ReadStatusRegister, %function
 547              	PWM_BUCK_ReadStatusRegister:
 548              	.LFB12:
 690:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 691:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 692:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 693:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadStatusRegister
 694:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 695:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 696:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 697:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  This function returns the current state of the status register. 
 698:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 699:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 700:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 701:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 702:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 23


 703:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8 : Current status register value. The status register bits are:
 704:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [7:6] : Unused(0)
 705:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [5]   : Kill event output
 706:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [4]   : FIFO not empty
 707:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [3]   : FIFO full
 708:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [2]   : Terminal count
 709:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [1]   : Compare output 2
 710:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [0]   : Compare output 1
 711:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 712:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/
 713:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint8 PWM_BUCK_ReadStatusRegister(void)   
 714:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 549              		.loc 1 714 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 8
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              	.LCFI30:
 556              		.cfi_def_cfa_offset 4
 557 0002 83B0     		sub	sp, sp, #12
 558              	.LCFI31:
 559              		.cfi_def_cfa_offset 16
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_offset 7, -4
 562              	.LCFI32:
 563              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	uint8 result;
 716:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	
 717:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	result = CY_GET_REG8(PWM_BUCK_STATUS_PTR);
 564              		.loc 1 717 0
 565 0006 46F26553 		movw	r3, #:lower16:1073767781
 566 000a C4F20003 		movt	r3, #:upper16:1073767781
 567 000e 1B78     		ldrb	r3, [r3, #0]
 568 0010 FB71     		strb	r3, [r7, #7]
 718:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	return (result);
 569              		.loc 1 718 0
 570 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 571              		.loc 1 719 0
 572 0014 1846     		mov	r0, r3
 573 0016 07F10C07 		add	r7, r7, #12
 574 001a BD46     		mov	sp, r7
 575 001c 80BC     		pop	{r7}
 576 001e 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE12:
 579              		.size	PWM_BUCK_ReadStatusRegister, .-PWM_BUCK_ReadStatusRegister
 580              		.section	.text.PWM_BUCK_ReadControlRegister,"ax",%progbits
 581              		.align	2
 582              		.global	PWM_BUCK_ReadControlRegister
 583              		.thumb
 584              		.thumb_func
 585              		.type	PWM_BUCK_ReadControlRegister, %function
 586              	PWM_BUCK_ReadControlRegister:
 587              	.LFB13:
 720:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 24


 721:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* (PWM_BUCK_UseStatus || PWM_BUCK_UsingFixedFunction) */
 722:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 723:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 724:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_UseControl)
 725:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 726:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 727:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 728:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadControlRegister
 729:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 730:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 731:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 732:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Returns the current state of the control register. This API is available 
 733:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  only if the control register is not removed.
 734:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 735:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 736:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None 
 737:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 738:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 739:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8 : Current control register value
 740:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 741:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/    
 742:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint8 PWM_BUCK_ReadControlRegister(void) 
 743:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 588              		.loc 1 743 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 8
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0000 80B4     		push	{r7}
 594              	.LCFI33:
 595              		.cfi_def_cfa_offset 4
 596 0002 83B0     		sub	sp, sp, #12
 597              	.LCFI34:
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_offset 7, -4
 601              	.LCFI35:
 602              		.cfi_def_cfa_register 7
 744:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	uint8 result;
 745:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	
 746:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	result = CY_GET_REG8(PWM_BUCK_CONTROL_PTR);
 603              		.loc 1 746 0
 604 0006 46F27453 		movw	r3, #:lower16:1073767796
 605 000a C4F20003 		movt	r3, #:upper16:1073767796
 606 000e 1B78     		ldrb	r3, [r3, #0]
 607 0010 FB71     		strb	r3, [r7, #7]
 747:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	return (result);
 608              		.loc 1 747 0
 609 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 748:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 610              		.loc 1 748 0
 611 0014 1846     		mov	r0, r3
 612 0016 07F10C07 		add	r7, r7, #12
 613 001a BD46     		mov	sp, r7
 614 001c 80BC     		pop	{r7}
 615 001e 7047     		bx	lr
 616              		.cfi_endproc
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 25


 617              	.LFE13:
 618              		.size	PWM_BUCK_ReadControlRegister, .-PWM_BUCK_ReadControlRegister
 619              		.section	.text.PWM_BUCK_WriteControlRegister,"ax",%progbits
 620              		.align	2
 621              		.global	PWM_BUCK_WriteControlRegister
 622              		.thumb
 623              		.thumb_func
 624              		.type	PWM_BUCK_WriteControlRegister, %function
 625              	PWM_BUCK_WriteControlRegister:
 626              	.LFB14:
 749:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 750:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 751:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 752:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_WriteControlRegister
 753:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 754:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 755:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 756:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Sets the bit field of the control register. This API is available only if 
 757:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  the control register is not removed.
 758:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 759:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 760:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8 control: Control register bit field, The status register bits are:
 761:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [7]   : PWM Enable
 762:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [6]   : Reset
 763:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [5:3] : Compare Mode2
 764:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  [2:0] : Compare Mode2
 765:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 766:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 767:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 768:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 769:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/  
 770:.\Generated_Source\PSoC5/PWM_BUCK.c ****     void PWM_BUCK_WriteControlRegister(uint8 control) 
 771:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 627              		.loc 1 771 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 8
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632 0000 80B4     		push	{r7}
 633              	.LCFI36:
 634              		.cfi_def_cfa_offset 4
 635 0002 83B0     		sub	sp, sp, #12
 636              	.LCFI37:
 637              		.cfi_def_cfa_offset 16
 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_offset 7, -4
 640              	.LCFI38:
 641              		.cfi_def_cfa_register 7
 642 0006 0346     		mov	r3, r0
 643 0008 FB71     		strb	r3, [r7, #7]
 772:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	CY_SET_REG8(PWM_BUCK_CONTROL_PTR, control);
 644              		.loc 1 772 0
 645 000a 46F27453 		movw	r3, #:lower16:1073767796
 646 000e C4F20003 		movt	r3, #:upper16:1073767796
 647 0012 FA79     		ldrb	r2, [r7, #7]
 648 0014 1A70     		strb	r2, [r3, #0]
 773:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 26


 649              		.loc 1 773 0
 650 0016 07F10C07 		add	r7, r7, #12
 651 001a BD46     		mov	sp, r7
 652 001c 80BC     		pop	{r7}
 653 001e 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE14:
 656              		.size	PWM_BUCK_WriteControlRegister, .-PWM_BUCK_WriteControlRegister
 657              		.section	.text.PWM_BUCK_ReadCapture,"ax",%progbits
 658              		.align	2
 659              		.global	PWM_BUCK_ReadCapture
 660              		.thumb
 661              		.thumb_func
 662              		.type	PWM_BUCK_ReadCapture, %function
 663              	PWM_BUCK_ReadCapture:
 664              	.LFB15:
 774:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	
 775:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* (PWM_BUCK_UseControl) */
 776:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 777:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 778:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (!PWM_BUCK_UsingFixedFunction)
 779:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 780:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 781:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 782:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadCapture
 783:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 784:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 785:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 786:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Reads the capture value from the capture FIFO.
 787:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 788:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 789:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 790:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 791:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 792:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8/uint16: The current capture value
 793:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 794:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/  
 795:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint16 PWM_BUCK_ReadCapture(void)  
 796:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 665              		.loc 1 796 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              	.LCFI39:
 672              		.cfi_def_cfa_offset 4
 673 0002 00AF     		add	r7, sp, #0
 674              		.cfi_offset 7, -4
 675              	.LCFI40:
 676              		.cfi_def_cfa_register 7
 797:.\Generated_Source\PSoC5/PWM_BUCK.c ****     	return (CY_GET_REG16(PWM_BUCK_CAPTURE_LSB_PTR));
 677              		.loc 1 797 0
 678 0004 46F6A823 		movw	r3, #:lower16:1073769128
 679 0008 C4F20003 		movt	r3, #:upper16:1073769128
 680 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 681 000e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 27


 798:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 682              		.loc 1 798 0
 683 0010 1846     		mov	r0, r3
 684 0012 BD46     		mov	sp, r7
 685 0014 80BC     		pop	{r7}
 686 0016 7047     		bx	lr
 687              		.cfi_endproc
 688              	.LFE15:
 689              		.size	PWM_BUCK_ReadCapture, .-PWM_BUCK_ReadCapture
 690              		.section	.text.PWM_BUCK_ReadCompare,"ax",%progbits
 691              		.align	2
 692              		.global	PWM_BUCK_ReadCompare
 693              		.thumb
 694              		.thumb_func
 695              		.type	PWM_BUCK_ReadCompare, %function
 696              	PWM_BUCK_ReadCompare:
 697              	.LFB16:
 799:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	
 800:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* (!PWM_BUCK_UsingFixedFunction) */
 801:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 802:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 803:.\Generated_Source\PSoC5/PWM_BUCK.c **** #if (PWM_BUCK_UseOneCompareMode)
 804:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 805:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 806:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 807:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadCompare
 808:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 809:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 810:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 811:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 812:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 813:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 814:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 815:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 816:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 817:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 818:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8/uint16: Current compare value
 819:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 820:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/  
 821:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint16 PWM_BUCK_ReadCompare(void)  
 822:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 698              		.loc 1 822 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              	.LCFI41:
 705              		.cfi_def_cfa_offset 4
 706 0002 00AF     		add	r7, sp, #0
 707              		.cfi_offset 7, -4
 708              	.LCFI42:
 709              		.cfi_def_cfa_register 7
 823:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		#if(PWM_BUCK_UsingFixedFunction)
 824:.\Generated_Source\PSoC5/PWM_BUCK.c ****             return ((uint16)CY_GET_REG16(PWM_BUCK_COMPARE1_LSB_PTR));
 825:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #else
 826:.\Generated_Source\PSoC5/PWM_BUCK.c ****             return (CY_GET_REG16(PWM_BUCK_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 28


 710              		.loc 1 826 0
 711 0004 46F64823 		movw	r3, #:lower16:1073769032
 712 0008 C4F20003 		movt	r3, #:upper16:1073769032
 713 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 714 000e 9BB2     		uxth	r3, r3
 827:.\Generated_Source\PSoC5/PWM_BUCK.c ****         #endif /* (PWM_BUCK_UsingFixedFunction) */
 828:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 715              		.loc 1 828 0
 716 0010 1846     		mov	r0, r3
 717 0012 BD46     		mov	sp, r7
 718 0014 80BC     		pop	{r7}
 719 0016 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE16:
 722              		.size	PWM_BUCK_ReadCompare, .-PWM_BUCK_ReadCompare
 723              		.section	.text.PWM_BUCK_ReadPeriod,"ax",%progbits
 724              		.align	2
 725              		.global	PWM_BUCK_ReadPeriod
 726              		.thumb
 727              		.thumb_func
 728              		.type	PWM_BUCK_ReadPeriod, %function
 729              	PWM_BUCK_ReadPeriod:
 730              	.LFB17:
 829:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 830:.\Generated_Source\PSoC5/PWM_BUCK.c **** #else
 831:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 832:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 833:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 834:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadCompare1
 835:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 836:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 837:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 838:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Reads the compare value for the compare1 output.
 839:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 840:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 841:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 842:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 843:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 844:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8/uint16: Current compare value.
 845:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 846:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/  
 847:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint16 PWM_BUCK_ReadCompare1(void) 
 848:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 849:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		return (CY_GET_REG16(PWM_BUCK_COMPARE1_LSB_PTR));
 850:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 851:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 852:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 853:.\Generated_Source\PSoC5/PWM_BUCK.c ****     /*******************************************************************************
 854:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Function Name: PWM_BUCK_ReadCompare2
 855:.\Generated_Source\PSoC5/PWM_BUCK.c ****     ********************************************************************************
 856:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * 
 857:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Summary:
 858:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  Reads the compare value for the compare2 output.
 859:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 860:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Parameters:  
 861:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  None
 862:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 29


 863:.\Generated_Source\PSoC5/PWM_BUCK.c ****     * Return: 
 864:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *  uint8/uint16: Current compare value.
 865:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *
 866:.\Generated_Source\PSoC5/PWM_BUCK.c ****     *******************************************************************************/  
 867:.\Generated_Source\PSoC5/PWM_BUCK.c ****     uint16 PWM_BUCK_ReadCompare2(void)  
 868:.\Generated_Source\PSoC5/PWM_BUCK.c ****     {
 869:.\Generated_Source\PSoC5/PWM_BUCK.c **** 		return (CY_GET_REG16(PWM_BUCK_COMPARE2_LSB_PTR));
 870:.\Generated_Source\PSoC5/PWM_BUCK.c ****     }
 871:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 872:.\Generated_Source\PSoC5/PWM_BUCK.c **** #endif /* (PWM_BUCK_UseOneCompareMode) */
 873:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 874:.\Generated_Source\PSoC5/PWM_BUCK.c **** 
 875:.\Generated_Source\PSoC5/PWM_BUCK.c **** /*******************************************************************************
 876:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Function Name: PWM_BUCK_ReadPeriod
 877:.\Generated_Source\PSoC5/PWM_BUCK.c **** ********************************************************************************
 878:.\Generated_Source\PSoC5/PWM_BUCK.c **** * 
 879:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Summary:
 880:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  Reads the period value used by the PWM hardware.
 881:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 882:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Parameters:  
 883:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  None
 884:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 885:.\Generated_Source\PSoC5/PWM_BUCK.c **** * Return: 
 886:.\Generated_Source\PSoC5/PWM_BUCK.c **** *  uint8/16: Period value
 887:.\Generated_Source\PSoC5/PWM_BUCK.c **** *
 888:.\Generated_Source\PSoC5/PWM_BUCK.c **** *******************************************************************************/ 
 889:.\Generated_Source\PSoC5/PWM_BUCK.c **** uint16 PWM_BUCK_ReadPeriod(void) 
 890:.\Generated_Source\PSoC5/PWM_BUCK.c **** {
 731              		.loc 1 890 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736 0000 80B4     		push	{r7}
 737              	.LCFI43:
 738              		.cfi_def_cfa_offset 4
 739 0002 00AF     		add	r7, sp, #0
 740              		.cfi_offset 7, -4
 741              	.LCFI44:
 742              		.cfi_def_cfa_register 7
 891:.\Generated_Source\PSoC5/PWM_BUCK.c **** 	#if(PWM_BUCK_UsingFixedFunction)
 892:.\Generated_Source\PSoC5/PWM_BUCK.c ****         return ((uint16)CY_GET_REG16(PWM_BUCK_PERIOD_LSB_PTR));
 893:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #else
 894:.\Generated_Source\PSoC5/PWM_BUCK.c ****         return (CY_GET_REG16(PWM_BUCK_PERIOD_LSB_PTR));
 743              		.loc 1 894 0
 744 0004 46F68823 		movw	r3, #:lower16:1073769096
 745 0008 C4F20003 		movt	r3, #:upper16:1073769096
 746 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 747 000e 9BB2     		uxth	r3, r3
 895:.\Generated_Source\PSoC5/PWM_BUCK.c ****     #endif /* (PWM_BUCK_UsingFixedFunction) */
 896:.\Generated_Source\PSoC5/PWM_BUCK.c **** }
 748              		.loc 1 896 0
 749 0010 1846     		mov	r0, r3
 750 0012 BD46     		mov	sp, r7
 751 0014 80BC     		pop	{r7}
 752 0016 7047     		bx	lr
 753              		.cfi_endproc
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 30


 754              	.LFE17:
 755              		.size	PWM_BUCK_ReadPeriod, .-PWM_BUCK_ReadPeriod
 756              		.text
 757              	.Letext0:
 758              		.section	.debug_loc,"",%progbits
 759              	.Ldebug_loc0:
 760              	.LLST0:
 761 0000 00000000 		.4byte	.LFB0
 762 0004 02000000 		.4byte	.LCFI0
 763 0008 0100     		.2byte	0x1
 764 000a 5D       		.byte	0x5d
 765 000b 02000000 		.4byte	.LCFI0
 766 000f 04000000 		.4byte	.LCFI1
 767 0013 0200     		.2byte	0x2
 768 0015 7D       		.byte	0x7d
 769 0016 08       		.sleb128 8
 770 0017 04000000 		.4byte	.LCFI1
 771 001b 2A000000 		.4byte	.LFE0
 772 001f 0200     		.2byte	0x2
 773 0021 77       		.byte	0x77
 774 0022 08       		.sleb128 8
 775 0023 00000000 		.4byte	0x0
 776 0027 00000000 		.4byte	0x0
 777              	.LLST1:
 778 002b 00000000 		.4byte	.LFB1
 779 002f 02000000 		.4byte	.LCFI2
 780 0033 0100     		.2byte	0x1
 781 0035 5D       		.byte	0x5d
 782 0036 02000000 		.4byte	.LCFI2
 783 003a 04000000 		.4byte	.LCFI3
 784 003e 0200     		.2byte	0x2
 785 0040 7D       		.byte	0x7d
 786 0041 08       		.sleb128 8
 787 0042 04000000 		.4byte	.LCFI3
 788 0046 06000000 		.4byte	.LCFI4
 789 004a 0200     		.2byte	0x2
 790 004c 7D       		.byte	0x7d
 791 004d 10       		.sleb128 16
 792 004e 06000000 		.4byte	.LCFI4
 793 0052 C2000000 		.4byte	.LFE1
 794 0056 0200     		.2byte	0x2
 795 0058 77       		.byte	0x77
 796 0059 10       		.sleb128 16
 797 005a 00000000 		.4byte	0x0
 798 005e 00000000 		.4byte	0x0
 799              	.LLST2:
 800 0062 00000000 		.4byte	.LFB2
 801 0066 02000000 		.4byte	.LCFI5
 802 006a 0100     		.2byte	0x1
 803 006c 5D       		.byte	0x5d
 804 006d 02000000 		.4byte	.LCFI5
 805 0071 04000000 		.4byte	.LCFI6
 806 0075 0200     		.2byte	0x2
 807 0077 7D       		.byte	0x7d
 808 0078 04       		.sleb128 4
 809 0079 04000000 		.4byte	.LCFI6
 810 007d 2A000000 		.4byte	.LFE2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 31


 811 0081 0200     		.2byte	0x2
 812 0083 77       		.byte	0x77
 813 0084 04       		.sleb128 4
 814 0085 00000000 		.4byte	0x0
 815 0089 00000000 		.4byte	0x0
 816              	.LLST3:
 817 008d 00000000 		.4byte	.LFB3
 818 0091 02000000 		.4byte	.LCFI7
 819 0095 0100     		.2byte	0x1
 820 0097 5D       		.byte	0x5d
 821 0098 02000000 		.4byte	.LCFI7
 822 009c 04000000 		.4byte	.LCFI8
 823 00a0 0200     		.2byte	0x2
 824 00a2 7D       		.byte	0x7d
 825 00a3 04       		.sleb128 4
 826 00a4 04000000 		.4byte	.LCFI8
 827 00a8 24000000 		.4byte	.LFE3
 828 00ac 0200     		.2byte	0x2
 829 00ae 77       		.byte	0x77
 830 00af 04       		.sleb128 4
 831 00b0 00000000 		.4byte	0x0
 832 00b4 00000000 		.4byte	0x0
 833              	.LLST4:
 834 00b8 00000000 		.4byte	.LFB4
 835 00bc 02000000 		.4byte	.LCFI9
 836 00c0 0100     		.2byte	0x1
 837 00c2 5D       		.byte	0x5d
 838 00c3 02000000 		.4byte	.LCFI9
 839 00c7 04000000 		.4byte	.LCFI10
 840 00cb 0200     		.2byte	0x2
 841 00cd 7D       		.byte	0x7d
 842 00ce 04       		.sleb128 4
 843 00cf 04000000 		.4byte	.LCFI10
 844 00d3 06000000 		.4byte	.LCFI11
 845 00d7 0200     		.2byte	0x2
 846 00d9 7D       		.byte	0x7d
 847 00da 10       		.sleb128 16
 848 00db 06000000 		.4byte	.LCFI11
 849 00df 20000000 		.4byte	.LFE4
 850 00e3 0200     		.2byte	0x2
 851 00e5 77       		.byte	0x77
 852 00e6 10       		.sleb128 16
 853 00e7 00000000 		.4byte	0x0
 854 00eb 00000000 		.4byte	0x0
 855              	.LLST5:
 856 00ef 00000000 		.4byte	.LFB5
 857 00f3 02000000 		.4byte	.LCFI12
 858 00f7 0100     		.2byte	0x1
 859 00f9 5D       		.byte	0x5d
 860 00fa 02000000 		.4byte	.LCFI12
 861 00fe 04000000 		.4byte	.LCFI13
 862 0102 0200     		.2byte	0x2
 863 0104 7D       		.byte	0x7d
 864 0105 04       		.sleb128 4
 865 0106 04000000 		.4byte	.LCFI13
 866 010a 22000000 		.4byte	.LFE5
 867 010e 0200     		.2byte	0x2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 32


 868 0110 77       		.byte	0x77
 869 0111 04       		.sleb128 4
 870 0112 00000000 		.4byte	0x0
 871 0116 00000000 		.4byte	0x0
 872              	.LLST6:
 873 011a 00000000 		.4byte	.LFB6
 874 011e 02000000 		.4byte	.LCFI14
 875 0122 0100     		.2byte	0x1
 876 0124 5D       		.byte	0x5d
 877 0125 02000000 		.4byte	.LCFI14
 878 0129 04000000 		.4byte	.LCFI15
 879 012d 0200     		.2byte	0x2
 880 012f 7D       		.byte	0x7d
 881 0130 08       		.sleb128 8
 882 0131 04000000 		.4byte	.LCFI15
 883 0135 1A000000 		.4byte	.LFE6
 884 0139 0200     		.2byte	0x2
 885 013b 77       		.byte	0x77
 886 013c 08       		.sleb128 8
 887 013d 00000000 		.4byte	0x0
 888 0141 00000000 		.4byte	0x0
 889              	.LLST7:
 890 0145 00000000 		.4byte	.LFB7
 891 0149 02000000 		.4byte	.LCFI16
 892 014d 0100     		.2byte	0x1
 893 014f 5D       		.byte	0x5d
 894 0150 02000000 		.4byte	.LCFI16
 895 0154 04000000 		.4byte	.LCFI17
 896 0158 0200     		.2byte	0x2
 897 015a 7D       		.byte	0x7d
 898 015b 04       		.sleb128 4
 899 015c 04000000 		.4byte	.LCFI17
 900 0160 06000000 		.4byte	.LCFI18
 901 0164 0200     		.2byte	0x2
 902 0166 7D       		.byte	0x7d
 903 0167 10       		.sleb128 16
 904 0168 06000000 		.4byte	.LCFI18
 905 016c 20000000 		.4byte	.LFE7
 906 0170 0200     		.2byte	0x2
 907 0172 77       		.byte	0x77
 908 0173 10       		.sleb128 16
 909 0174 00000000 		.4byte	0x0
 910 0178 00000000 		.4byte	0x0
 911              	.LLST8:
 912 017c 00000000 		.4byte	.LFB8
 913 0180 02000000 		.4byte	.LCFI19
 914 0184 0100     		.2byte	0x1
 915 0186 5D       		.byte	0x5d
 916 0187 02000000 		.4byte	.LCFI19
 917 018b 04000000 		.4byte	.LCFI20
 918 018f 0200     		.2byte	0x2
 919 0191 7D       		.byte	0x7d
 920 0192 04       		.sleb128 4
 921 0193 04000000 		.4byte	.LCFI20
 922 0197 06000000 		.4byte	.LCFI21
 923 019b 0200     		.2byte	0x2
 924 019d 7D       		.byte	0x7d
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 33


 925 019e 10       		.sleb128 16
 926 019f 06000000 		.4byte	.LCFI21
 927 01a3 20000000 		.4byte	.LFE8
 928 01a7 0200     		.2byte	0x2
 929 01a9 77       		.byte	0x77
 930 01aa 10       		.sleb128 16
 931 01ab 00000000 		.4byte	0x0
 932 01af 00000000 		.4byte	0x0
 933              	.LLST9:
 934 01b3 00000000 		.4byte	.LFB9
 935 01b7 02000000 		.4byte	.LCFI22
 936 01bb 0100     		.2byte	0x1
 937 01bd 5D       		.byte	0x5d
 938 01be 02000000 		.4byte	.LCFI22
 939 01c2 04000000 		.4byte	.LCFI23
 940 01c6 0200     		.2byte	0x2
 941 01c8 7D       		.byte	0x7d
 942 01c9 04       		.sleb128 4
 943 01ca 04000000 		.4byte	.LCFI23
 944 01ce 06000000 		.4byte	.LCFI24
 945 01d2 0200     		.2byte	0x2
 946 01d4 7D       		.byte	0x7d
 947 01d5 10       		.sleb128 16
 948 01d6 06000000 		.4byte	.LCFI24
 949 01da 20000000 		.4byte	.LFE9
 950 01de 0200     		.2byte	0x2
 951 01e0 77       		.byte	0x77
 952 01e1 10       		.sleb128 16
 953 01e2 00000000 		.4byte	0x0
 954 01e6 00000000 		.4byte	0x0
 955              	.LLST10:
 956 01ea 00000000 		.4byte	.LFB10
 957 01ee 02000000 		.4byte	.LCFI25
 958 01f2 0100     		.2byte	0x1
 959 01f4 5D       		.byte	0x5d
 960 01f5 02000000 		.4byte	.LCFI25
 961 01f9 04000000 		.4byte	.LCFI26
 962 01fd 0200     		.2byte	0x2
 963 01ff 7D       		.byte	0x7d
 964 0200 04       		.sleb128 4
 965 0201 04000000 		.4byte	.LCFI26
 966 0205 18000000 		.4byte	.LFE10
 967 0209 0200     		.2byte	0x2
 968 020b 77       		.byte	0x77
 969 020c 04       		.sleb128 4
 970 020d 00000000 		.4byte	0x0
 971 0211 00000000 		.4byte	0x0
 972              	.LLST11:
 973 0215 00000000 		.4byte	.LFB11
 974 0219 02000000 		.4byte	.LCFI27
 975 021d 0100     		.2byte	0x1
 976 021f 5D       		.byte	0x5d
 977 0220 02000000 		.4byte	.LCFI27
 978 0224 04000000 		.4byte	.LCFI28
 979 0228 0200     		.2byte	0x2
 980 022a 7D       		.byte	0x7d
 981 022b 04       		.sleb128 4
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 34


 982 022c 04000000 		.4byte	.LCFI28
 983 0230 06000000 		.4byte	.LCFI29
 984 0234 0200     		.2byte	0x2
 985 0236 7D       		.byte	0x7d
 986 0237 10       		.sleb128 16
 987 0238 06000000 		.4byte	.LCFI29
 988 023c 20000000 		.4byte	.LFE11
 989 0240 0200     		.2byte	0x2
 990 0242 77       		.byte	0x77
 991 0243 10       		.sleb128 16
 992 0244 00000000 		.4byte	0x0
 993 0248 00000000 		.4byte	0x0
 994              	.LLST12:
 995 024c 00000000 		.4byte	.LFB12
 996 0250 02000000 		.4byte	.LCFI30
 997 0254 0100     		.2byte	0x1
 998 0256 5D       		.byte	0x5d
 999 0257 02000000 		.4byte	.LCFI30
 1000 025b 04000000 		.4byte	.LCFI31
 1001 025f 0200     		.2byte	0x2
 1002 0261 7D       		.byte	0x7d
 1003 0262 04       		.sleb128 4
 1004 0263 04000000 		.4byte	.LCFI31
 1005 0267 06000000 		.4byte	.LCFI32
 1006 026b 0200     		.2byte	0x2
 1007 026d 7D       		.byte	0x7d
 1008 026e 10       		.sleb128 16
 1009 026f 06000000 		.4byte	.LCFI32
 1010 0273 20000000 		.4byte	.LFE12
 1011 0277 0200     		.2byte	0x2
 1012 0279 77       		.byte	0x77
 1013 027a 10       		.sleb128 16
 1014 027b 00000000 		.4byte	0x0
 1015 027f 00000000 		.4byte	0x0
 1016              	.LLST13:
 1017 0283 00000000 		.4byte	.LFB13
 1018 0287 02000000 		.4byte	.LCFI33
 1019 028b 0100     		.2byte	0x1
 1020 028d 5D       		.byte	0x5d
 1021 028e 02000000 		.4byte	.LCFI33
 1022 0292 04000000 		.4byte	.LCFI34
 1023 0296 0200     		.2byte	0x2
 1024 0298 7D       		.byte	0x7d
 1025 0299 04       		.sleb128 4
 1026 029a 04000000 		.4byte	.LCFI34
 1027 029e 06000000 		.4byte	.LCFI35
 1028 02a2 0200     		.2byte	0x2
 1029 02a4 7D       		.byte	0x7d
 1030 02a5 10       		.sleb128 16
 1031 02a6 06000000 		.4byte	.LCFI35
 1032 02aa 20000000 		.4byte	.LFE13
 1033 02ae 0200     		.2byte	0x2
 1034 02b0 77       		.byte	0x77
 1035 02b1 10       		.sleb128 16
 1036 02b2 00000000 		.4byte	0x0
 1037 02b6 00000000 		.4byte	0x0
 1038              	.LLST14:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 35


 1039 02ba 00000000 		.4byte	.LFB14
 1040 02be 02000000 		.4byte	.LCFI36
 1041 02c2 0100     		.2byte	0x1
 1042 02c4 5D       		.byte	0x5d
 1043 02c5 02000000 		.4byte	.LCFI36
 1044 02c9 04000000 		.4byte	.LCFI37
 1045 02cd 0200     		.2byte	0x2
 1046 02cf 7D       		.byte	0x7d
 1047 02d0 04       		.sleb128 4
 1048 02d1 04000000 		.4byte	.LCFI37
 1049 02d5 06000000 		.4byte	.LCFI38
 1050 02d9 0200     		.2byte	0x2
 1051 02db 7D       		.byte	0x7d
 1052 02dc 10       		.sleb128 16
 1053 02dd 06000000 		.4byte	.LCFI38
 1054 02e1 20000000 		.4byte	.LFE14
 1055 02e5 0200     		.2byte	0x2
 1056 02e7 77       		.byte	0x77
 1057 02e8 10       		.sleb128 16
 1058 02e9 00000000 		.4byte	0x0
 1059 02ed 00000000 		.4byte	0x0
 1060              	.LLST15:
 1061 02f1 00000000 		.4byte	.LFB15
 1062 02f5 02000000 		.4byte	.LCFI39
 1063 02f9 0100     		.2byte	0x1
 1064 02fb 5D       		.byte	0x5d
 1065 02fc 02000000 		.4byte	.LCFI39
 1066 0300 04000000 		.4byte	.LCFI40
 1067 0304 0200     		.2byte	0x2
 1068 0306 7D       		.byte	0x7d
 1069 0307 04       		.sleb128 4
 1070 0308 04000000 		.4byte	.LCFI40
 1071 030c 18000000 		.4byte	.LFE15
 1072 0310 0200     		.2byte	0x2
 1073 0312 77       		.byte	0x77
 1074 0313 04       		.sleb128 4
 1075 0314 00000000 		.4byte	0x0
 1076 0318 00000000 		.4byte	0x0
 1077              	.LLST16:
 1078 031c 00000000 		.4byte	.LFB16
 1079 0320 02000000 		.4byte	.LCFI41
 1080 0324 0100     		.2byte	0x1
 1081 0326 5D       		.byte	0x5d
 1082 0327 02000000 		.4byte	.LCFI41
 1083 032b 04000000 		.4byte	.LCFI42
 1084 032f 0200     		.2byte	0x2
 1085 0331 7D       		.byte	0x7d
 1086 0332 04       		.sleb128 4
 1087 0333 04000000 		.4byte	.LCFI42
 1088 0337 18000000 		.4byte	.LFE16
 1089 033b 0200     		.2byte	0x2
 1090 033d 77       		.byte	0x77
 1091 033e 04       		.sleb128 4
 1092 033f 00000000 		.4byte	0x0
 1093 0343 00000000 		.4byte	0x0
 1094              	.LLST17:
 1095 0347 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 36


 1096 034b 02000000 		.4byte	.LCFI43
 1097 034f 0100     		.2byte	0x1
 1098 0351 5D       		.byte	0x5d
 1099 0352 02000000 		.4byte	.LCFI43
 1100 0356 04000000 		.4byte	.LCFI44
 1101 035a 0200     		.2byte	0x2
 1102 035c 7D       		.byte	0x7d
 1103 035d 04       		.sleb128 4
 1104 035e 04000000 		.4byte	.LCFI44
 1105 0362 18000000 		.4byte	.LFE17
 1106 0366 0200     		.2byte	0x2
 1107 0368 77       		.byte	0x77
 1108 0369 04       		.sleb128 4
 1109 036a 00000000 		.4byte	0x0
 1110 036e 00000000 		.4byte	0x0
 1111              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 1112              		.section	.debug_info
 1113 0000 11030000 		.4byte	0x311
 1114 0004 0200     		.2byte	0x2
 1115 0006 00000000 		.4byte	.Ldebug_abbrev0
 1116 000a 04       		.byte	0x4
 1117 000b 01       		.uleb128 0x1
 1118 000c 84020000 		.4byte	.LASF41
 1119 0010 01       		.byte	0x1
 1120 0011 60020000 		.4byte	.LASF42
 1121 0015 A4010000 		.4byte	.LASF43
 1122 0019 00000000 		.4byte	0x0
 1123 001d 00000000 		.4byte	0x0
 1124 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1125 0025 00000000 		.4byte	.Ldebug_line0
 1126 0029 02       		.uleb128 0x2
 1127 002a 01       		.byte	0x1
 1128 002b 06       		.byte	0x6
 1129 002c E5020000 		.4byte	.LASF0
 1130 0030 02       		.uleb128 0x2
 1131 0031 01       		.byte	0x1
 1132 0032 08       		.byte	0x8
 1133 0033 0D010000 		.4byte	.LASF1
 1134 0037 02       		.uleb128 0x2
 1135 0038 02       		.byte	0x2
 1136 0039 05       		.byte	0x5
 1137 003a AC020000 		.4byte	.LASF2
 1138 003e 02       		.uleb128 0x2
 1139 003f 02       		.byte	0x2
 1140 0040 07       		.byte	0x7
 1141 0041 7C000000 		.4byte	.LASF3
 1142 0045 02       		.uleb128 0x2
 1143 0046 04       		.byte	0x4
 1144 0047 05       		.byte	0x5
 1145 0048 D7020000 		.4byte	.LASF4
 1146 004c 02       		.uleb128 0x2
 1147 004d 04       		.byte	0x4
 1148 004e 07       		.byte	0x7
 1149 004f 33010000 		.4byte	.LASF5
 1150 0053 02       		.uleb128 0x2
 1151 0054 08       		.byte	0x8
 1152 0055 05       		.byte	0x5
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 37


 1153 0056 00000000 		.4byte	.LASF6
 1154 005a 02       		.uleb128 0x2
 1155 005b 08       		.byte	0x8
 1156 005c 07       		.byte	0x7
 1157 005d F5010000 		.4byte	.LASF7
 1158 0061 03       		.uleb128 0x3
 1159 0062 04       		.byte	0x4
 1160 0063 05       		.byte	0x5
 1161 0064 696E7400 		.ascii	"int\000"
 1162 0068 02       		.uleb128 0x2
 1163 0069 04       		.byte	0x4
 1164 006a 07       		.byte	0x7
 1165 006b E8010000 		.4byte	.LASF8
 1166 006f 04       		.uleb128 0x4
 1167 0070 45010000 		.4byte	.LASF9
 1168 0074 02       		.byte	0x2
 1169 0075 4C       		.byte	0x4c
 1170 0076 30000000 		.4byte	0x30
 1171 007a 04       		.uleb128 0x4
 1172 007b 83010000 		.4byte	.LASF10
 1173 007f 02       		.byte	0x2
 1174 0080 4D       		.byte	0x4d
 1175 0081 3E000000 		.4byte	0x3e
 1176 0085 02       		.uleb128 0x2
 1177 0086 04       		.byte	0x4
 1178 0087 04       		.byte	0x4
 1179 0088 FF000000 		.4byte	.LASF11
 1180 008c 02       		.uleb128 0x2
 1181 008d 08       		.byte	0x8
 1182 008e 04       		.byte	0x4
 1183 008f 53010000 		.4byte	.LASF12
 1184 0093 02       		.uleb128 0x2
 1185 0094 01       		.byte	0x1
 1186 0095 08       		.byte	0x8
 1187 0096 E0020000 		.4byte	.LASF13
 1188 009a 05       		.uleb128 0x5
 1189 009b 04       		.byte	0x4
 1190 009c 07       		.byte	0x7
 1191 009d 06       		.uleb128 0x6
 1192 009e 01       		.byte	0x1
 1193 009f 0E000000 		.4byte	.LASF16
 1194 00a3 01       		.byte	0x1
 1195 00a4 32       		.byte	0x32
 1196 00a5 01       		.byte	0x1
 1197 00a6 00000000 		.4byte	.LFB0
 1198 00aa 2A000000 		.4byte	.LFE0
 1199 00ae 00000000 		.4byte	.LLST0
 1200 00b2 07       		.uleb128 0x7
 1201 00b3 01       		.byte	0x1
 1202 00b4 9E020000 		.4byte	.LASF19
 1203 00b8 01       		.byte	0x1
 1204 00b9 4F       		.byte	0x4f
 1205 00ba 01       		.byte	0x1
 1206 00bb 00000000 		.4byte	.LFB1
 1207 00bf C2000000 		.4byte	.LFE1
 1208 00c3 2B000000 		.4byte	.LLST1
 1209 00c7 E8000000 		.4byte	0xe8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 38


 1210 00cb 08       		.uleb128 0x8
 1211 00cc 46020000 		.4byte	.LASF14
 1212 00d0 01       		.byte	0x1
 1213 00d1 52       		.byte	0x52
 1214 00d2 6F000000 		.4byte	0x6f
 1215 00d6 02       		.byte	0x2
 1216 00d7 91       		.byte	0x91
 1217 00d8 76       		.sleb128 -10
 1218 00d9 08       		.uleb128 0x8
 1219 00da 1B010000 		.4byte	.LASF15
 1220 00de 01       		.byte	0x1
 1221 00df 58       		.byte	0x58
 1222 00e0 6F000000 		.4byte	0x6f
 1223 00e4 02       		.byte	0x2
 1224 00e5 91       		.byte	0x91
 1225 00e6 77       		.sleb128 -9
 1226 00e7 00       		.byte	0x0
 1227 00e8 06       		.uleb128 0x6
 1228 00e9 01       		.byte	0x1
 1229 00ea C7020000 		.4byte	.LASF17
 1230 00ee 01       		.byte	0x1
 1231 00ef C8       		.byte	0xc8
 1232 00f0 01       		.byte	0x1
 1233 00f1 00000000 		.4byte	.LFB2
 1234 00f5 2A000000 		.4byte	.LFE2
 1235 00f9 62000000 		.4byte	.LLST2
 1236 00fd 06       		.uleb128 0x6
 1237 00fe 01       		.byte	0x1
 1238 00ff 52000000 		.4byte	.LASF18
 1239 0103 01       		.byte	0x1
 1240 0104 EA       		.byte	0xea
 1241 0105 01       		.byte	0x1
 1242 0106 00000000 		.4byte	.LFB3
 1243 010a 24000000 		.4byte	.LFE3
 1244 010e 8D000000 		.4byte	.LLST3
 1245 0112 09       		.uleb128 0x9
 1246 0113 01       		.byte	0x1
 1247 0114 0C020000 		.4byte	.LASF20
 1248 0118 01       		.byte	0x1
 1249 0119 9501     		.2byte	0x195
 1250 011b 01       		.byte	0x1
 1251 011c 00000000 		.4byte	.LFB4
 1252 0120 20000000 		.4byte	.LFE4
 1253 0124 B8000000 		.4byte	.LLST4
 1254 0128 3C010000 		.4byte	0x13c
 1255 012c 0A       		.uleb128 0xa
 1256 012d 05010000 		.4byte	.LASF23
 1257 0131 01       		.byte	0x1
 1258 0132 9501     		.2byte	0x195
 1259 0134 7A000000 		.4byte	0x7a
 1260 0138 02       		.byte	0x2
 1261 0139 91       		.byte	0x91
 1262 013a 76       		.sleb128 -10
 1263 013b 00       		.byte	0x0
 1264 013c 0B       		.uleb128 0xb
 1265 013d 01       		.byte	0x1
 1266 013e 6E010000 		.4byte	.LASF29
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 39


 1267 0142 01       		.byte	0x1
 1268 0143 AB01     		.2byte	0x1ab
 1269 0145 01       		.byte	0x1
 1270 0146 7A000000 		.4byte	0x7a
 1271 014a 00000000 		.4byte	.LFB5
 1272 014e 22000000 		.4byte	.LFE5
 1273 0152 EF000000 		.4byte	.LLST5
 1274 0156 0C       		.uleb128 0xc
 1275 0157 01       		.byte	0x1
 1276 0158 EC000000 		.4byte	.LASF21
 1277 015c 01       		.byte	0x1
 1278 015d C701     		.2byte	0x1c7
 1279 015f 01       		.byte	0x1
 1280 0160 00000000 		.4byte	.LFB6
 1281 0164 1A000000 		.4byte	.LFE6
 1282 0168 1A010000 		.4byte	.LLST6
 1283 016c 09       		.uleb128 0x9
 1284 016d 01       		.byte	0x1
 1285 016e 4B020000 		.4byte	.LASF22
 1286 0172 01       		.byte	0x1
 1287 0173 E401     		.2byte	0x1e4
 1288 0175 01       		.byte	0x1
 1289 0176 00000000 		.4byte	.LFB7
 1290 017a 20000000 		.4byte	.LFE7
 1291 017e 45010000 		.4byte	.LLST7
 1292 0182 96010000 		.4byte	0x196
 1293 0186 0A       		.uleb128 0xa
 1294 0187 60000000 		.4byte	.LASF24
 1295 018b 01       		.byte	0x1
 1296 018c E401     		.2byte	0x1e4
 1297 018e 7A000000 		.4byte	0x7a
 1298 0192 02       		.byte	0x2
 1299 0193 91       		.byte	0x91
 1300 0194 76       		.sleb128 -10
 1301 0195 00       		.byte	0x0
 1302 0196 09       		.uleb128 0x9
 1303 0197 01       		.byte	0x1
 1304 0198 8F000000 		.4byte	.LASF25
 1305 019c 01       		.byte	0x1
 1306 019d 0602     		.2byte	0x206
 1307 019f 01       		.byte	0x1
 1308 01a0 00000000 		.4byte	.LFB8
 1309 01a4 20000000 		.4byte	.LFE8
 1310 01a8 7C010000 		.4byte	.LLST8
 1311 01ac C0010000 		.4byte	0x1c0
 1312 01b0 0A       		.uleb128 0xa
 1313 01b1 F1020000 		.4byte	.LASF26
 1314 01b5 01       		.byte	0x1
 1315 01b6 0602     		.2byte	0x206
 1316 01b8 7A000000 		.4byte	0x7a
 1317 01bc 02       		.byte	0x2
 1318 01bd 91       		.byte	0x91
 1319 01be 76       		.sleb128 -10
 1320 01bf 00       		.byte	0x0
 1321 01c0 09       		.uleb128 0x9
 1322 01c1 01       		.byte	0x1
 1323 01c2 3B000000 		.4byte	.LASF27
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 40


 1324 01c6 01       		.byte	0x1
 1325 01c7 6602     		.2byte	0x266
 1326 01c9 01       		.byte	0x1
 1327 01ca 00000000 		.4byte	.LFB9
 1328 01ce 20000000 		.4byte	.LFE9
 1329 01d2 B3010000 		.4byte	.LLST9
 1330 01d6 EA010000 		.4byte	0x1ea
 1331 01da 0A       		.uleb128 0xa
 1332 01db F9020000 		.4byte	.LASF28
 1333 01df 01       		.byte	0x1
 1334 01e0 6602     		.2byte	0x266
 1335 01e2 6F000000 		.4byte	0x6f
 1336 01e6 02       		.byte	0x2
 1337 01e7 91       		.byte	0x91
 1338 01e8 77       		.sleb128 -9
 1339 01e9 00       		.byte	0x0
 1340 01ea 0B       		.uleb128 0xb
 1341 01eb 01       		.byte	0x1
 1342 01ec D6000000 		.4byte	.LASF30
 1343 01f0 01       		.byte	0x1
 1344 01f1 8A02     		.2byte	0x28a
 1345 01f3 01       		.byte	0x1
 1346 01f4 6F000000 		.4byte	0x6f
 1347 01f8 00000000 		.4byte	.LFB10
 1348 01fc 18000000 		.4byte	.LFE10
 1349 0200 EA010000 		.4byte	.LLST10
 1350 0204 09       		.uleb128 0x9
 1351 0205 01       		.byte	0x1
 1352 0206 8A010000 		.4byte	.LASF31
 1353 020a 01       		.byte	0x1
 1354 020b AE02     		.2byte	0x2ae
 1355 020d 01       		.byte	0x1
 1356 020e 00000000 		.4byte	.LFB11
 1357 0212 20000000 		.4byte	.LFE11
 1358 0216 15020000 		.4byte	.LLST11
 1359 021a 2E020000 		.4byte	0x22e
 1360 021e 0A       		.uleb128 0xa
 1361 021f 90020000 		.4byte	.LASF32
 1362 0223 01       		.byte	0x1
 1363 0224 AE02     		.2byte	0x2ae
 1364 0226 6F000000 		.4byte	0x6f
 1365 022a 02       		.byte	0x2
 1366 022b 91       		.byte	0x91
 1367 022c 77       		.sleb128 -9
 1368 022d 00       		.byte	0x0
 1369 022e 0D       		.uleb128 0xd
 1370 022f 01       		.byte	0x1
 1371 0230 BA000000 		.4byte	.LASF34
 1372 0234 01       		.byte	0x1
 1373 0235 C902     		.2byte	0x2c9
 1374 0237 01       		.byte	0x1
 1375 0238 6F000000 		.4byte	0x6f
 1376 023c 00000000 		.4byte	.LFB12
 1377 0240 20000000 		.4byte	.LFE12
 1378 0244 4C020000 		.4byte	.LLST12
 1379 0248 5C020000 		.4byte	0x25c
 1380 024c 0E       		.uleb128 0xe
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 41


 1381 024d 22020000 		.4byte	.LASF33
 1382 0251 01       		.byte	0x1
 1383 0252 CB02     		.2byte	0x2cb
 1384 0254 6F000000 		.4byte	0x6f
 1385 0258 02       		.byte	0x2
 1386 0259 91       		.byte	0x91
 1387 025a 77       		.sleb128 -9
 1388 025b 00       		.byte	0x0
 1389 025c 0D       		.uleb128 0xd
 1390 025d 01       		.byte	0x1
 1391 025e 29020000 		.4byte	.LASF35
 1392 0262 01       		.byte	0x1
 1393 0263 E602     		.2byte	0x2e6
 1394 0265 01       		.byte	0x1
 1395 0266 6F000000 		.4byte	0x6f
 1396 026a 00000000 		.4byte	.LFB13
 1397 026e 20000000 		.4byte	.LFE13
 1398 0272 83020000 		.4byte	.LLST13
 1399 0276 8A020000 		.4byte	0x28a
 1400 027a 0E       		.uleb128 0xe
 1401 027b 22020000 		.4byte	.LASF33
 1402 027f 01       		.byte	0x1
 1403 0280 E802     		.2byte	0x2e8
 1404 0282 6F000000 		.4byte	0x6f
 1405 0286 02       		.byte	0x2
 1406 0287 91       		.byte	0x91
 1407 0288 77       		.sleb128 -9
 1408 0289 00       		.byte	0x0
 1409 028a 09       		.uleb128 0x9
 1410 028b 01       		.byte	0x1
 1411 028c 1D000000 		.4byte	.LASF36
 1412 0290 01       		.byte	0x1
 1413 0291 0203     		.2byte	0x302
 1414 0293 01       		.byte	0x1
 1415 0294 00000000 		.4byte	.LFB14
 1416 0298 20000000 		.4byte	.LFE14
 1417 029c BA020000 		.4byte	.LLST14
 1418 02a0 B4020000 		.4byte	0x2b4
 1419 02a4 0A       		.uleb128 0xa
 1420 02a5 4B010000 		.4byte	.LASF37
 1421 02a9 01       		.byte	0x1
 1422 02aa 0203     		.2byte	0x302
 1423 02ac 6F000000 		.4byte	0x6f
 1424 02b0 02       		.byte	0x2
 1425 02b1 91       		.byte	0x91
 1426 02b2 77       		.sleb128 -9
 1427 02b3 00       		.byte	0x0
 1428 02b4 0B       		.uleb128 0xb
 1429 02b5 01       		.byte	0x1
 1430 02b6 A5000000 		.4byte	.LASF38
 1431 02ba 01       		.byte	0x1
 1432 02bb 1B03     		.2byte	0x31b
 1433 02bd 01       		.byte	0x1
 1434 02be 7A000000 		.4byte	0x7a
 1435 02c2 00000000 		.4byte	.LFB15
 1436 02c6 18000000 		.4byte	.LFE15
 1437 02ca F1020000 		.4byte	.LLST15
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 42


 1438 02ce 0B       		.uleb128 0xb
 1439 02cf 01       		.byte	0x1
 1440 02d0 67000000 		.4byte	.LASF39
 1441 02d4 01       		.byte	0x1
 1442 02d5 3503     		.2byte	0x335
 1443 02d7 01       		.byte	0x1
 1444 02d8 7A000000 		.4byte	0x7a
 1445 02dc 00000000 		.4byte	.LFB16
 1446 02e0 18000000 		.4byte	.LFE16
 1447 02e4 1C030000 		.4byte	.LLST16
 1448 02e8 0B       		.uleb128 0xb
 1449 02e9 01       		.byte	0x1
 1450 02ea 5A010000 		.4byte	.LASF40
 1451 02ee 01       		.byte	0x1
 1452 02ef 7903     		.2byte	0x379
 1453 02f1 01       		.byte	0x1
 1454 02f2 7A000000 		.4byte	0x7a
 1455 02f6 00000000 		.4byte	.LFB17
 1456 02fa 18000000 		.4byte	.LFE17
 1457 02fe 47030000 		.4byte	.LLST17
 1458 0302 0F       		.uleb128 0xf
 1459 0303 B6020000 		.4byte	.LASF44
 1460 0307 01       		.byte	0x1
 1461 0308 1B       		.byte	0x1b
 1462 0309 6F000000 		.4byte	0x6f
 1463 030d 01       		.byte	0x1
 1464 030e 05       		.byte	0x5
 1465 030f 03       		.byte	0x3
 1466 0310 00000000 		.4byte	PWM_BUCK_initVar
 1467 0314 00       		.byte	0x0
 1468              		.section	.debug_abbrev
 1469 0000 01       		.uleb128 0x1
 1470 0001 11       		.uleb128 0x11
 1471 0002 01       		.byte	0x1
 1472 0003 25       		.uleb128 0x25
 1473 0004 0E       		.uleb128 0xe
 1474 0005 13       		.uleb128 0x13
 1475 0006 0B       		.uleb128 0xb
 1476 0007 03       		.uleb128 0x3
 1477 0008 0E       		.uleb128 0xe
 1478 0009 1B       		.uleb128 0x1b
 1479 000a 0E       		.uleb128 0xe
 1480 000b 11       		.uleb128 0x11
 1481 000c 01       		.uleb128 0x1
 1482 000d 52       		.uleb128 0x52
 1483 000e 01       		.uleb128 0x1
 1484 000f 55       		.uleb128 0x55
 1485 0010 06       		.uleb128 0x6
 1486 0011 10       		.uleb128 0x10
 1487 0012 06       		.uleb128 0x6
 1488 0013 00       		.byte	0x0
 1489 0014 00       		.byte	0x0
 1490 0015 02       		.uleb128 0x2
 1491 0016 24       		.uleb128 0x24
 1492 0017 00       		.byte	0x0
 1493 0018 0B       		.uleb128 0xb
 1494 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 43


 1495 001a 3E       		.uleb128 0x3e
 1496 001b 0B       		.uleb128 0xb
 1497 001c 03       		.uleb128 0x3
 1498 001d 0E       		.uleb128 0xe
 1499 001e 00       		.byte	0x0
 1500 001f 00       		.byte	0x0
 1501 0020 03       		.uleb128 0x3
 1502 0021 24       		.uleb128 0x24
 1503 0022 00       		.byte	0x0
 1504 0023 0B       		.uleb128 0xb
 1505 0024 0B       		.uleb128 0xb
 1506 0025 3E       		.uleb128 0x3e
 1507 0026 0B       		.uleb128 0xb
 1508 0027 03       		.uleb128 0x3
 1509 0028 08       		.uleb128 0x8
 1510 0029 00       		.byte	0x0
 1511 002a 00       		.byte	0x0
 1512 002b 04       		.uleb128 0x4
 1513 002c 16       		.uleb128 0x16
 1514 002d 00       		.byte	0x0
 1515 002e 03       		.uleb128 0x3
 1516 002f 0E       		.uleb128 0xe
 1517 0030 3A       		.uleb128 0x3a
 1518 0031 0B       		.uleb128 0xb
 1519 0032 3B       		.uleb128 0x3b
 1520 0033 0B       		.uleb128 0xb
 1521 0034 49       		.uleb128 0x49
 1522 0035 13       		.uleb128 0x13
 1523 0036 00       		.byte	0x0
 1524 0037 00       		.byte	0x0
 1525 0038 05       		.uleb128 0x5
 1526 0039 24       		.uleb128 0x24
 1527 003a 00       		.byte	0x0
 1528 003b 0B       		.uleb128 0xb
 1529 003c 0B       		.uleb128 0xb
 1530 003d 3E       		.uleb128 0x3e
 1531 003e 0B       		.uleb128 0xb
 1532 003f 00       		.byte	0x0
 1533 0040 00       		.byte	0x0
 1534 0041 06       		.uleb128 0x6
 1535 0042 2E       		.uleb128 0x2e
 1536 0043 00       		.byte	0x0
 1537 0044 3F       		.uleb128 0x3f
 1538 0045 0C       		.uleb128 0xc
 1539 0046 03       		.uleb128 0x3
 1540 0047 0E       		.uleb128 0xe
 1541 0048 3A       		.uleb128 0x3a
 1542 0049 0B       		.uleb128 0xb
 1543 004a 3B       		.uleb128 0x3b
 1544 004b 0B       		.uleb128 0xb
 1545 004c 27       		.uleb128 0x27
 1546 004d 0C       		.uleb128 0xc
 1547 004e 11       		.uleb128 0x11
 1548 004f 01       		.uleb128 0x1
 1549 0050 12       		.uleb128 0x12
 1550 0051 01       		.uleb128 0x1
 1551 0052 40       		.uleb128 0x40
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 44


 1552 0053 06       		.uleb128 0x6
 1553 0054 00       		.byte	0x0
 1554 0055 00       		.byte	0x0
 1555 0056 07       		.uleb128 0x7
 1556 0057 2E       		.uleb128 0x2e
 1557 0058 01       		.byte	0x1
 1558 0059 3F       		.uleb128 0x3f
 1559 005a 0C       		.uleb128 0xc
 1560 005b 03       		.uleb128 0x3
 1561 005c 0E       		.uleb128 0xe
 1562 005d 3A       		.uleb128 0x3a
 1563 005e 0B       		.uleb128 0xb
 1564 005f 3B       		.uleb128 0x3b
 1565 0060 0B       		.uleb128 0xb
 1566 0061 27       		.uleb128 0x27
 1567 0062 0C       		.uleb128 0xc
 1568 0063 11       		.uleb128 0x11
 1569 0064 01       		.uleb128 0x1
 1570 0065 12       		.uleb128 0x12
 1571 0066 01       		.uleb128 0x1
 1572 0067 40       		.uleb128 0x40
 1573 0068 06       		.uleb128 0x6
 1574 0069 01       		.uleb128 0x1
 1575 006a 13       		.uleb128 0x13
 1576 006b 00       		.byte	0x0
 1577 006c 00       		.byte	0x0
 1578 006d 08       		.uleb128 0x8
 1579 006e 34       		.uleb128 0x34
 1580 006f 00       		.byte	0x0
 1581 0070 03       		.uleb128 0x3
 1582 0071 0E       		.uleb128 0xe
 1583 0072 3A       		.uleb128 0x3a
 1584 0073 0B       		.uleb128 0xb
 1585 0074 3B       		.uleb128 0x3b
 1586 0075 0B       		.uleb128 0xb
 1587 0076 49       		.uleb128 0x49
 1588 0077 13       		.uleb128 0x13
 1589 0078 02       		.uleb128 0x2
 1590 0079 0A       		.uleb128 0xa
 1591 007a 00       		.byte	0x0
 1592 007b 00       		.byte	0x0
 1593 007c 09       		.uleb128 0x9
 1594 007d 2E       		.uleb128 0x2e
 1595 007e 01       		.byte	0x1
 1596 007f 3F       		.uleb128 0x3f
 1597 0080 0C       		.uleb128 0xc
 1598 0081 03       		.uleb128 0x3
 1599 0082 0E       		.uleb128 0xe
 1600 0083 3A       		.uleb128 0x3a
 1601 0084 0B       		.uleb128 0xb
 1602 0085 3B       		.uleb128 0x3b
 1603 0086 05       		.uleb128 0x5
 1604 0087 27       		.uleb128 0x27
 1605 0088 0C       		.uleb128 0xc
 1606 0089 11       		.uleb128 0x11
 1607 008a 01       		.uleb128 0x1
 1608 008b 12       		.uleb128 0x12
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 45


 1609 008c 01       		.uleb128 0x1
 1610 008d 40       		.uleb128 0x40
 1611 008e 06       		.uleb128 0x6
 1612 008f 01       		.uleb128 0x1
 1613 0090 13       		.uleb128 0x13
 1614 0091 00       		.byte	0x0
 1615 0092 00       		.byte	0x0
 1616 0093 0A       		.uleb128 0xa
 1617 0094 05       		.uleb128 0x5
 1618 0095 00       		.byte	0x0
 1619 0096 03       		.uleb128 0x3
 1620 0097 0E       		.uleb128 0xe
 1621 0098 3A       		.uleb128 0x3a
 1622 0099 0B       		.uleb128 0xb
 1623 009a 3B       		.uleb128 0x3b
 1624 009b 05       		.uleb128 0x5
 1625 009c 49       		.uleb128 0x49
 1626 009d 13       		.uleb128 0x13
 1627 009e 02       		.uleb128 0x2
 1628 009f 0A       		.uleb128 0xa
 1629 00a0 00       		.byte	0x0
 1630 00a1 00       		.byte	0x0
 1631 00a2 0B       		.uleb128 0xb
 1632 00a3 2E       		.uleb128 0x2e
 1633 00a4 00       		.byte	0x0
 1634 00a5 3F       		.uleb128 0x3f
 1635 00a6 0C       		.uleb128 0xc
 1636 00a7 03       		.uleb128 0x3
 1637 00a8 0E       		.uleb128 0xe
 1638 00a9 3A       		.uleb128 0x3a
 1639 00aa 0B       		.uleb128 0xb
 1640 00ab 3B       		.uleb128 0x3b
 1641 00ac 05       		.uleb128 0x5
 1642 00ad 27       		.uleb128 0x27
 1643 00ae 0C       		.uleb128 0xc
 1644 00af 49       		.uleb128 0x49
 1645 00b0 13       		.uleb128 0x13
 1646 00b1 11       		.uleb128 0x11
 1647 00b2 01       		.uleb128 0x1
 1648 00b3 12       		.uleb128 0x12
 1649 00b4 01       		.uleb128 0x1
 1650 00b5 40       		.uleb128 0x40
 1651 00b6 06       		.uleb128 0x6
 1652 00b7 00       		.byte	0x0
 1653 00b8 00       		.byte	0x0
 1654 00b9 0C       		.uleb128 0xc
 1655 00ba 2E       		.uleb128 0x2e
 1656 00bb 00       		.byte	0x0
 1657 00bc 3F       		.uleb128 0x3f
 1658 00bd 0C       		.uleb128 0xc
 1659 00be 03       		.uleb128 0x3
 1660 00bf 0E       		.uleb128 0xe
 1661 00c0 3A       		.uleb128 0x3a
 1662 00c1 0B       		.uleb128 0xb
 1663 00c2 3B       		.uleb128 0x3b
 1664 00c3 05       		.uleb128 0x5
 1665 00c4 27       		.uleb128 0x27
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 46


 1666 00c5 0C       		.uleb128 0xc
 1667 00c6 11       		.uleb128 0x11
 1668 00c7 01       		.uleb128 0x1
 1669 00c8 12       		.uleb128 0x12
 1670 00c9 01       		.uleb128 0x1
 1671 00ca 40       		.uleb128 0x40
 1672 00cb 06       		.uleb128 0x6
 1673 00cc 00       		.byte	0x0
 1674 00cd 00       		.byte	0x0
 1675 00ce 0D       		.uleb128 0xd
 1676 00cf 2E       		.uleb128 0x2e
 1677 00d0 01       		.byte	0x1
 1678 00d1 3F       		.uleb128 0x3f
 1679 00d2 0C       		.uleb128 0xc
 1680 00d3 03       		.uleb128 0x3
 1681 00d4 0E       		.uleb128 0xe
 1682 00d5 3A       		.uleb128 0x3a
 1683 00d6 0B       		.uleb128 0xb
 1684 00d7 3B       		.uleb128 0x3b
 1685 00d8 05       		.uleb128 0x5
 1686 00d9 27       		.uleb128 0x27
 1687 00da 0C       		.uleb128 0xc
 1688 00db 49       		.uleb128 0x49
 1689 00dc 13       		.uleb128 0x13
 1690 00dd 11       		.uleb128 0x11
 1691 00de 01       		.uleb128 0x1
 1692 00df 12       		.uleb128 0x12
 1693 00e0 01       		.uleb128 0x1
 1694 00e1 40       		.uleb128 0x40
 1695 00e2 06       		.uleb128 0x6
 1696 00e3 01       		.uleb128 0x1
 1697 00e4 13       		.uleb128 0x13
 1698 00e5 00       		.byte	0x0
 1699 00e6 00       		.byte	0x0
 1700 00e7 0E       		.uleb128 0xe
 1701 00e8 34       		.uleb128 0x34
 1702 00e9 00       		.byte	0x0
 1703 00ea 03       		.uleb128 0x3
 1704 00eb 0E       		.uleb128 0xe
 1705 00ec 3A       		.uleb128 0x3a
 1706 00ed 0B       		.uleb128 0xb
 1707 00ee 3B       		.uleb128 0x3b
 1708 00ef 05       		.uleb128 0x5
 1709 00f0 49       		.uleb128 0x49
 1710 00f1 13       		.uleb128 0x13
 1711 00f2 02       		.uleb128 0x2
 1712 00f3 0A       		.uleb128 0xa
 1713 00f4 00       		.byte	0x0
 1714 00f5 00       		.byte	0x0
 1715 00f6 0F       		.uleb128 0xf
 1716 00f7 34       		.uleb128 0x34
 1717 00f8 00       		.byte	0x0
 1718 00f9 03       		.uleb128 0x3
 1719 00fa 0E       		.uleb128 0xe
 1720 00fb 3A       		.uleb128 0x3a
 1721 00fc 0B       		.uleb128 0xb
 1722 00fd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 47


 1723 00fe 0B       		.uleb128 0xb
 1724 00ff 49       		.uleb128 0x49
 1725 0100 13       		.uleb128 0x13
 1726 0101 3F       		.uleb128 0x3f
 1727 0102 0C       		.uleb128 0xc
 1728 0103 02       		.uleb128 0x2
 1729 0104 0A       		.uleb128 0xa
 1730 0105 00       		.byte	0x0
 1731 0106 00       		.byte	0x0
 1732 0107 00       		.byte	0x0
 1733              		.section	.debug_pubnames,"",%progbits
 1734 0000 EB010000 		.4byte	0x1eb
 1735 0004 0200     		.2byte	0x2
 1736 0006 00000000 		.4byte	.Ldebug_info0
 1737 000a 15030000 		.4byte	0x315
 1738 000e 9D000000 		.4byte	0x9d
 1739 0012 50574D5F 		.ascii	"PWM_BUCK_Start\000"
 1739      4255434B 
 1739      5F537461 
 1739      727400
 1740 0021 B2000000 		.4byte	0xb2
 1741 0025 50574D5F 		.ascii	"PWM_BUCK_Init\000"
 1741      4255434B 
 1741      5F496E69 
 1741      7400
 1742 0033 E8000000 		.4byte	0xe8
 1743 0037 50574D5F 		.ascii	"PWM_BUCK_Enable\000"
 1743      4255434B 
 1743      5F456E61 
 1743      626C6500 
 1744 0047 FD000000 		.4byte	0xfd
 1745 004b 50574D5F 		.ascii	"PWM_BUCK_Stop\000"
 1745      4255434B 
 1745      5F53746F 
 1745      7000
 1746 0059 12010000 		.4byte	0x112
 1747 005d 50574D5F 		.ascii	"PWM_BUCK_WriteCounter\000"
 1747      4255434B 
 1747      5F577269 
 1747      7465436F 
 1747      756E7465 
 1748 0073 3C010000 		.4byte	0x13c
 1749 0077 50574D5F 		.ascii	"PWM_BUCK_ReadCounter\000"
 1749      4255434B 
 1749      5F526561 
 1749      64436F75 
 1749      6E746572 
 1750 008c 56010000 		.4byte	0x156
 1751 0090 50574D5F 		.ascii	"PWM_BUCK_ClearFIFO\000"
 1751      4255434B 
 1751      5F436C65 
 1751      61724649 
 1751      464F00
 1752 00a3 6C010000 		.4byte	0x16c
 1753 00a7 50574D5F 		.ascii	"PWM_BUCK_WritePeriod\000"
 1753      4255434B 
 1753      5F577269 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 48


 1753      74655065 
 1753      72696F64 
 1754 00bc 96010000 		.4byte	0x196
 1755 00c0 50574D5F 		.ascii	"PWM_BUCK_WriteCompare\000"
 1755      4255434B 
 1755      5F577269 
 1755      7465436F 
 1755      6D706172 
 1756 00d6 C0010000 		.4byte	0x1c0
 1757 00da 50574D5F 		.ascii	"PWM_BUCK_WriteDeadTime\000"
 1757      4255434B 
 1757      5F577269 
 1757      74654465 
 1757      61645469 
 1758 00f1 EA010000 		.4byte	0x1ea
 1759 00f5 50574D5F 		.ascii	"PWM_BUCK_ReadDeadTime\000"
 1759      4255434B 
 1759      5F526561 
 1759      64446561 
 1759      6454696D 
 1760 010b 04020000 		.4byte	0x204
 1761 010f 50574D5F 		.ascii	"PWM_BUCK_SetInterruptMode\000"
 1761      4255434B 
 1761      5F536574 
 1761      496E7465 
 1761      72727570 
 1762 0129 2E020000 		.4byte	0x22e
 1763 012d 50574D5F 		.ascii	"PWM_BUCK_ReadStatusRegister\000"
 1763      4255434B 
 1763      5F526561 
 1763      64537461 
 1763      74757352 
 1764 0149 5C020000 		.4byte	0x25c
 1765 014d 50574D5F 		.ascii	"PWM_BUCK_ReadControlRegister\000"
 1765      4255434B 
 1765      5F526561 
 1765      64436F6E 
 1765      74726F6C 
 1766 016a 8A020000 		.4byte	0x28a
 1767 016e 50574D5F 		.ascii	"PWM_BUCK_WriteControlRegister\000"
 1767      4255434B 
 1767      5F577269 
 1767      7465436F 
 1767      6E74726F 
 1768 018c B4020000 		.4byte	0x2b4
 1769 0190 50574D5F 		.ascii	"PWM_BUCK_ReadCapture\000"
 1769      4255434B 
 1769      5F526561 
 1769      64436170 
 1769      74757265 
 1770 01a5 CE020000 		.4byte	0x2ce
 1771 01a9 50574D5F 		.ascii	"PWM_BUCK_ReadCompare\000"
 1771      4255434B 
 1771      5F526561 
 1771      64436F6D 
 1771      70617265 
 1772 01be E8020000 		.4byte	0x2e8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 49


 1773 01c2 50574D5F 		.ascii	"PWM_BUCK_ReadPeriod\000"
 1773      4255434B 
 1773      5F526561 
 1773      64506572 
 1773      696F6400 
 1774 01d6 02030000 		.4byte	0x302
 1775 01da 50574D5F 		.ascii	"PWM_BUCK_initVar\000"
 1775      4255434B 
 1775      5F696E69 
 1775      74566172 
 1775      00
 1776 01eb 00000000 		.4byte	0x0
 1777              		.section	.debug_aranges,"",%progbits
 1778 0000 A4000000 		.4byte	0xa4
 1779 0004 0200     		.2byte	0x2
 1780 0006 00000000 		.4byte	.Ldebug_info0
 1781 000a 04       		.byte	0x4
 1782 000b 00       		.byte	0x0
 1783 000c 0000     		.2byte	0x0
 1784 000e 0000     		.2byte	0x0
 1785 0010 00000000 		.4byte	.LFB0
 1786 0014 2A000000 		.4byte	.LFE0-.LFB0
 1787 0018 00000000 		.4byte	.LFB1
 1788 001c C2000000 		.4byte	.LFE1-.LFB1
 1789 0020 00000000 		.4byte	.LFB2
 1790 0024 2A000000 		.4byte	.LFE2-.LFB2
 1791 0028 00000000 		.4byte	.LFB3
 1792 002c 24000000 		.4byte	.LFE3-.LFB3
 1793 0030 00000000 		.4byte	.LFB4
 1794 0034 20000000 		.4byte	.LFE4-.LFB4
 1795 0038 00000000 		.4byte	.LFB5
 1796 003c 22000000 		.4byte	.LFE5-.LFB5
 1797 0040 00000000 		.4byte	.LFB6
 1798 0044 1A000000 		.4byte	.LFE6-.LFB6
 1799 0048 00000000 		.4byte	.LFB7
 1800 004c 20000000 		.4byte	.LFE7-.LFB7
 1801 0050 00000000 		.4byte	.LFB8
 1802 0054 20000000 		.4byte	.LFE8-.LFB8
 1803 0058 00000000 		.4byte	.LFB9
 1804 005c 20000000 		.4byte	.LFE9-.LFB9
 1805 0060 00000000 		.4byte	.LFB10
 1806 0064 18000000 		.4byte	.LFE10-.LFB10
 1807 0068 00000000 		.4byte	.LFB11
 1808 006c 20000000 		.4byte	.LFE11-.LFB11
 1809 0070 00000000 		.4byte	.LFB12
 1810 0074 20000000 		.4byte	.LFE12-.LFB12
 1811 0078 00000000 		.4byte	.LFB13
 1812 007c 20000000 		.4byte	.LFE13-.LFB13
 1813 0080 00000000 		.4byte	.LFB14
 1814 0084 20000000 		.4byte	.LFE14-.LFB14
 1815 0088 00000000 		.4byte	.LFB15
 1816 008c 18000000 		.4byte	.LFE15-.LFB15
 1817 0090 00000000 		.4byte	.LFB16
 1818 0094 18000000 		.4byte	.LFE16-.LFB16
 1819 0098 00000000 		.4byte	.LFB17
 1820 009c 18000000 		.4byte	.LFE17-.LFB17
 1821 00a0 00000000 		.4byte	0x0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 50


 1822 00a4 00000000 		.4byte	0x0
 1823              		.section	.debug_ranges,"",%progbits
 1824              	.Ldebug_ranges0:
 1825 0000 00000000 		.4byte	.Ltext0
 1826 0004 00000000 		.4byte	.Letext0
 1827 0008 00000000 		.4byte	.LFB0
 1828 000c 2A000000 		.4byte	.LFE0
 1829 0010 00000000 		.4byte	.LFB1
 1830 0014 C2000000 		.4byte	.LFE1
 1831 0018 00000000 		.4byte	.LFB2
 1832 001c 2A000000 		.4byte	.LFE2
 1833 0020 00000000 		.4byte	.LFB3
 1834 0024 24000000 		.4byte	.LFE3
 1835 0028 00000000 		.4byte	.LFB4
 1836 002c 20000000 		.4byte	.LFE4
 1837 0030 00000000 		.4byte	.LFB5
 1838 0034 22000000 		.4byte	.LFE5
 1839 0038 00000000 		.4byte	.LFB6
 1840 003c 1A000000 		.4byte	.LFE6
 1841 0040 00000000 		.4byte	.LFB7
 1842 0044 20000000 		.4byte	.LFE7
 1843 0048 00000000 		.4byte	.LFB8
 1844 004c 20000000 		.4byte	.LFE8
 1845 0050 00000000 		.4byte	.LFB9
 1846 0054 20000000 		.4byte	.LFE9
 1847 0058 00000000 		.4byte	.LFB10
 1848 005c 18000000 		.4byte	.LFE10
 1849 0060 00000000 		.4byte	.LFB11
 1850 0064 20000000 		.4byte	.LFE11
 1851 0068 00000000 		.4byte	.LFB12
 1852 006c 20000000 		.4byte	.LFE12
 1853 0070 00000000 		.4byte	.LFB13
 1854 0074 20000000 		.4byte	.LFE13
 1855 0078 00000000 		.4byte	.LFB14
 1856 007c 20000000 		.4byte	.LFE14
 1857 0080 00000000 		.4byte	.LFB15
 1858 0084 18000000 		.4byte	.LFE15
 1859 0088 00000000 		.4byte	.LFB16
 1860 008c 18000000 		.4byte	.LFE16
 1861 0090 00000000 		.4byte	.LFB17
 1862 0094 18000000 		.4byte	.LFE17
 1863 0098 00000000 		.4byte	0x0
 1864 009c 00000000 		.4byte	0x0
 1865              		.section	.debug_str,"MS",%progbits,1
 1866              	.LASF6:
 1867 0000 6C6F6E67 		.ascii	"long long int\000"
 1867      206C6F6E 
 1867      6720696E 
 1867      7400
 1868              	.LASF16:
 1869 000e 50574D5F 		.ascii	"PWM_BUCK_Start\000"
 1869      4255434B 
 1869      5F537461 
 1869      727400
 1870              	.LASF36:
 1871 001d 50574D5F 		.ascii	"PWM_BUCK_WriteControlRegister\000"
 1871      4255434B 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 51


 1871      5F577269 
 1871      7465436F 
 1871      6E74726F 
 1872              	.LASF27:
 1873 003b 50574D5F 		.ascii	"PWM_BUCK_WriteDeadTime\000"
 1873      4255434B 
 1873      5F577269 
 1873      74654465 
 1873      61645469 
 1874              	.LASF18:
 1875 0052 50574D5F 		.ascii	"PWM_BUCK_Stop\000"
 1875      4255434B 
 1875      5F53746F 
 1875      7000
 1876              	.LASF24:
 1877 0060 70657269 		.ascii	"period\000"
 1877      6F6400
 1878              	.LASF39:
 1879 0067 50574D5F 		.ascii	"PWM_BUCK_ReadCompare\000"
 1879      4255434B 
 1879      5F526561 
 1879      64436F6D 
 1879      70617265 
 1880              	.LASF3:
 1881 007c 73686F72 		.ascii	"short unsigned int\000"
 1881      7420756E 
 1881      7369676E 
 1881      65642069 
 1881      6E7400
 1882              	.LASF25:
 1883 008f 50574D5F 		.ascii	"PWM_BUCK_WriteCompare\000"
 1883      4255434B 
 1883      5F577269 
 1883      7465436F 
 1883      6D706172 
 1884              	.LASF38:
 1885 00a5 50574D5F 		.ascii	"PWM_BUCK_ReadCapture\000"
 1885      4255434B 
 1885      5F526561 
 1885      64436170 
 1885      74757265 
 1886              	.LASF34:
 1887 00ba 50574D5F 		.ascii	"PWM_BUCK_ReadStatusRegister\000"
 1887      4255434B 
 1887      5F526561 
 1887      64537461 
 1887      74757352 
 1888              	.LASF30:
 1889 00d6 50574D5F 		.ascii	"PWM_BUCK_ReadDeadTime\000"
 1889      4255434B 
 1889      5F526561 
 1889      64446561 
 1889      6454696D 
 1890              	.LASF21:
 1891 00ec 50574D5F 		.ascii	"PWM_BUCK_ClearFIFO\000"
 1891      4255434B 
 1891      5F436C65 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 52


 1891      61724649 
 1891      464F00
 1892              	.LASF11:
 1893 00ff 666C6F61 		.ascii	"float\000"
 1893      7400
 1894              	.LASF23:
 1895 0105 636F756E 		.ascii	"counter\000"
 1895      74657200 
 1896              	.LASF1:
 1897 010d 756E7369 		.ascii	"unsigned char\000"
 1897      676E6564 
 1897      20636861 
 1897      7200
 1898              	.LASF15:
 1899 011b 50574D5F 		.ascii	"PWM_BUCK_interruptState\000"
 1899      4255434B 
 1899      5F696E74 
 1899      65727275 
 1899      70745374 
 1900              	.LASF5:
 1901 0133 6C6F6E67 		.ascii	"long unsigned int\000"
 1901      20756E73 
 1901      69676E65 
 1901      6420696E 
 1901      7400
 1902              	.LASF9:
 1903 0145 75696E74 		.ascii	"uint8\000"
 1903      3800
 1904              	.LASF37:
 1905 014b 636F6E74 		.ascii	"control\000"
 1905      726F6C00 
 1906              	.LASF12:
 1907 0153 646F7562 		.ascii	"double\000"
 1907      6C6500
 1908              	.LASF40:
 1909 015a 50574D5F 		.ascii	"PWM_BUCK_ReadPeriod\000"
 1909      4255434B 
 1909      5F526561 
 1909      64506572 
 1909      696F6400 
 1910              	.LASF29:
 1911 016e 50574D5F 		.ascii	"PWM_BUCK_ReadCounter\000"
 1911      4255434B 
 1911      5F526561 
 1911      64436F75 
 1911      6E746572 
 1912              	.LASF10:
 1913 0183 75696E74 		.ascii	"uint16\000"
 1913      313600
 1914              	.LASF31:
 1915 018a 50574D5F 		.ascii	"PWM_BUCK_SetInterruptMode\000"
 1915      4255434B 
 1915      5F536574 
 1915      496E7465 
 1915      72727570 
 1916              	.LASF43:
 1917 01a4 433A5C55 		.ascii	"C:\\Users\\hoangp\\Documents\\GitHub\\EE542\\firmwa"
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 53


 1917      73657273 
 1917      5C686F61 
 1917      6E67705C 
 1917      446F6375 
 1918 01d1 72655C69 		.ascii	"re\\invert\\invert.cydsn\000"
 1918      6E766572 
 1918      745C696E 
 1918      76657274 
 1918      2E637964 
 1919              	.LASF8:
 1920 01e8 756E7369 		.ascii	"unsigned int\000"
 1920      676E6564 
 1920      20696E74 
 1920      00
 1921              	.LASF7:
 1922 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1922      206C6F6E 
 1922      6720756E 
 1922      7369676E 
 1922      65642069 
 1923              	.LASF20:
 1924 020c 50574D5F 		.ascii	"PWM_BUCK_WriteCounter\000"
 1924      4255434B 
 1924      5F577269 
 1924      7465436F 
 1924      756E7465 
 1925              	.LASF33:
 1926 0222 72657375 		.ascii	"result\000"
 1926      6C7400
 1927              	.LASF35:
 1928 0229 50574D5F 		.ascii	"PWM_BUCK_ReadControlRegister\000"
 1928      4255434B 
 1928      5F526561 
 1928      64436F6E 
 1928      74726F6C 
 1929              	.LASF14:
 1930 0246 6374726C 		.ascii	"ctrl\000"
 1930      00
 1931              	.LASF22:
 1932 024b 50574D5F 		.ascii	"PWM_BUCK_WritePeriod\000"
 1932      4255434B 
 1932      5F577269 
 1932      74655065 
 1932      72696F64 
 1933              	.LASF42:
 1934 0260 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_BUCK.c\000"
 1934      6E657261 
 1934      7465645F 
 1934      536F7572 
 1934      63655C50 
 1935              	.LASF41:
 1936 0284 474E5520 		.ascii	"GNU C 4.4.1\000"
 1936      4320342E 
 1936      342E3100 
 1937              	.LASF32:
 1938 0290 696E7465 		.ascii	"interruptMode\000"
 1938      72727570 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccq0lsHW.s 			page 54


 1938      744D6F64 
 1938      6500
 1939              	.LASF19:
 1940 029e 50574D5F 		.ascii	"PWM_BUCK_Init\000"
 1940      4255434B 
 1940      5F496E69 
 1940      7400
 1941              	.LASF2:
 1942 02ac 73686F72 		.ascii	"short int\000"
 1942      7420696E 
 1942      7400
 1943              	.LASF44:
 1944 02b6 50574D5F 		.ascii	"PWM_BUCK_initVar\000"
 1944      4255434B 
 1944      5F696E69 
 1944      74566172 
 1944      00
 1945              	.LASF17:
 1946 02c7 50574D5F 		.ascii	"PWM_BUCK_Enable\000"
 1946      4255434B 
 1946      5F456E61 
 1946      626C6500 
 1947              	.LASF4:
 1948 02d7 6C6F6E67 		.ascii	"long int\000"
 1948      20696E74 
 1948      00
 1949              	.LASF13:
 1950 02e0 63686172 		.ascii	"char\000"
 1950      00
 1951              	.LASF0:
 1952 02e5 7369676E 		.ascii	"signed char\000"
 1952      65642063 
 1952      68617200 
 1953              	.LASF26:
 1954 02f1 636F6D70 		.ascii	"compare\000"
 1954      61726500 
 1955              	.LASF28:
 1956 02f9 64656164 		.ascii	"deadtime\000"
 1956      74696D65 
 1956      00
 1957              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
