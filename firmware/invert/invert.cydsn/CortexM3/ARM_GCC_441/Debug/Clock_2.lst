ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"Clock_2.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 5A010000 		.text
  20      02005F00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.Clock_2_Start,"ax",%progbits
  24              		.align	2
  25              		.global	Clock_2_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	Clock_2_Start, %function
  29              	Clock_2_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\Clock_2.c"
   1:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Clock_2.c **** * File Name: Clock_2.c
   3:.\Generated_Source\PSoC5/Clock_2.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/Clock_2.c **** *
   5:.\Generated_Source\PSoC5/Clock_2.c **** *  Description:
   6:.\Generated_Source\PSoC5/Clock_2.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/Clock_2.c **** *
   8:.\Generated_Source\PSoC5/Clock_2.c **** *  Note:
   9:.\Generated_Source\PSoC5/Clock_2.c **** *
  10:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Clock_2.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Clock_2.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/Clock_2.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/Clock_2.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Clock_2.c **** 
  17:.\Generated_Source\PSoC5/Clock_2.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/Clock_2.c **** #include "Clock_2.h"
  19:.\Generated_Source\PSoC5/Clock_2.c **** 
  20:.\Generated_Source\PSoC5/Clock_2.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 2


  23:.\Generated_Source\PSoC5/Clock_2.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/Clock_2.c **** 
  27:.\Generated_Source\PSoC5/Clock_2.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/Clock_2.c **** 
  29:.\Generated_Source\PSoC5/Clock_2.c **** 
  30:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_Start
  32:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/Clock_2.c **** *
  34:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
  35:.\Generated_Source\PSoC5/Clock_2.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/Clock_2.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/Clock_2.c **** *
  38:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  39:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  40:.\Generated_Source\PSoC5/Clock_2.c **** *
  41:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
  42:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  43:.\Generated_Source\PSoC5/Clock_2.c **** *
  44:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_Start(void) 
  46:.\Generated_Source\PSoC5/Clock_2.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/Clock_2.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/Clock_2.c ****     Clock_2_CLKEN |= Clock_2_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A233 		movw	r3, #:lower16:1073759138
  46 0008 C4F20003 		movt	r3, #:upper16:1073759138
  47 000c 44F2A232 		movw	r2, #:lower16:1073759138
  48 0010 C4F20002 		movt	r2, #:upper16:1073759138
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00102 		orr	r2, r2, #1
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/Clock_2.c **** 	Clock_2_CLKSTBY |= Clock_2_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B233 		movw	r3, #:lower16:1073759154
  56 0024 C4F20003 		movt	r3, #:upper16:1073759154
  57 0028 44F2B232 		movw	r2, #:lower16:1073759154
  58 002c C4F20002 		movt	r2, #:upper16:1073759154
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/Clock_2.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	Clock_2_Start, .-Clock_2_Start
  71 0042 00BF     		.section	.text.Clock_2_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	Clock_2_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	Clock_2_Stop, %function
  77              	Clock_2_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/Clock_2.c **** 
  52:.\Generated_Source\PSoC5/Clock_2.c **** 
  53:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_Stop
  55:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/Clock_2.c **** *
  57:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
  58:.\Generated_Source\PSoC5/Clock_2.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/Clock_2.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/Clock_2.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/Clock_2.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/Clock_2.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/Clock_2.c **** *
  64:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  65:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  66:.\Generated_Source\PSoC5/Clock_2.c **** *
  67:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
  68:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  69:.\Generated_Source\PSoC5/Clock_2.c **** *
  70:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_Stop(void) 
  72:.\Generated_Source\PSoC5/Clock_2.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/Clock_2.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/Clock_2.c ****     Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A233 		movw	r3, #:lower16:1073759138
  93 0008 C4F20003 		movt	r3, #:upper16:1073759138
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 4


  94 000c 44F2A232 		movw	r2, #:lower16:1073759138
  95 0010 C4F20002 		movt	r2, #:upper16:1073759138
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FE02 		and	r2, r2, #254
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/Clock_2.c **** 	Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B233 		movw	r3, #:lower16:1073759154
 102 0022 C4F20003 		movt	r3, #:upper16:1073759154
 103 0026 44F2B232 		movw	r2, #:lower16:1073759154
 104 002a C4F20002 		movt	r2, #:upper16:1073759154
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FE02 		and	r2, r2, #254
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/Clock_2.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	Clock_2_Stop, .-Clock_2_Stop
 116 003e 00BF     		.section	.text.Clock_2_StandbyPower,"ax",%progbits
 117              		.align	2
 118              		.global	Clock_2_StandbyPower
 119              		.thumb
 120              		.thumb_func
 121              		.type	Clock_2_StandbyPower, %function
 122              	Clock_2_StandbyPower:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/Clock_2.c **** 
  78:.\Generated_Source\PSoC5/Clock_2.c **** 
  79:.\Generated_Source\PSoC5/Clock_2.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/Clock_2.c **** 
  81:.\Generated_Source\PSoC5/Clock_2.c **** 
  82:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_StopBlock
  84:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/Clock_2.c **** *
  86:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
  87:.\Generated_Source\PSoC5/Clock_2.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/Clock_2.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/Clock_2.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/Clock_2.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/Clock_2.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/Clock_2.c **** *
  93:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  94:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  95:.\Generated_Source\PSoC5/Clock_2.c **** *
  96:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
  97:.\Generated_Source\PSoC5/Clock_2.c **** *  None
  98:.\Generated_Source\PSoC5/Clock_2.c **** *
  99:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_StopBlock(void) 
 101:.\Generated_Source\PSoC5/Clock_2.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 5


 102:.\Generated_Source\PSoC5/Clock_2.c ****     if ((Clock_2_CLKEN & Clock_2_CLKEN_MASK) != 0u)
 103:.\Generated_Source\PSoC5/Clock_2.c ****     {
 104:.\Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/Clock_2.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/Clock_2.c **** 
 107:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/Clock_2.c **** 
 109:.\Generated_Source\PSoC5/Clock_2.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/Clock_2.c **** #if defined(Clock_2__CFG3)
 111:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_AMASK = Clock_2_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/Clock_2.c **** #else
 114:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_DMASK = Clock_2_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* Clock_2__CFG3 */
 117:.\Generated_Source\PSoC5/Clock_2.c **** 
 118:.\Generated_Source\PSoC5/Clock_2.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 120:.\Generated_Source\PSoC5/Clock_2.c **** 
 121:.\Generated_Source\PSoC5/Clock_2.c ****         oldDivider = CY_GET_REG16(Clock_2_DIV_PTR);
 122:.\Generated_Source\PSoC5/Clock_2.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 123:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124:.\Generated_Source\PSoC5/Clock_2.c **** 
 125:.\Generated_Source\PSoC5/Clock_2.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/Clock_2.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/Clock_2.c **** 
 129:.\Generated_Source\PSoC5/Clock_2.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
 131:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
 132:.\Generated_Source\PSoC5/Clock_2.c **** 
 133:.\Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/Clock_2.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = 0x00u;
 136:.\Generated_Source\PSoC5/Clock_2.c ****         CY_SET_REG16(Clock_2_DIV_PTR, oldDivider);
 137:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/Clock_2.c ****     }
 139:.\Generated_Source\PSoC5/Clock_2.c **** }
 140:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/Clock_2.c **** 
 142:.\Generated_Source\PSoC5/Clock_2.c **** 
 143:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_StandbyPower
 145:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/Clock_2.c **** *
 147:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 148:.\Generated_Source\PSoC5/Clock_2.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/Clock_2.c **** *
 150:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 151:.\Generated_Source\PSoC5/Clock_2.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/Clock_2.c **** *
 153:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 154:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 155:.\Generated_Source\PSoC5/Clock_2.c **** *
 156:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/Clock_2.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 6


 124              		.loc 1 158 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/Clock_2.c ****     if(state == 0u)
 141              		.loc 1 159 0
 142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 000c 002B     		cmp	r3, #0
 144 000e 0DD1     		bne	.L6
 160:.\Generated_Source\PSoC5/Clock_2.c ****     {
 161:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
 145              		.loc 1 161 0
 146 0010 44F2B233 		movw	r3, #:lower16:1073759154
 147 0014 C4F20003 		movt	r3, #:upper16:1073759154
 148 0018 44F2B232 		movw	r2, #:lower16:1073759154
 149 001c C4F20002 		movt	r2, #:upper16:1073759154
 150 0020 1278     		ldrb	r2, [r2, #0]
 151 0022 D2B2     		uxtb	r2, r2
 152 0024 02F0FE02 		and	r2, r2, #254
 153 0028 1A70     		strb	r2, [r3, #0]
 154 002a 0DE0     		b	.L8
 155              	.L6:
 162:.\Generated_Source\PSoC5/Clock_2.c ****     }
 163:.\Generated_Source\PSoC5/Clock_2.c ****     else
 164:.\Generated_Source\PSoC5/Clock_2.c ****     {
 165:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY |= Clock_2_CLKSTBY_MASK;
 156              		.loc 1 165 0
 157 002c 44F2B233 		movw	r3, #:lower16:1073759154
 158 0030 C4F20003 		movt	r3, #:upper16:1073759154
 159 0034 44F2B232 		movw	r2, #:lower16:1073759154
 160 0038 C4F20002 		movt	r2, #:upper16:1073759154
 161 003c 1278     		ldrb	r2, [r2, #0]
 162 003e D2B2     		uxtb	r2, r2
 163 0040 42F00102 		orr	r2, r2, #1
 164 0044 D2B2     		uxtb	r2, r2
 165 0046 1A70     		strb	r2, [r3, #0]
 166              	.L8:
 166:.\Generated_Source\PSoC5/Clock_2.c ****     }
 167:.\Generated_Source\PSoC5/Clock_2.c **** }
 167              		.loc 1 167 0
 168 0048 07F10C07 		add	r7, r7, #12
 169 004c BD46     		mov	sp, r7
 170 004e 80BC     		pop	{r7}
 171 0050 7047     		bx	lr
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 7


 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	Clock_2_StandbyPower, .-Clock_2_StandbyPower
 175 0052 00BF     		.section	.text.Clock_2_SetDividerRegister,"ax",%progbits
 176              		.align	2
 177              		.global	Clock_2_SetDividerRegister
 178              		.thumb
 179              		.thumb_func
 180              		.type	Clock_2_SetDividerRegister, %function
 181              	Clock_2_SetDividerRegister:
 182              	.LFB3:
 168:.\Generated_Source\PSoC5/Clock_2.c **** 
 169:.\Generated_Source\PSoC5/Clock_2.c **** 
 170:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetDividerRegister
 172:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/Clock_2.c **** *
 174:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 175:.\Generated_Source\PSoC5/Clock_2.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/Clock_2.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/Clock_2.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/Clock_2.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/Clock_2.c **** *
 180:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 181:.\Generated_Source\PSoC5/Clock_2.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/Clock_2.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/Clock_2.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/Clock_2.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/Clock_2.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/Clock_2.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/Clock_2.c **** *   cycle.
 188:.\Generated_Source\PSoC5/Clock_2.c **** *
 189:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 190:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 191:.\Generated_Source\PSoC5/Clock_2.c **** *
 192:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/Clock_2.c ****                                 
 195:.\Generated_Source\PSoC5/Clock_2.c **** {
 183              		.loc 1 195 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI7:
 189              		.cfi_def_cfa_offset 8
 190 0002 84B0     		sub	sp, sp, #16
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 7, -8
 196              	.LCFI9:
 197              		.cfi_def_cfa_register 7
 198 0006 0246     		mov	r2, r0
 199 0008 0B46     		mov	r3, r1
 200 000a FA80     		strh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 8


 201 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/Clock_2.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/Clock_2.c **** 
 198:.\Generated_Source\PSoC5/Clock_2.c ****     uint8 currSrc = Clock_2_GetSourceRegister();
 202              		.loc 1 198 0
 203 000e FFF7FEFF 		bl	Clock_2_GetSourceRegister
 204 0012 0346     		mov	r3, r0
 205 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/Clock_2.c ****     uint16 oldDivider = Clock_2_GetDividerRegister();
 206              		.loc 1 199 0
 207 0016 FFF7FEFF 		bl	Clock_2_GetDividerRegister
 208 001a 0346     		mov	r3, r0
 209 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/Clock_2.c **** 
 201:.\Generated_Source\PSoC5/Clock_2.c ****     if (clkDivider != oldDivider)
 210              		.loc 1 201 0
 211 001e FA88     		ldrh	r2, [r7, #6]
 212 0020 FB89     		ldrh	r3, [r7, #14]
 213 0022 9A42     		cmp	r2, r3
 214 0024 00F0BC80 		beq	.L21
 202:.\Generated_Source\PSoC5/Clock_2.c ****     {
 203:.\Generated_Source\PSoC5/Clock_2.c ****         enabled = Clock_2_CLKEN & Clock_2_CLKEN_MASK;
 215              		.loc 1 203 0
 216 0028 44F2A233 		movw	r3, #:lower16:1073759138
 217 002c C4F20003 		movt	r3, #:upper16:1073759138
 218 0030 1B78     		ldrb	r3, [r3, #0]
 219 0032 DBB2     		uxtb	r3, r3
 220 0034 03F00103 		and	r3, r3, #1
 221 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/Clock_2.c **** 
 205:.\Generated_Source\PSoC5/Clock_2.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 222              		.loc 1 205 0
 223 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 224 003c 002B     		cmp	r3, #0
 225 003e 31D1     		bne	.L11
 226 0040 FB89     		ldrh	r3, [r7, #14]
 227 0042 002B     		cmp	r3, #0
 228 0044 02D0     		beq	.L12
 229 0046 FB88     		ldrh	r3, [r7, #6]
 230 0048 002B     		cmp	r3, #0
 231 004a 2BD1     		bne	.L11
 232              	.L12:
 206:.\Generated_Source\PSoC5/Clock_2.c ****         {
 207:.\Generated_Source\PSoC5/Clock_2.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/Clock_2.c ****             if (oldDivider == 0u)
 233              		.loc 1 208 0
 234 004c FB89     		ldrh	r3, [r7, #14]
 235 004e 002B     		cmp	r3, #0
 236 0050 13D1     		bne	.L13
 209:.\Generated_Source\PSoC5/Clock_2.c ****             {
 210:.\Generated_Source\PSoC5/Clock_2.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/Clock_2.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/Clock_2.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 237              		.loc 1 213 0
 238 0052 44F28003 		movw	r3, #:lower16:1073758336
 239 0056 C4F20003 		movt	r3, #:upper16:1073758336
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 9


 240 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 241 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/Clock_2.c ****                 Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 242              		.loc 1 214 0
 243 005e 44F28203 		movw	r3, #:lower16:1073758338
 244 0062 C4F20003 		movt	r3, #:upper16:1073758338
 245 0066 44F28202 		movw	r2, #:lower16:1073758338
 246 006a C4F20002 		movt	r2, #:upper16:1073758338
 247 006e 1278     		ldrb	r2, [r2, #0]
 248 0070 D2B2     		uxtb	r2, r2
 249 0072 02F0BF02 		and	r2, r2, #191
 250 0076 1A70     		strb	r2, [r3, #0]
 251              		.loc 1 205 0
 252 0078 92E0     		b	.L21
 253              	.L13:
 215:.\Generated_Source\PSoC5/Clock_2.c ****             }
 216:.\Generated_Source\PSoC5/Clock_2.c ****             else
 217:.\Generated_Source\PSoC5/Clock_2.c ****             {
 218:.\Generated_Source\PSoC5/Clock_2.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/Clock_2.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/Clock_2.c ****                 Clock_2_MOD_SRC |= CYCLK_SSS;
 254              		.loc 1 220 0
 255 007a 44F28203 		movw	r3, #:lower16:1073758338
 256 007e C4F20003 		movt	r3, #:upper16:1073758338
 257 0082 44F28202 		movw	r2, #:lower16:1073758338
 258 0086 C4F20002 		movt	r2, #:upper16:1073758338
 259 008a 1278     		ldrb	r2, [r2, #0]
 260 008c D2B2     		uxtb	r2, r2
 261 008e 42F04002 		orr	r2, r2, #64
 262 0092 D2B2     		uxtb	r2, r2
 263 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 264              		.loc 1 221 0
 265 0096 44F28003 		movw	r3, #:lower16:1073758336
 266 009a C4F20003 		movt	r3, #:upper16:1073758336
 267 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 268 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 269              		.loc 1 205 0
 270 00a2 7DE0     		b	.L21
 271              	.L11:
 222:.\Generated_Source\PSoC5/Clock_2.c ****             }
 223:.\Generated_Source\PSoC5/Clock_2.c ****         }
 224:.\Generated_Source\PSoC5/Clock_2.c ****         else
 225:.\Generated_Source\PSoC5/Clock_2.c ****         {
 226:.\Generated_Source\PSoC5/Clock_2.c **** 			
 227:.\Generated_Source\PSoC5/Clock_2.c ****             if (enabled != 0u)
 272              		.loc 1 227 0
 273 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 274 00a6 002B     		cmp	r3, #0
 275 00a8 3BD0     		beq	.L15
 228:.\Generated_Source\PSoC5/Clock_2.c ****             {
 229:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_LD = 0x00u;
 276              		.loc 1 229 0
 277 00aa 44F20103 		movw	r3, #:lower16:1073758209
 278 00ae C4F20003 		movt	r3, #:upper16:1073758209
 279 00b2 4FF00002 		mov	r2, #0
 280 00b6 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 10


 230:.\Generated_Source\PSoC5/Clock_2.c **** 
 231:.\Generated_Source\PSoC5/Clock_2.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/Clock_2.c **** #if defined(Clock_2__CFG3)
 233:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_AMASK = Clock_2_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/Clock_2.c **** #else
 236:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = Clock_2_CLKEN_MASK;
 281              		.loc 1 236 0
 282 00b8 44F21003 		movw	r3, #:lower16:1073758224
 283 00bc C4F20003 		movt	r3, #:upper16:1073758224
 284 00c0 4FF00102 		mov	r2, #1
 285 00c4 1A70     		strb	r2, [r3, #0]
 237:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_AMASK = 0x00u;
 286              		.loc 1 237 0
 287 00c6 44F21403 		movw	r3, #:lower16:1073758228
 288 00ca C4F20003 		movt	r3, #:upper16:1073758228
 289 00ce 4FF00002 		mov	r2, #0
 290 00d2 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* Clock_2__CFG3 */
 239:.\Generated_Source\PSoC5/Clock_2.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 291              		.loc 1 240 0
 292 00d4 44F20803 		movw	r3, #:lower16:1073758216
 293 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 294 00dc 44F20802 		movw	r2, #:lower16:1073758216
 295 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 296 00e4 1278     		ldrb	r2, [r2, #0]
 297 00e6 D2B2     		uxtb	r2, r2
 298 00e8 02F07F02 		and	r2, r2, #127
 299 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/Clock_2.c **** 
 242:.\Generated_Source\PSoC5/Clock_2.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/Clock_2.c ****                 if (((Clock_2_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 300              		.loc 1 243 0
 301 00ee 44F28203 		movw	r3, #:lower16:1073758338
 302 00f2 C4F20003 		movt	r3, #:upper16:1073758338
 303 00f6 1B78     		ldrb	r3, [r3, #0]
 304 00f8 DBB2     		uxtb	r3, r3
 305 00fa 03F00803 		and	r3, r3, #8
 306 00fe 002B     		cmp	r3, #0
 307 0100 02D0     		beq	.L16
 308 0102 FB88     		ldrh	r3, [r7, #6]
 309 0104 002B     		cmp	r3, #0
 310 0106 0CD1     		bne	.L15
 311              	.L16:
 244:.\Generated_Source\PSoC5/Clock_2.c ****                 {
 245:.\Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/Clock_2.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/Clock_2.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/Clock_2.c **** 
 249:.\Generated_Source\PSoC5/Clock_2.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/Clock_2.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/Clock_2.c **** 
 253:.\Generated_Source\PSoC5/Clock_2.c ****                     Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
 312              		.loc 1 253 0
 313 0108 44F2A233 		movw	r3, #:lower16:1073759138
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 11


 314 010c C4F20003 		movt	r3, #:upper16:1073759138
 315 0110 44F2A232 		movw	r2, #:lower16:1073759138
 316 0114 C4F20002 		movt	r2, #:upper16:1073759138
 317 0118 1278     		ldrb	r2, [r2, #0]
 318 011a D2B2     		uxtb	r2, r2
 319 011c 02F0FE02 		and	r2, r2, #254
 320 0120 1A70     		strb	r2, [r3, #0]
 321              	.L15:
 254:.\Generated_Source\PSoC5/Clock_2.c **** 
 255:.\Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/Clock_2.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/Clock_2.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/Clock_2.c ****                 }
 260:.\Generated_Source\PSoC5/Clock_2.c ****             }
 261:.\Generated_Source\PSoC5/Clock_2.c **** 
 262:.\Generated_Source\PSoC5/Clock_2.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/Clock_2.c ****             if ((Clock_2_CLKEN & Clock_2_CLKEN_MASK) != 0u)
 322              		.loc 1 263 0
 323 0122 44F2A233 		movw	r3, #:lower16:1073759138
 324 0126 C4F20003 		movt	r3, #:upper16:1073759138
 325 012a 1B78     		ldrb	r3, [r3, #0]
 326 012c DBB2     		uxtb	r3, r3
 327 012e 03F00103 		and	r3, r3, #1
 328 0132 DBB2     		uxtb	r3, r3
 329 0134 002B     		cmp	r3, #0
 330 0136 1ED0     		beq	.L17
 264:.\Generated_Source\PSoC5/Clock_2.c ****             {
 265:.\Generated_Source\PSoC5/Clock_2.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 331              		.loc 1 266 0
 332 0138 44F20203 		movw	r3, #:lower16:1073758210
 333 013c C4F20003 		movt	r3, #:upper16:1073758210
 334 0140 FA88     		ldrh	r2, [r7, #6]	@ movhi
 335 0142 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/Clock_2.c **** 
 268:.\Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 336              		.loc 1 268 0
 337 0144 44F20103 		movw	r3, #:lower16:1073758209
 338 0148 C4F20003 		movt	r3, #:upper16:1073758209
 339 014c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 340 014e 002A     		cmp	r2, #0
 341 0150 02D0     		beq	.L18
 342 0152 4FF00302 		mov	r2, #3
 343 0156 01E0     		b	.L19
 344              	.L18:
 345 0158 4FF00102 		mov	r2, #1
 346              	.L19:
 347 015c 1A70     		strb	r2, [r3, #0]
 348              	.L20:
 269:.\Generated_Source\PSoC5/Clock_2.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 349              		.loc 1 269 0
 350 015e 44F20103 		movw	r3, #:lower16:1073758209
 351 0162 C4F20003 		movt	r3, #:upper16:1073758209
 352 0166 1B78     		ldrb	r3, [r3, #0]
 353 0168 DBB2     		uxtb	r3, r3
 354 016a 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 12


 355 016e DBB2     		uxtb	r3, r3
 356 0170 002B     		cmp	r3, #0
 357 0172 F4D1     		bne	.L20
 358 0174 14E0     		b	.L21
 359              	.L17:
 270:.\Generated_Source\PSoC5/Clock_2.c ****             }
 271:.\Generated_Source\PSoC5/Clock_2.c ****             else
 272:.\Generated_Source\PSoC5/Clock_2.c ****             {
 273:.\Generated_Source\PSoC5/Clock_2.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 360              		.loc 1 274 0
 361 0176 44F28003 		movw	r3, #:lower16:1073758336
 362 017a C4F20003 		movt	r3, #:upper16:1073758336
 363 017e FA88     		ldrh	r2, [r7, #6]	@ movhi
 364 0180 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/Clock_2.c **** 				Clock_2_CLKEN |= enabled;
 365              		.loc 1 275 0
 366 0182 44F2A233 		movw	r3, #:lower16:1073759138
 367 0186 C4F20003 		movt	r3, #:upper16:1073759138
 368 018a 44F2A232 		movw	r2, #:lower16:1073759138
 369 018e C4F20002 		movt	r2, #:upper16:1073759138
 370 0192 1278     		ldrb	r2, [r2, #0]
 371 0194 D1B2     		uxtb	r1, r2
 372 0196 3A7B     		ldrb	r2, [r7, #12]
 373 0198 41EA0202 		orr	r2, r1, r2
 374 019c D2B2     		uxtb	r2, r2
 375 019e 1A70     		strb	r2, [r3, #0]
 376              	.L21:
 276:.\Generated_Source\PSoC5/Clock_2.c ****             }
 277:.\Generated_Source\PSoC5/Clock_2.c ****         }
 278:.\Generated_Source\PSoC5/Clock_2.c ****     }
 279:.\Generated_Source\PSoC5/Clock_2.c **** }
 377              		.loc 1 279 0
 378 01a0 07F11007 		add	r7, r7, #16
 379 01a4 BD46     		mov	sp, r7
 380 01a6 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	Clock_2_SetDividerRegister, .-Clock_2_SetDividerRegister
 384              		.section	.text.Clock_2_GetDividerRegister,"ax",%progbits
 385              		.align	2
 386              		.global	Clock_2_GetDividerRegister
 387              		.thumb
 388              		.thumb_func
 389              		.type	Clock_2_GetDividerRegister, %function
 390              	Clock_2_GetDividerRegister:
 391              	.LFB4:
 280:.\Generated_Source\PSoC5/Clock_2.c **** 
 281:.\Generated_Source\PSoC5/Clock_2.c **** 
 282:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetDividerRegister
 284:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/Clock_2.c **** *
 286:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 287:.\Generated_Source\PSoC5/Clock_2.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/Clock_2.c **** *
 289:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 13


 290:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 291:.\Generated_Source\PSoC5/Clock_2.c **** *
 292:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 293:.\Generated_Source\PSoC5/Clock_2.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/Clock_2.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/Clock_2.c **** *
 296:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/Clock_2.c **** uint16 Clock_2_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/Clock_2.c **** {
 392              		.loc 1 298 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              	.LCFI10:
 399              		.cfi_def_cfa_offset 4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_offset 7, -4
 402              	.LCFI11:
 403              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/Clock_2.c ****     return CY_GET_REG16(Clock_2_DIV_PTR);
 404              		.loc 1 299 0
 405 0004 44F28003 		movw	r3, #:lower16:1073758336
 406 0008 C4F20003 		movt	r3, #:upper16:1073758336
 407 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 408 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/Clock_2.c **** }
 409              		.loc 1 300 0
 410 0010 1846     		mov	r0, r3
 411 0012 BD46     		mov	sp, r7
 412 0014 80BC     		pop	{r7}
 413 0016 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE4:
 416              		.size	Clock_2_GetDividerRegister, .-Clock_2_GetDividerRegister
 417              		.section	.text.Clock_2_SetModeRegister,"ax",%progbits
 418              		.align	2
 419              		.global	Clock_2_SetModeRegister
 420              		.thumb
 421              		.thumb_func
 422              		.type	Clock_2_SetModeRegister, %function
 423              	Clock_2_SetModeRegister:
 424              	.LFB5:
 301:.\Generated_Source\PSoC5/Clock_2.c **** 
 302:.\Generated_Source\PSoC5/Clock_2.c **** 
 303:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetModeRegister
 305:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/Clock_2.c **** *
 307:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 308:.\Generated_Source\PSoC5/Clock_2.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/Clock_2.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/Clock_2.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/Clock_2.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/Clock_2.c **** *
 313:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 14


 314:.\Generated_Source\PSoC5/Clock_2.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/Clock_2.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/Clock_2.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/Clock_2.c **** *                 value.
 319:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/Clock_2.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/Clock_2.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/Clock_2.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/Clock_2.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/Clock_2.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/Clock_2.c **** *
 328:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 329:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 330:.\Generated_Source\PSoC5/Clock_2.c **** *
 331:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/Clock_2.c **** {
 425              		.loc 1 333 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI12:
 432              		.cfi_def_cfa_offset 4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI13:
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_offset 7, -4
 438              	.LCFI14:
 439              		.cfi_def_cfa_register 7
 440 0006 0346     		mov	r3, r0
 441 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC |= modeBitMask & (uint8)Clock_2_MODE_MASK;
 442              		.loc 1 334 0
 443 000a 44F28203 		movw	r3, #:lower16:1073758338
 444 000e C4F20003 		movt	r3, #:upper16:1073758338
 445 0012 44F28202 		movw	r2, #:lower16:1073758338
 446 0016 C4F20002 		movt	r2, #:upper16:1073758338
 447 001a 1278     		ldrb	r2, [r2, #0]
 448 001c D2B2     		uxtb	r2, r2
 449 001e 1146     		mov	r1, r2
 450 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 451 0022 D2B2     		uxtb	r2, r2
 452 0024 02F0F802 		and	r2, r2, #248
 453 0028 41EA0202 		orr	r2, r1, r2
 454 002c D2B2     		uxtb	r2, r2
 455 002e D2B2     		uxtb	r2, r2
 456 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/Clock_2.c **** }
 457              		.loc 1 335 0
 458 0032 07F10C07 		add	r7, r7, #12
 459 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 15


 460 0038 80BC     		pop	{r7}
 461 003a 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE5:
 464              		.size	Clock_2_SetModeRegister, .-Clock_2_SetModeRegister
 465              		.section	.text.Clock_2_ClearModeRegister,"ax",%progbits
 466              		.align	2
 467              		.global	Clock_2_ClearModeRegister
 468              		.thumb
 469              		.thumb_func
 470              		.type	Clock_2_ClearModeRegister, %function
 471              	Clock_2_ClearModeRegister:
 472              	.LFB6:
 336:.\Generated_Source\PSoC5/Clock_2.c **** 
 337:.\Generated_Source\PSoC5/Clock_2.c **** 
 338:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_ClearModeRegister
 340:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/Clock_2.c **** *
 342:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 343:.\Generated_Source\PSoC5/Clock_2.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/Clock_2.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/Clock_2.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/Clock_2.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/Clock_2.c **** *
 348:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 349:.\Generated_Source\PSoC5/Clock_2.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/Clock_2.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/Clock_2.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/Clock_2.c **** *                 value.
 354:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/Clock_2.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/Clock_2.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/Clock_2.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/Clock_2.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/Clock_2.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/Clock_2.c **** *
 363:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 364:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 365:.\Generated_Source\PSoC5/Clock_2.c **** *
 366:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/Clock_2.c **** {
 473              		.loc 1 368 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI15:
 480              		.cfi_def_cfa_offset 4
 481 0002 83B0     		sub	sp, sp, #12
 482              	.LCFI16:
 483              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 16


 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_offset 7, -4
 486              	.LCFI17:
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_2_MODE_MASK));
 490              		.loc 1 369 0
 491 000a 44F28203 		movw	r3, #:lower16:1073758338
 492 000e C4F20003 		movt	r3, #:upper16:1073758338
 493 0012 44F28202 		movw	r2, #:lower16:1073758338
 494 0016 C4F20002 		movt	r2, #:upper16:1073758338
 495 001a 1278     		ldrb	r2, [r2, #0]
 496 001c D1B2     		uxtb	r1, r2
 497 001e FA79     		ldrb	r2, [r7, #7]
 498 0020 6FEA0202 		mvn	r2, r2
 499 0024 D2B2     		uxtb	r2, r2
 500 0026 42F00702 		orr	r2, r2, #7
 501 002a D2B2     		uxtb	r2, r2
 502 002c 01EA0202 		and	r2, r1, r2
 503 0030 D2B2     		uxtb	r2, r2
 504 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/Clock_2.c **** }
 505              		.loc 1 370 0
 506 0034 07F10C07 		add	r7, r7, #12
 507 0038 BD46     		mov	sp, r7
 508 003a 80BC     		pop	{r7}
 509 003c 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE6:
 512              		.size	Clock_2_ClearModeRegister, .-Clock_2_ClearModeRegister
 513 003e 00BF     		.section	.text.Clock_2_GetModeRegister,"ax",%progbits
 514              		.align	2
 515              		.global	Clock_2_GetModeRegister
 516              		.thumb
 517              		.thumb_func
 518              		.type	Clock_2_GetModeRegister, %function
 519              	Clock_2_GetModeRegister:
 520              	.LFB7:
 371:.\Generated_Source\PSoC5/Clock_2.c **** 
 372:.\Generated_Source\PSoC5/Clock_2.c **** 
 373:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetModeRegister
 375:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/Clock_2.c **** *
 377:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 378:.\Generated_Source\PSoC5/Clock_2.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/Clock_2.c **** *
 380:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 381:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 382:.\Generated_Source\PSoC5/Clock_2.c **** *
 383:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 384:.\Generated_Source\PSoC5/Clock_2.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/Clock_2.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/Clock_2.c **** *
 387:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/Clock_2.c **** uint8 Clock_2_GetModeRegister(void) 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 17


 389:.\Generated_Source\PSoC5/Clock_2.c **** {
 521              		.loc 1 389 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI18:
 528              		.cfi_def_cfa_offset 4
 529 0002 00AF     		add	r7, sp, #0
 530              		.cfi_offset 7, -4
 531              	.LCFI19:
 532              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & (uint8)(Clock_2_MODE_MASK);
 533              		.loc 1 390 0
 534 0004 44F28203 		movw	r3, #:lower16:1073758338
 535 0008 C4F20003 		movt	r3, #:upper16:1073758338
 536 000c 1B78     		ldrb	r3, [r3, #0]
 537 000e DBB2     		uxtb	r3, r3
 538 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/Clock_2.c **** }
 539              		.loc 1 391 0
 540 0014 1846     		mov	r0, r3
 541 0016 BD46     		mov	sp, r7
 542 0018 80BC     		pop	{r7}
 543 001a 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE7:
 546              		.size	Clock_2_GetModeRegister, .-Clock_2_GetModeRegister
 547              		.section	.text.Clock_2_SetSourceRegister,"ax",%progbits
 548              		.align	2
 549              		.global	Clock_2_SetSourceRegister
 550              		.thumb
 551              		.thumb_func
 552              		.type	Clock_2_SetSourceRegister, %function
 553              	Clock_2_SetSourceRegister:
 554              	.LFB8:
 392:.\Generated_Source\PSoC5/Clock_2.c **** 
 393:.\Generated_Source\PSoC5/Clock_2.c **** 
 394:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetSourceRegister
 396:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/Clock_2.c **** *
 398:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 399:.\Generated_Source\PSoC5/Clock_2.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/Clock_2.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/Clock_2.c **** *
 402:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 403:.\Generated_Source\PSoC5/Clock_2.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/Clock_2.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_DSI_G
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 18


 412:.\Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/Clock_2.c **** *
 415:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 416:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 417:.\Generated_Source\PSoC5/Clock_2.c **** *
 418:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/Clock_2.c **** {
 555              		.loc 1 420 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              	.LCFI20:
 561              		.cfi_def_cfa_offset 8
 562 0002 84B0     		sub	sp, sp, #16
 563              	.LCFI21:
 564              		.cfi_def_cfa_offset 24
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_offset 14, -4
 567              		.cfi_offset 7, -8
 568              	.LCFI22:
 569              		.cfi_def_cfa_register 7
 570 0006 0346     		mov	r3, r0
 571 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/Clock_2.c ****     uint16 currDiv = Clock_2_GetDividerRegister();
 572              		.loc 1 421 0
 573 000a FFF7FEFF 		bl	Clock_2_GetDividerRegister
 574 000e 0346     		mov	r3, r0
 575 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/Clock_2.c ****     uint8 oldSrc = Clock_2_GetSourceRegister();
 576              		.loc 1 422 0
 577 0012 FFF7FEFF 		bl	Clock_2_GetSourceRegister
 578 0016 0346     		mov	r3, r0
 579 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/Clock_2.c **** 
 424:.\Generated_Source\PSoC5/Clock_2.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 580              		.loc 1 424 0
 581 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 582 001c 002B     		cmp	r3, #0
 583 001e 29D0     		beq	.L31
 584 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 585 0022 002B     		cmp	r3, #0
 586 0024 26D1     		bne	.L31
 587 0026 BB89     		ldrh	r3, [r7, #12]
 588 0028 002B     		cmp	r3, #0
 589 002a 23D1     		bne	.L31
 425:.\Generated_Source\PSoC5/Clock_2.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/Clock_2.c ****     {
 427:.\Generated_Source\PSoC5/Clock_2.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/Clock_2.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC |= CYCLK_SSS;
 590              		.loc 1 429 0
 591 002c 44F28203 		movw	r3, #:lower16:1073758338
 592 0030 C4F20003 		movt	r3, #:upper16:1073758338
 593 0034 44F28202 		movw	r2, #:lower16:1073758338
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 19


 594 0038 C4F20002 		movt	r2, #:upper16:1073758338
 595 003c 1278     		ldrb	r2, [r2, #0]
 596 003e D2B2     		uxtb	r2, r2
 597 0040 42F04002 		orr	r2, r2, #64
 598 0044 D2B2     		uxtb	r2, r2
 599 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 600              		.loc 1 430 0
 601 0048 44F28203 		movw	r3, #:lower16:1073758338
 602 004c C4F20003 		movt	r3, #:upper16:1073758338
 431:.\Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 603              		.loc 1 431 0
 604 0050 44F28202 		movw	r2, #:lower16:1073758338
 605 0054 C4F20002 		movt	r2, #:upper16:1073758338
 606 0058 1278     		ldrb	r2, [r2, #0]
 607 005a D2B2     		uxtb	r2, r2
 608              		.loc 1 430 0
 609 005c D2B2     		uxtb	r2, r2
 610 005e 02F0F802 		and	r2, r2, #248
 611 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 612 0064 1146     		mov	r1, r2
 613 0066 0246     		mov	r2, r0
 614 0068 41EA0202 		orr	r2, r1, r2
 615 006c D2B2     		uxtb	r2, r2
 616 006e D2B2     		uxtb	r2, r2
 617 0070 1A70     		strb	r2, [r3, #0]
 618              		.loc 1 424 0
 619 0072 40E0     		b	.L34
 620              	.L31:
 432:.\Generated_Source\PSoC5/Clock_2.c ****     }
 433:.\Generated_Source\PSoC5/Clock_2.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 621              		.loc 1 433 0
 622 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 623 0076 002B     		cmp	r3, #0
 624 0078 28D1     		bne	.L33
 625 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 626 007c 002B     		cmp	r3, #0
 627 007e 25D0     		beq	.L33
 628 0080 BB89     		ldrh	r3, [r7, #12]
 629 0082 002B     		cmp	r3, #0
 630 0084 22D1     		bne	.L33
 434:.\Generated_Source\PSoC5/Clock_2.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/Clock_2.c ****     {
 436:.\Generated_Source\PSoC5/Clock_2.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/Clock_2.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 631              		.loc 1 438 0
 632 0086 44F28203 		movw	r3, #:lower16:1073758338
 633 008a C4F20003 		movt	r3, #:upper16:1073758338
 439:.\Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 634              		.loc 1 439 0
 635 008e 44F28202 		movw	r2, #:lower16:1073758338
 636 0092 C4F20002 		movt	r2, #:upper16:1073758338
 637 0096 1278     		ldrb	r2, [r2, #0]
 638 0098 D2B2     		uxtb	r2, r2
 639              		.loc 1 438 0
 640 009a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 20


 641 009c 02F0F802 		and	r2, r2, #248
 642 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 643 00a2 1146     		mov	r1, r2
 644 00a4 0246     		mov	r2, r0
 645 00a6 41EA0202 		orr	r2, r1, r2
 646 00aa D2B2     		uxtb	r2, r2
 647 00ac D2B2     		uxtb	r2, r2
 648 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 649              		.loc 1 440 0
 650 00b0 44F28203 		movw	r3, #:lower16:1073758338
 651 00b4 C4F20003 		movt	r3, #:upper16:1073758338
 652 00b8 44F28202 		movw	r2, #:lower16:1073758338
 653 00bc C4F20002 		movt	r2, #:upper16:1073758338
 654 00c0 1278     		ldrb	r2, [r2, #0]
 655 00c2 D2B2     		uxtb	r2, r2
 656 00c4 02F0BF02 		and	r2, r2, #191
 657 00c8 1A70     		strb	r2, [r3, #0]
 658              		.loc 1 433 0
 659 00ca 14E0     		b	.L34
 660              	.L33:
 441:.\Generated_Source\PSoC5/Clock_2.c ****     }
 442:.\Generated_Source\PSoC5/Clock_2.c ****     else
 443:.\Generated_Source\PSoC5/Clock_2.c ****     {
 444:.\Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 661              		.loc 1 444 0
 662 00cc 44F28203 		movw	r3, #:lower16:1073758338
 663 00d0 C4F20003 		movt	r3, #:upper16:1073758338
 445:.\Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 664              		.loc 1 445 0
 665 00d4 44F28202 		movw	r2, #:lower16:1073758338
 666 00d8 C4F20002 		movt	r2, #:upper16:1073758338
 667 00dc 1278     		ldrb	r2, [r2, #0]
 668 00de D2B2     		uxtb	r2, r2
 669              		.loc 1 444 0
 670 00e0 D2B2     		uxtb	r2, r2
 671 00e2 02F0F802 		and	r2, r2, #248
 672 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 673 00e8 1146     		mov	r1, r2
 674 00ea 0246     		mov	r2, r0
 675 00ec 41EA0202 		orr	r2, r1, r2
 676 00f0 D2B2     		uxtb	r2, r2
 677 00f2 D2B2     		uxtb	r2, r2
 678 00f4 1A70     		strb	r2, [r3, #0]
 679              	.L34:
 446:.\Generated_Source\PSoC5/Clock_2.c ****     }
 447:.\Generated_Source\PSoC5/Clock_2.c **** }
 680              		.loc 1 447 0
 681 00f6 07F11007 		add	r7, r7, #16
 682 00fa BD46     		mov	sp, r7
 683 00fc 80BD     		pop	{r7, pc}
 684              		.cfi_endproc
 685              	.LFE8:
 686              		.size	Clock_2_SetSourceRegister, .-Clock_2_SetSourceRegister
 687 00fe 00BF     		.section	.text.Clock_2_GetSourceRegister,"ax",%progbits
 688              		.align	2
 689              		.global	Clock_2_GetSourceRegister
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 21


 690              		.thumb
 691              		.thumb_func
 692              		.type	Clock_2_GetSourceRegister, %function
 693              	Clock_2_GetSourceRegister:
 694              	.LFB9:
 448:.\Generated_Source\PSoC5/Clock_2.c **** 
 449:.\Generated_Source\PSoC5/Clock_2.c **** 
 450:.\Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetSourceRegister
 452:.\Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/Clock_2.c **** *
 454:.\Generated_Source\PSoC5/Clock_2.c **** * Summary:
 455:.\Generated_Source\PSoC5/Clock_2.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/Clock_2.c **** *
 457:.\Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 458:.\Generated_Source\PSoC5/Clock_2.c **** *  None
 459:.\Generated_Source\PSoC5/Clock_2.c **** *
 460:.\Generated_Source\PSoC5/Clock_2.c **** * Returns:
 461:.\Generated_Source\PSoC5/Clock_2.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/Clock_2.c **** *
 463:.\Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/Clock_2.c **** uint8 Clock_2_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/Clock_2.c **** {
 695              		.loc 1 465 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              	.LCFI23:
 702              		.cfi_def_cfa_offset 4
 703 0002 00AF     		add	r7, sp, #0
 704              		.cfi_offset 7, -4
 705              	.LCFI24:
 706              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & Clock_2_SRC_SEL_MSK;
 707              		.loc 1 466 0
 708 0004 44F28203 		movw	r3, #:lower16:1073758338
 709 0008 C4F20003 		movt	r3, #:upper16:1073758338
 710 000c 1B78     		ldrb	r3, [r3, #0]
 711 000e DBB2     		uxtb	r3, r3
 712 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/Clock_2.c **** }
 713              		.loc 1 467 0
 714 0014 1846     		mov	r0, r3
 715 0016 BD46     		mov	sp, r7
 716 0018 80BC     		pop	{r7}
 717 001a 7047     		bx	lr
 718              		.cfi_endproc
 719              	.LFE9:
 720              		.size	Clock_2_GetSourceRegister, .-Clock_2_GetSourceRegister
 721              		.text
 722              	.Letext0:
 723              		.section	.debug_loc,"",%progbits
 724              	.Ldebug_loc0:
 725              	.LLST0:
 726 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 22


 727 0004 02000000 		.4byte	.LCFI0
 728 0008 0100     		.2byte	0x1
 729 000a 5D       		.byte	0x5d
 730 000b 02000000 		.4byte	.LCFI0
 731 000f 04000000 		.4byte	.LCFI1
 732 0013 0200     		.2byte	0x2
 733 0015 7D       		.byte	0x7d
 734 0016 04       		.sleb128 4
 735 0017 04000000 		.4byte	.LCFI1
 736 001b 42000000 		.4byte	.LFE0
 737 001f 0200     		.2byte	0x2
 738 0021 77       		.byte	0x77
 739 0022 04       		.sleb128 4
 740 0023 00000000 		.4byte	0x0
 741 0027 00000000 		.4byte	0x0
 742              	.LLST1:
 743 002b 00000000 		.4byte	.LFB1
 744 002f 02000000 		.4byte	.LCFI2
 745 0033 0100     		.2byte	0x1
 746 0035 5D       		.byte	0x5d
 747 0036 02000000 		.4byte	.LCFI2
 748 003a 04000000 		.4byte	.LCFI3
 749 003e 0200     		.2byte	0x2
 750 0040 7D       		.byte	0x7d
 751 0041 04       		.sleb128 4
 752 0042 04000000 		.4byte	.LCFI3
 753 0046 3E000000 		.4byte	.LFE1
 754 004a 0200     		.2byte	0x2
 755 004c 77       		.byte	0x77
 756 004d 04       		.sleb128 4
 757 004e 00000000 		.4byte	0x0
 758 0052 00000000 		.4byte	0x0
 759              	.LLST2:
 760 0056 00000000 		.4byte	.LFB2
 761 005a 02000000 		.4byte	.LCFI4
 762 005e 0100     		.2byte	0x1
 763 0060 5D       		.byte	0x5d
 764 0061 02000000 		.4byte	.LCFI4
 765 0065 04000000 		.4byte	.LCFI5
 766 0069 0200     		.2byte	0x2
 767 006b 7D       		.byte	0x7d
 768 006c 04       		.sleb128 4
 769 006d 04000000 		.4byte	.LCFI5
 770 0071 06000000 		.4byte	.LCFI6
 771 0075 0200     		.2byte	0x2
 772 0077 7D       		.byte	0x7d
 773 0078 10       		.sleb128 16
 774 0079 06000000 		.4byte	.LCFI6
 775 007d 52000000 		.4byte	.LFE2
 776 0081 0200     		.2byte	0x2
 777 0083 77       		.byte	0x77
 778 0084 10       		.sleb128 16
 779 0085 00000000 		.4byte	0x0
 780 0089 00000000 		.4byte	0x0
 781              	.LLST3:
 782 008d 00000000 		.4byte	.LFB3
 783 0091 02000000 		.4byte	.LCFI7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 23


 784 0095 0100     		.2byte	0x1
 785 0097 5D       		.byte	0x5d
 786 0098 02000000 		.4byte	.LCFI7
 787 009c 04000000 		.4byte	.LCFI8
 788 00a0 0200     		.2byte	0x2
 789 00a2 7D       		.byte	0x7d
 790 00a3 08       		.sleb128 8
 791 00a4 04000000 		.4byte	.LCFI8
 792 00a8 06000000 		.4byte	.LCFI9
 793 00ac 0200     		.2byte	0x2
 794 00ae 7D       		.byte	0x7d
 795 00af 18       		.sleb128 24
 796 00b0 06000000 		.4byte	.LCFI9
 797 00b4 A8010000 		.4byte	.LFE3
 798 00b8 0200     		.2byte	0x2
 799 00ba 77       		.byte	0x77
 800 00bb 18       		.sleb128 24
 801 00bc 00000000 		.4byte	0x0
 802 00c0 00000000 		.4byte	0x0
 803              	.LLST4:
 804 00c4 00000000 		.4byte	.LFB4
 805 00c8 02000000 		.4byte	.LCFI10
 806 00cc 0100     		.2byte	0x1
 807 00ce 5D       		.byte	0x5d
 808 00cf 02000000 		.4byte	.LCFI10
 809 00d3 04000000 		.4byte	.LCFI11
 810 00d7 0200     		.2byte	0x2
 811 00d9 7D       		.byte	0x7d
 812 00da 04       		.sleb128 4
 813 00db 04000000 		.4byte	.LCFI11
 814 00df 18000000 		.4byte	.LFE4
 815 00e3 0200     		.2byte	0x2
 816 00e5 77       		.byte	0x77
 817 00e6 04       		.sleb128 4
 818 00e7 00000000 		.4byte	0x0
 819 00eb 00000000 		.4byte	0x0
 820              	.LLST5:
 821 00ef 00000000 		.4byte	.LFB5
 822 00f3 02000000 		.4byte	.LCFI12
 823 00f7 0100     		.2byte	0x1
 824 00f9 5D       		.byte	0x5d
 825 00fa 02000000 		.4byte	.LCFI12
 826 00fe 04000000 		.4byte	.LCFI13
 827 0102 0200     		.2byte	0x2
 828 0104 7D       		.byte	0x7d
 829 0105 04       		.sleb128 4
 830 0106 04000000 		.4byte	.LCFI13
 831 010a 06000000 		.4byte	.LCFI14
 832 010e 0200     		.2byte	0x2
 833 0110 7D       		.byte	0x7d
 834 0111 10       		.sleb128 16
 835 0112 06000000 		.4byte	.LCFI14
 836 0116 3C000000 		.4byte	.LFE5
 837 011a 0200     		.2byte	0x2
 838 011c 77       		.byte	0x77
 839 011d 10       		.sleb128 16
 840 011e 00000000 		.4byte	0x0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 24


 841 0122 00000000 		.4byte	0x0
 842              	.LLST6:
 843 0126 00000000 		.4byte	.LFB6
 844 012a 02000000 		.4byte	.LCFI15
 845 012e 0100     		.2byte	0x1
 846 0130 5D       		.byte	0x5d
 847 0131 02000000 		.4byte	.LCFI15
 848 0135 04000000 		.4byte	.LCFI16
 849 0139 0200     		.2byte	0x2
 850 013b 7D       		.byte	0x7d
 851 013c 04       		.sleb128 4
 852 013d 04000000 		.4byte	.LCFI16
 853 0141 06000000 		.4byte	.LCFI17
 854 0145 0200     		.2byte	0x2
 855 0147 7D       		.byte	0x7d
 856 0148 10       		.sleb128 16
 857 0149 06000000 		.4byte	.LCFI17
 858 014d 3E000000 		.4byte	.LFE6
 859 0151 0200     		.2byte	0x2
 860 0153 77       		.byte	0x77
 861 0154 10       		.sleb128 16
 862 0155 00000000 		.4byte	0x0
 863 0159 00000000 		.4byte	0x0
 864              	.LLST7:
 865 015d 00000000 		.4byte	.LFB7
 866 0161 02000000 		.4byte	.LCFI18
 867 0165 0100     		.2byte	0x1
 868 0167 5D       		.byte	0x5d
 869 0168 02000000 		.4byte	.LCFI18
 870 016c 04000000 		.4byte	.LCFI19
 871 0170 0200     		.2byte	0x2
 872 0172 7D       		.byte	0x7d
 873 0173 04       		.sleb128 4
 874 0174 04000000 		.4byte	.LCFI19
 875 0178 1C000000 		.4byte	.LFE7
 876 017c 0200     		.2byte	0x2
 877 017e 77       		.byte	0x77
 878 017f 04       		.sleb128 4
 879 0180 00000000 		.4byte	0x0
 880 0184 00000000 		.4byte	0x0
 881              	.LLST8:
 882 0188 00000000 		.4byte	.LFB8
 883 018c 02000000 		.4byte	.LCFI20
 884 0190 0100     		.2byte	0x1
 885 0192 5D       		.byte	0x5d
 886 0193 02000000 		.4byte	.LCFI20
 887 0197 04000000 		.4byte	.LCFI21
 888 019b 0200     		.2byte	0x2
 889 019d 7D       		.byte	0x7d
 890 019e 08       		.sleb128 8
 891 019f 04000000 		.4byte	.LCFI21
 892 01a3 06000000 		.4byte	.LCFI22
 893 01a7 0200     		.2byte	0x2
 894 01a9 7D       		.byte	0x7d
 895 01aa 18       		.sleb128 24
 896 01ab 06000000 		.4byte	.LCFI22
 897 01af FE000000 		.4byte	.LFE8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 25


 898 01b3 0200     		.2byte	0x2
 899 01b5 77       		.byte	0x77
 900 01b6 18       		.sleb128 24
 901 01b7 00000000 		.4byte	0x0
 902 01bb 00000000 		.4byte	0x0
 903              	.LLST9:
 904 01bf 00000000 		.4byte	.LFB9
 905 01c3 02000000 		.4byte	.LCFI23
 906 01c7 0100     		.2byte	0x1
 907 01c9 5D       		.byte	0x5d
 908 01ca 02000000 		.4byte	.LCFI23
 909 01ce 04000000 		.4byte	.LCFI24
 910 01d2 0200     		.2byte	0x2
 911 01d4 7D       		.byte	0x7d
 912 01d5 04       		.sleb128 4
 913 01d6 04000000 		.4byte	.LCFI24
 914 01da 1C000000 		.4byte	.LFE9
 915 01de 0200     		.2byte	0x2
 916 01e0 77       		.byte	0x77
 917 01e1 04       		.sleb128 4
 918 01e2 00000000 		.4byte	0x0
 919 01e6 00000000 		.4byte	0x0
 920              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 921              		.section	.debug_info
 922 0000 33020000 		.4byte	0x233
 923 0004 0200     		.2byte	0x2
 924 0006 00000000 		.4byte	.Ldebug_abbrev0
 925 000a 04       		.byte	0x4
 926 000b 01       		.uleb128 0x1
 927 000c B7010000 		.4byte	.LASF34
 928 0010 01       		.byte	0x1
 929 0011 E6000000 		.4byte	.LASF35
 930 0015 09010000 		.4byte	.LASF36
 931 0019 00000000 		.4byte	0x0
 932 001d 00000000 		.4byte	0x0
 933 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 934 0025 00000000 		.4byte	.Ldebug_line0
 935 0029 02       		.uleb128 0x2
 936 002a 01       		.byte	0x1
 937 002b 06       		.byte	0x6
 938 002c 0B020000 		.4byte	.LASF0
 939 0030 02       		.uleb128 0x2
 940 0031 01       		.byte	0x1
 941 0032 08       		.byte	0x8
 942 0033 4D000000 		.4byte	.LASF1
 943 0037 02       		.uleb128 0x2
 944 0038 02       		.byte	0x2
 945 0039 05       		.byte	0x5
 946 003a D0010000 		.4byte	.LASF2
 947 003e 02       		.uleb128 0x2
 948 003f 02       		.byte	0x2
 949 0040 07       		.byte	0x7
 950 0041 75000000 		.4byte	.LASF3
 951 0045 02       		.uleb128 0x2
 952 0046 04       		.byte	0x4
 953 0047 05       		.byte	0x5
 954 0048 F8010000 		.4byte	.LASF4
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 26


 955 004c 02       		.uleb128 0x2
 956 004d 04       		.byte	0x4
 957 004e 07       		.byte	0x7
 958 004f 63000000 		.4byte	.LASF5
 959 0053 02       		.uleb128 0x2
 960 0054 08       		.byte	0x8
 961 0055 05       		.byte	0x5
 962 0056 00000000 		.4byte	.LASF6
 963 005a 02       		.uleb128 0x2
 964 005b 08       		.byte	0x8
 965 005c 07       		.byte	0x7
 966 005d 7A010000 		.4byte	.LASF7
 967 0061 03       		.uleb128 0x3
 968 0062 04       		.byte	0x4
 969 0063 05       		.byte	0x5
 970 0064 696E7400 		.ascii	"int\000"
 971 0068 02       		.uleb128 0x2
 972 0069 04       		.byte	0x4
 973 006a 07       		.byte	0x7
 974 006b 65010000 		.4byte	.LASF8
 975 006f 04       		.uleb128 0x4
 976 0070 F2010000 		.4byte	.LASF9
 977 0074 02       		.byte	0x2
 978 0075 4C       		.byte	0x4c
 979 0076 30000000 		.4byte	0x30
 980 007a 04       		.uleb128 0x4
 981 007b DF000000 		.4byte	.LASF10
 982 007f 02       		.byte	0x2
 983 0080 4D       		.byte	0x4d
 984 0081 3E000000 		.4byte	0x3e
 985 0085 02       		.uleb128 0x2
 986 0086 04       		.byte	0x4
 987 0087 04       		.byte	0x4
 988 0088 2C000000 		.4byte	.LASF11
 989 008c 02       		.uleb128 0x2
 990 008d 08       		.byte	0x8
 991 008e 04       		.byte	0x4
 992 008f D0000000 		.4byte	.LASF12
 993 0093 02       		.uleb128 0x2
 994 0094 01       		.byte	0x1
 995 0095 08       		.byte	0x8
 996 0096 C3010000 		.4byte	.LASF13
 997 009a 05       		.uleb128 0x5
 998 009b 01       		.byte	0x1
 999 009c 88000000 		.4byte	.LASF14
 1000 00a0 01       		.byte	0x1
 1001 00a1 2D       		.byte	0x2d
 1002 00a2 01       		.byte	0x1
 1003 00a3 00000000 		.4byte	.LFB0
 1004 00a7 42000000 		.4byte	.LFE0
 1005 00ab 00000000 		.4byte	.LLST0
 1006 00af 05       		.uleb128 0x5
 1007 00b0 01       		.byte	0x1
 1008 00b1 0E000000 		.4byte	.LASF15
 1009 00b5 01       		.byte	0x1
 1010 00b6 47       		.byte	0x47
 1011 00b7 01       		.byte	0x1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 27


 1012 00b8 00000000 		.4byte	.LFB1
 1013 00bc 3E000000 		.4byte	.LFE1
 1014 00c0 2B000000 		.4byte	.LLST1
 1015 00c4 06       		.uleb128 0x6
 1016 00c5 01       		.byte	0x1
 1017 00c6 B0000000 		.4byte	.LASF16
 1018 00ca 01       		.byte	0x1
 1019 00cb 9D       		.byte	0x9d
 1020 00cc 01       		.byte	0x1
 1021 00cd 00000000 		.4byte	.LFB2
 1022 00d1 52000000 		.4byte	.LFE2
 1023 00d5 56000000 		.4byte	.LLST2
 1024 00d9 EC000000 		.4byte	0xec
 1025 00dd 07       		.uleb128 0x7
 1026 00de 1B000000 		.4byte	.LASF18
 1027 00e2 01       		.byte	0x1
 1028 00e3 9D       		.byte	0x9d
 1029 00e4 6F000000 		.4byte	0x6f
 1030 00e8 02       		.byte	0x2
 1031 00e9 91       		.byte	0x91
 1032 00ea 77       		.sleb128 -9
 1033 00eb 00       		.byte	0x0
 1034 00ec 06       		.uleb128 0x6
 1035 00ed 01       		.byte	0x1
 1036 00ee 32000000 		.4byte	.LASF17
 1037 00f2 01       		.byte	0x1
 1038 00f3 C1       		.byte	0xc1
 1039 00f4 01       		.byte	0x1
 1040 00f5 00000000 		.4byte	.LFB3
 1041 00f9 A8010000 		.4byte	.LFE3
 1042 00fd 8D000000 		.4byte	.LLST3
 1043 0101 4C010000 		.4byte	0x14c
 1044 0105 07       		.uleb128 0x7
 1045 0106 C5000000 		.4byte	.LASF19
 1046 010a 01       		.byte	0x1
 1047 010b C1       		.byte	0xc1
 1048 010c 7A000000 		.4byte	0x7a
 1049 0110 02       		.byte	0x2
 1050 0111 91       		.byte	0x91
 1051 0112 6E       		.sleb128 -18
 1052 0113 07       		.uleb128 0x7
 1053 0114 D7000000 		.4byte	.LASF20
 1054 0118 01       		.byte	0x1
 1055 0119 C1       		.byte	0xc1
 1056 011a 6F000000 		.4byte	0x6f
 1057 011e 02       		.byte	0x2
 1058 011f 91       		.byte	0x91
 1059 0120 6D       		.sleb128 -19
 1060 0121 08       		.uleb128 0x8
 1061 0122 5B000000 		.4byte	.LASF21
 1062 0126 01       		.byte	0x1
 1063 0127 C4       		.byte	0xc4
 1064 0128 6F000000 		.4byte	0x6f
 1065 012c 02       		.byte	0x2
 1066 012d 91       		.byte	0x91
 1067 012e 74       		.sleb128 -12
 1068 012f 08       		.uleb128 0x8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 28


 1069 0130 72010000 		.4byte	.LASF22
 1070 0134 01       		.byte	0x1
 1071 0135 C6       		.byte	0xc6
 1072 0136 6F000000 		.4byte	0x6f
 1073 013a 02       		.byte	0x2
 1074 013b 91       		.byte	0x91
 1075 013c 75       		.sleb128 -11
 1076 013d 08       		.uleb128 0x8
 1077 013e 21000000 		.4byte	.LASF23
 1078 0142 01       		.byte	0x1
 1079 0143 C7       		.byte	0xc7
 1080 0144 7A000000 		.4byte	0x7a
 1081 0148 02       		.byte	0x2
 1082 0149 91       		.byte	0x91
 1083 014a 76       		.sleb128 -10
 1084 014b 00       		.byte	0x0
 1085 014c 09       		.uleb128 0x9
 1086 014d 01       		.byte	0x1
 1087 014e 17020000 		.4byte	.LASF27
 1088 0152 01       		.byte	0x1
 1089 0153 2901     		.2byte	0x129
 1090 0155 01       		.byte	0x1
 1091 0156 7A000000 		.4byte	0x7a
 1092 015a 00000000 		.4byte	.LFB4
 1093 015e 18000000 		.4byte	.LFE4
 1094 0162 C4000000 		.4byte	.LLST4
 1095 0166 0A       		.uleb128 0xa
 1096 0167 01       		.byte	0x1
 1097 0168 DA010000 		.4byte	.LASF24
 1098 016c 01       		.byte	0x1
 1099 016d 4C01     		.2byte	0x14c
 1100 016f 01       		.byte	0x1
 1101 0170 00000000 		.4byte	.LFB5
 1102 0174 3C000000 		.4byte	.LFE5
 1103 0178 EF000000 		.4byte	.LLST5
 1104 017c 90010000 		.4byte	0x190
 1105 0180 0B       		.uleb128 0xb
 1106 0181 AB010000 		.4byte	.LASF25
 1107 0185 01       		.byte	0x1
 1108 0186 4C01     		.2byte	0x14c
 1109 0188 6F000000 		.4byte	0x6f
 1110 018c 02       		.byte	0x2
 1111 018d 91       		.byte	0x91
 1112 018e 77       		.sleb128 -9
 1113 018f 00       		.byte	0x0
 1114 0190 0A       		.uleb128 0xa
 1115 0191 01       		.byte	0x1
 1116 0192 91010000 		.4byte	.LASF26
 1117 0196 01       		.byte	0x1
 1118 0197 6F01     		.2byte	0x16f
 1119 0199 01       		.byte	0x1
 1120 019a 00000000 		.4byte	.LFB6
 1121 019e 3E000000 		.4byte	.LFE6
 1122 01a2 26010000 		.4byte	.LLST6
 1123 01a6 BA010000 		.4byte	0x1ba
 1124 01aa 0B       		.uleb128 0xb
 1125 01ab AB010000 		.4byte	.LASF25
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 29


 1126 01af 01       		.byte	0x1
 1127 01b0 6F01     		.2byte	0x16f
 1128 01b2 6F000000 		.4byte	0x6f
 1129 01b6 02       		.byte	0x2
 1130 01b7 91       		.byte	0x91
 1131 01b8 77       		.sleb128 -9
 1132 01b9 00       		.byte	0x0
 1133 01ba 09       		.uleb128 0x9
 1134 01bb 01       		.byte	0x1
 1135 01bc 4D010000 		.4byte	.LASF28
 1136 01c0 01       		.byte	0x1
 1137 01c1 8401     		.2byte	0x184
 1138 01c3 01       		.byte	0x1
 1139 01c4 6F000000 		.4byte	0x6f
 1140 01c8 00000000 		.4byte	.LFB7
 1141 01cc 1C000000 		.4byte	.LFE7
 1142 01d0 5D010000 		.4byte	.LLST7
 1143 01d4 0A       		.uleb128 0xa
 1144 01d5 01       		.byte	0x1
 1145 01d6 32020000 		.4byte	.LASF29
 1146 01da 01       		.byte	0x1
 1147 01db A301     		.2byte	0x1a3
 1148 01dd 01       		.byte	0x1
 1149 01de 00000000 		.4byte	.LFB8
 1150 01e2 FE000000 		.4byte	.LFE8
 1151 01e6 88010000 		.4byte	.LLST8
 1152 01ea 1C020000 		.4byte	0x21c
 1153 01ee 0B       		.uleb128 0xb
 1154 01ef 01020000 		.4byte	.LASF30
 1155 01f3 01       		.byte	0x1
 1156 01f4 A301     		.2byte	0x1a3
 1157 01f6 6F000000 		.4byte	0x6f
 1158 01fa 02       		.byte	0x2
 1159 01fb 91       		.byte	0x91
 1160 01fc 6F       		.sleb128 -17
 1161 01fd 0C       		.uleb128 0xc
 1162 01fe C8010000 		.4byte	.LASF31
 1163 0202 01       		.byte	0x1
 1164 0203 A501     		.2byte	0x1a5
 1165 0205 7A000000 		.4byte	0x7a
 1166 0209 02       		.byte	0x2
 1167 020a 91       		.byte	0x91
 1168 020b 74       		.sleb128 -12
 1169 020c 0C       		.uleb128 0xc
 1170 020d 4C020000 		.4byte	.LASF32
 1171 0211 01       		.byte	0x1
 1172 0212 A601     		.2byte	0x1a6
 1173 0214 6F000000 		.4byte	0x6f
 1174 0218 02       		.byte	0x2
 1175 0219 91       		.byte	0x91
 1176 021a 77       		.sleb128 -9
 1177 021b 00       		.byte	0x0
 1178 021c 09       		.uleb128 0x9
 1179 021d 01       		.byte	0x1
 1180 021e 96000000 		.4byte	.LASF33
 1181 0222 01       		.byte	0x1
 1182 0223 D001     		.2byte	0x1d0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 30


 1183 0225 01       		.byte	0x1
 1184 0226 6F000000 		.4byte	0x6f
 1185 022a 00000000 		.4byte	.LFB9
 1186 022e 1C000000 		.4byte	.LFE9
 1187 0232 BF010000 		.4byte	.LLST9
 1188 0236 00       		.byte	0x0
 1189              		.section	.debug_abbrev
 1190 0000 01       		.uleb128 0x1
 1191 0001 11       		.uleb128 0x11
 1192 0002 01       		.byte	0x1
 1193 0003 25       		.uleb128 0x25
 1194 0004 0E       		.uleb128 0xe
 1195 0005 13       		.uleb128 0x13
 1196 0006 0B       		.uleb128 0xb
 1197 0007 03       		.uleb128 0x3
 1198 0008 0E       		.uleb128 0xe
 1199 0009 1B       		.uleb128 0x1b
 1200 000a 0E       		.uleb128 0xe
 1201 000b 11       		.uleb128 0x11
 1202 000c 01       		.uleb128 0x1
 1203 000d 52       		.uleb128 0x52
 1204 000e 01       		.uleb128 0x1
 1205 000f 55       		.uleb128 0x55
 1206 0010 06       		.uleb128 0x6
 1207 0011 10       		.uleb128 0x10
 1208 0012 06       		.uleb128 0x6
 1209 0013 00       		.byte	0x0
 1210 0014 00       		.byte	0x0
 1211 0015 02       		.uleb128 0x2
 1212 0016 24       		.uleb128 0x24
 1213 0017 00       		.byte	0x0
 1214 0018 0B       		.uleb128 0xb
 1215 0019 0B       		.uleb128 0xb
 1216 001a 3E       		.uleb128 0x3e
 1217 001b 0B       		.uleb128 0xb
 1218 001c 03       		.uleb128 0x3
 1219 001d 0E       		.uleb128 0xe
 1220 001e 00       		.byte	0x0
 1221 001f 00       		.byte	0x0
 1222 0020 03       		.uleb128 0x3
 1223 0021 24       		.uleb128 0x24
 1224 0022 00       		.byte	0x0
 1225 0023 0B       		.uleb128 0xb
 1226 0024 0B       		.uleb128 0xb
 1227 0025 3E       		.uleb128 0x3e
 1228 0026 0B       		.uleb128 0xb
 1229 0027 03       		.uleb128 0x3
 1230 0028 08       		.uleb128 0x8
 1231 0029 00       		.byte	0x0
 1232 002a 00       		.byte	0x0
 1233 002b 04       		.uleb128 0x4
 1234 002c 16       		.uleb128 0x16
 1235 002d 00       		.byte	0x0
 1236 002e 03       		.uleb128 0x3
 1237 002f 0E       		.uleb128 0xe
 1238 0030 3A       		.uleb128 0x3a
 1239 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 31


 1240 0032 3B       		.uleb128 0x3b
 1241 0033 0B       		.uleb128 0xb
 1242 0034 49       		.uleb128 0x49
 1243 0035 13       		.uleb128 0x13
 1244 0036 00       		.byte	0x0
 1245 0037 00       		.byte	0x0
 1246 0038 05       		.uleb128 0x5
 1247 0039 2E       		.uleb128 0x2e
 1248 003a 00       		.byte	0x0
 1249 003b 3F       		.uleb128 0x3f
 1250 003c 0C       		.uleb128 0xc
 1251 003d 03       		.uleb128 0x3
 1252 003e 0E       		.uleb128 0xe
 1253 003f 3A       		.uleb128 0x3a
 1254 0040 0B       		.uleb128 0xb
 1255 0041 3B       		.uleb128 0x3b
 1256 0042 0B       		.uleb128 0xb
 1257 0043 27       		.uleb128 0x27
 1258 0044 0C       		.uleb128 0xc
 1259 0045 11       		.uleb128 0x11
 1260 0046 01       		.uleb128 0x1
 1261 0047 12       		.uleb128 0x12
 1262 0048 01       		.uleb128 0x1
 1263 0049 40       		.uleb128 0x40
 1264 004a 06       		.uleb128 0x6
 1265 004b 00       		.byte	0x0
 1266 004c 00       		.byte	0x0
 1267 004d 06       		.uleb128 0x6
 1268 004e 2E       		.uleb128 0x2e
 1269 004f 01       		.byte	0x1
 1270 0050 3F       		.uleb128 0x3f
 1271 0051 0C       		.uleb128 0xc
 1272 0052 03       		.uleb128 0x3
 1273 0053 0E       		.uleb128 0xe
 1274 0054 3A       		.uleb128 0x3a
 1275 0055 0B       		.uleb128 0xb
 1276 0056 3B       		.uleb128 0x3b
 1277 0057 0B       		.uleb128 0xb
 1278 0058 27       		.uleb128 0x27
 1279 0059 0C       		.uleb128 0xc
 1280 005a 11       		.uleb128 0x11
 1281 005b 01       		.uleb128 0x1
 1282 005c 12       		.uleb128 0x12
 1283 005d 01       		.uleb128 0x1
 1284 005e 40       		.uleb128 0x40
 1285 005f 06       		.uleb128 0x6
 1286 0060 01       		.uleb128 0x1
 1287 0061 13       		.uleb128 0x13
 1288 0062 00       		.byte	0x0
 1289 0063 00       		.byte	0x0
 1290 0064 07       		.uleb128 0x7
 1291 0065 05       		.uleb128 0x5
 1292 0066 00       		.byte	0x0
 1293 0067 03       		.uleb128 0x3
 1294 0068 0E       		.uleb128 0xe
 1295 0069 3A       		.uleb128 0x3a
 1296 006a 0B       		.uleb128 0xb
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 32


 1297 006b 3B       		.uleb128 0x3b
 1298 006c 0B       		.uleb128 0xb
 1299 006d 49       		.uleb128 0x49
 1300 006e 13       		.uleb128 0x13
 1301 006f 02       		.uleb128 0x2
 1302 0070 0A       		.uleb128 0xa
 1303 0071 00       		.byte	0x0
 1304 0072 00       		.byte	0x0
 1305 0073 08       		.uleb128 0x8
 1306 0074 34       		.uleb128 0x34
 1307 0075 00       		.byte	0x0
 1308 0076 03       		.uleb128 0x3
 1309 0077 0E       		.uleb128 0xe
 1310 0078 3A       		.uleb128 0x3a
 1311 0079 0B       		.uleb128 0xb
 1312 007a 3B       		.uleb128 0x3b
 1313 007b 0B       		.uleb128 0xb
 1314 007c 49       		.uleb128 0x49
 1315 007d 13       		.uleb128 0x13
 1316 007e 02       		.uleb128 0x2
 1317 007f 0A       		.uleb128 0xa
 1318 0080 00       		.byte	0x0
 1319 0081 00       		.byte	0x0
 1320 0082 09       		.uleb128 0x9
 1321 0083 2E       		.uleb128 0x2e
 1322 0084 00       		.byte	0x0
 1323 0085 3F       		.uleb128 0x3f
 1324 0086 0C       		.uleb128 0xc
 1325 0087 03       		.uleb128 0x3
 1326 0088 0E       		.uleb128 0xe
 1327 0089 3A       		.uleb128 0x3a
 1328 008a 0B       		.uleb128 0xb
 1329 008b 3B       		.uleb128 0x3b
 1330 008c 05       		.uleb128 0x5
 1331 008d 27       		.uleb128 0x27
 1332 008e 0C       		.uleb128 0xc
 1333 008f 49       		.uleb128 0x49
 1334 0090 13       		.uleb128 0x13
 1335 0091 11       		.uleb128 0x11
 1336 0092 01       		.uleb128 0x1
 1337 0093 12       		.uleb128 0x12
 1338 0094 01       		.uleb128 0x1
 1339 0095 40       		.uleb128 0x40
 1340 0096 06       		.uleb128 0x6
 1341 0097 00       		.byte	0x0
 1342 0098 00       		.byte	0x0
 1343 0099 0A       		.uleb128 0xa
 1344 009a 2E       		.uleb128 0x2e
 1345 009b 01       		.byte	0x1
 1346 009c 3F       		.uleb128 0x3f
 1347 009d 0C       		.uleb128 0xc
 1348 009e 03       		.uleb128 0x3
 1349 009f 0E       		.uleb128 0xe
 1350 00a0 3A       		.uleb128 0x3a
 1351 00a1 0B       		.uleb128 0xb
 1352 00a2 3B       		.uleb128 0x3b
 1353 00a3 05       		.uleb128 0x5
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 33


 1354 00a4 27       		.uleb128 0x27
 1355 00a5 0C       		.uleb128 0xc
 1356 00a6 11       		.uleb128 0x11
 1357 00a7 01       		.uleb128 0x1
 1358 00a8 12       		.uleb128 0x12
 1359 00a9 01       		.uleb128 0x1
 1360 00aa 40       		.uleb128 0x40
 1361 00ab 06       		.uleb128 0x6
 1362 00ac 01       		.uleb128 0x1
 1363 00ad 13       		.uleb128 0x13
 1364 00ae 00       		.byte	0x0
 1365 00af 00       		.byte	0x0
 1366 00b0 0B       		.uleb128 0xb
 1367 00b1 05       		.uleb128 0x5
 1368 00b2 00       		.byte	0x0
 1369 00b3 03       		.uleb128 0x3
 1370 00b4 0E       		.uleb128 0xe
 1371 00b5 3A       		.uleb128 0x3a
 1372 00b6 0B       		.uleb128 0xb
 1373 00b7 3B       		.uleb128 0x3b
 1374 00b8 05       		.uleb128 0x5
 1375 00b9 49       		.uleb128 0x49
 1376 00ba 13       		.uleb128 0x13
 1377 00bb 02       		.uleb128 0x2
 1378 00bc 0A       		.uleb128 0xa
 1379 00bd 00       		.byte	0x0
 1380 00be 00       		.byte	0x0
 1381 00bf 0C       		.uleb128 0xc
 1382 00c0 34       		.uleb128 0x34
 1383 00c1 00       		.byte	0x0
 1384 00c2 03       		.uleb128 0x3
 1385 00c3 0E       		.uleb128 0xe
 1386 00c4 3A       		.uleb128 0x3a
 1387 00c5 0B       		.uleb128 0xb
 1388 00c6 3B       		.uleb128 0x3b
 1389 00c7 05       		.uleb128 0x5
 1390 00c8 49       		.uleb128 0x49
 1391 00c9 13       		.uleb128 0x13
 1392 00ca 02       		.uleb128 0x2
 1393 00cb 0A       		.uleb128 0xa
 1394 00cc 00       		.byte	0x0
 1395 00cd 00       		.byte	0x0
 1396 00ce 00       		.byte	0x0
 1397              		.section	.debug_pubnames,"",%progbits
 1398 0000 1A010000 		.4byte	0x11a
 1399 0004 0200     		.2byte	0x2
 1400 0006 00000000 		.4byte	.Ldebug_info0
 1401 000a 37020000 		.4byte	0x237
 1402 000e 9A000000 		.4byte	0x9a
 1403 0012 436C6F63 		.ascii	"Clock_2_Start\000"
 1403      6B5F325F 
 1403      53746172 
 1403      7400
 1404 0020 AF000000 		.4byte	0xaf
 1405 0024 436C6F63 		.ascii	"Clock_2_Stop\000"
 1405      6B5F325F 
 1405      53746F70 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 34


 1405      00
 1406 0031 C4000000 		.4byte	0xc4
 1407 0035 436C6F63 		.ascii	"Clock_2_StandbyPower\000"
 1407      6B5F325F 
 1407      5374616E 
 1407      64627950 
 1407      6F776572 
 1408 004a EC000000 		.4byte	0xec
 1409 004e 436C6F63 		.ascii	"Clock_2_SetDividerRegister\000"
 1409      6B5F325F 
 1409      53657444 
 1409      69766964 
 1409      65725265 
 1410 0069 4C010000 		.4byte	0x14c
 1411 006d 436C6F63 		.ascii	"Clock_2_GetDividerRegister\000"
 1411      6B5F325F 
 1411      47657444 
 1411      69766964 
 1411      65725265 
 1412 0088 66010000 		.4byte	0x166
 1413 008c 436C6F63 		.ascii	"Clock_2_SetModeRegister\000"
 1413      6B5F325F 
 1413      5365744D 
 1413      6F646552 
 1413      65676973 
 1414 00a4 90010000 		.4byte	0x190
 1415 00a8 436C6F63 		.ascii	"Clock_2_ClearModeRegister\000"
 1415      6B5F325F 
 1415      436C6561 
 1415      724D6F64 
 1415      65526567 
 1416 00c2 BA010000 		.4byte	0x1ba
 1417 00c6 436C6F63 		.ascii	"Clock_2_GetModeRegister\000"
 1417      6B5F325F 
 1417      4765744D 
 1417      6F646552 
 1417      65676973 
 1418 00de D4010000 		.4byte	0x1d4
 1419 00e2 436C6F63 		.ascii	"Clock_2_SetSourceRegister\000"
 1419      6B5F325F 
 1419      53657453 
 1419      6F757263 
 1419      65526567 
 1420 00fc 1C020000 		.4byte	0x21c
 1421 0100 436C6F63 		.ascii	"Clock_2_GetSourceRegister\000"
 1421      6B5F325F 
 1421      47657453 
 1421      6F757263 
 1421      65526567 
 1422 011a 00000000 		.4byte	0x0
 1423              		.section	.debug_aranges,"",%progbits
 1424 0000 64000000 		.4byte	0x64
 1425 0004 0200     		.2byte	0x2
 1426 0006 00000000 		.4byte	.Ldebug_info0
 1427 000a 04       		.byte	0x4
 1428 000b 00       		.byte	0x0
 1429 000c 0000     		.2byte	0x0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 35


 1430 000e 0000     		.2byte	0x0
 1431 0010 00000000 		.4byte	.LFB0
 1432 0014 42000000 		.4byte	.LFE0-.LFB0
 1433 0018 00000000 		.4byte	.LFB1
 1434 001c 3E000000 		.4byte	.LFE1-.LFB1
 1435 0020 00000000 		.4byte	.LFB2
 1436 0024 52000000 		.4byte	.LFE2-.LFB2
 1437 0028 00000000 		.4byte	.LFB3
 1438 002c A8010000 		.4byte	.LFE3-.LFB3
 1439 0030 00000000 		.4byte	.LFB4
 1440 0034 18000000 		.4byte	.LFE4-.LFB4
 1441 0038 00000000 		.4byte	.LFB5
 1442 003c 3C000000 		.4byte	.LFE5-.LFB5
 1443 0040 00000000 		.4byte	.LFB6
 1444 0044 3E000000 		.4byte	.LFE6-.LFB6
 1445 0048 00000000 		.4byte	.LFB7
 1446 004c 1C000000 		.4byte	.LFE7-.LFB7
 1447 0050 00000000 		.4byte	.LFB8
 1448 0054 FE000000 		.4byte	.LFE8-.LFB8
 1449 0058 00000000 		.4byte	.LFB9
 1450 005c 1C000000 		.4byte	.LFE9-.LFB9
 1451 0060 00000000 		.4byte	0x0
 1452 0064 00000000 		.4byte	0x0
 1453              		.section	.debug_ranges,"",%progbits
 1454              	.Ldebug_ranges0:
 1455 0000 00000000 		.4byte	.Ltext0
 1456 0004 00000000 		.4byte	.Letext0
 1457 0008 00000000 		.4byte	.LFB0
 1458 000c 42000000 		.4byte	.LFE0
 1459 0010 00000000 		.4byte	.LFB1
 1460 0014 3E000000 		.4byte	.LFE1
 1461 0018 00000000 		.4byte	.LFB2
 1462 001c 52000000 		.4byte	.LFE2
 1463 0020 00000000 		.4byte	.LFB3
 1464 0024 A8010000 		.4byte	.LFE3
 1465 0028 00000000 		.4byte	.LFB4
 1466 002c 18000000 		.4byte	.LFE4
 1467 0030 00000000 		.4byte	.LFB5
 1468 0034 3C000000 		.4byte	.LFE5
 1469 0038 00000000 		.4byte	.LFB6
 1470 003c 3E000000 		.4byte	.LFE6
 1471 0040 00000000 		.4byte	.LFB7
 1472 0044 1C000000 		.4byte	.LFE7
 1473 0048 00000000 		.4byte	.LFB8
 1474 004c FE000000 		.4byte	.LFE8
 1475 0050 00000000 		.4byte	.LFB9
 1476 0054 1C000000 		.4byte	.LFE9
 1477 0058 00000000 		.4byte	0x0
 1478 005c 00000000 		.4byte	0x0
 1479              		.section	.debug_str,"MS",%progbits,1
 1480              	.LASF6:
 1481 0000 6C6F6E67 		.ascii	"long long int\000"
 1481      206C6F6E 
 1481      6720696E 
 1481      7400
 1482              	.LASF15:
 1483 000e 436C6F63 		.ascii	"Clock_2_Stop\000"
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 36


 1483      6B5F325F 
 1483      53746F70 
 1483      00
 1484              	.LASF18:
 1485 001b 73746174 		.ascii	"state\000"
 1485      6500
 1486              	.LASF23:
 1487 0021 6F6C6444 		.ascii	"oldDivider\000"
 1487      69766964 
 1487      657200
 1488              	.LASF11:
 1489 002c 666C6F61 		.ascii	"float\000"
 1489      7400
 1490              	.LASF17:
 1491 0032 436C6F63 		.ascii	"Clock_2_SetDividerRegister\000"
 1491      6B5F325F 
 1491      53657444 
 1491      69766964 
 1491      65725265 
 1492              	.LASF1:
 1493 004d 756E7369 		.ascii	"unsigned char\000"
 1493      676E6564 
 1493      20636861 
 1493      7200
 1494              	.LASF21:
 1495 005b 656E6162 		.ascii	"enabled\000"
 1495      6C656400 
 1496              	.LASF5:
 1497 0063 6C6F6E67 		.ascii	"long unsigned int\000"
 1497      20756E73 
 1497      69676E65 
 1497      6420696E 
 1497      7400
 1498              	.LASF3:
 1499 0075 73686F72 		.ascii	"short unsigned int\000"
 1499      7420756E 
 1499      7369676E 
 1499      65642069 
 1499      6E7400
 1500              	.LASF14:
 1501 0088 436C6F63 		.ascii	"Clock_2_Start\000"
 1501      6B5F325F 
 1501      53746172 
 1501      7400
 1502              	.LASF33:
 1503 0096 436C6F63 		.ascii	"Clock_2_GetSourceRegister\000"
 1503      6B5F325F 
 1503      47657453 
 1503      6F757263 
 1503      65526567 
 1504              	.LASF16:
 1505 00b0 436C6F63 		.ascii	"Clock_2_StandbyPower\000"
 1505      6B5F325F 
 1505      5374616E 
 1505      64627950 
 1505      6F776572 
 1506              	.LASF19:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 37


 1507 00c5 636C6B44 		.ascii	"clkDivider\000"
 1507      69766964 
 1507      657200
 1508              	.LASF12:
 1509 00d0 646F7562 		.ascii	"double\000"
 1509      6C6500
 1510              	.LASF20:
 1511 00d7 72657374 		.ascii	"restart\000"
 1511      61727400 
 1512              	.LASF10:
 1513 00df 75696E74 		.ascii	"uint16\000"
 1513      313600
 1514              	.LASF35:
 1515 00e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Clock_2.c\000"
 1515      6E657261 
 1515      7465645F 
 1515      536F7572 
 1515      63655C50 
 1516              	.LASF36:
 1517 0109 433A5C55 		.ascii	"C:\\Users\\hoangp\\Documents\\GitHub\\EE542\\firmwa"
 1517      73657273 
 1517      5C686F61 
 1517      6E67705C 
 1517      446F6375 
 1518 0136 72655C69 		.ascii	"re\\invert\\invert.cydsn\000"
 1518      6E766572 
 1518      745C696E 
 1518      76657274 
 1518      2E637964 
 1519              	.LASF28:
 1520 014d 436C6F63 		.ascii	"Clock_2_GetModeRegister\000"
 1520      6B5F325F 
 1520      4765744D 
 1520      6F646552 
 1520      65676973 
 1521              	.LASF8:
 1522 0165 756E7369 		.ascii	"unsigned int\000"
 1522      676E6564 
 1522      20696E74 
 1522      00
 1523              	.LASF22:
 1524 0172 63757272 		.ascii	"currSrc\000"
 1524      53726300 
 1525              	.LASF7:
 1526 017a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1526      206C6F6E 
 1526      6720756E 
 1526      7369676E 
 1526      65642069 
 1527              	.LASF26:
 1528 0191 436C6F63 		.ascii	"Clock_2_ClearModeRegister\000"
 1528      6B5F325F 
 1528      436C6561 
 1528      724D6F64 
 1528      65526567 
 1529              	.LASF25:
 1530 01ab 6D6F6465 		.ascii	"modeBitMask\000"
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccFbc3tu.s 			page 38


 1530      4269744D 
 1530      61736B00 
 1531              	.LASF34:
 1532 01b7 474E5520 		.ascii	"GNU C 4.4.1\000"
 1532      4320342E 
 1532      342E3100 
 1533              	.LASF13:
 1534 01c3 63686172 		.ascii	"char\000"
 1534      00
 1535              	.LASF31:
 1536 01c8 63757272 		.ascii	"currDiv\000"
 1536      44697600 
 1537              	.LASF2:
 1538 01d0 73686F72 		.ascii	"short int\000"
 1538      7420696E 
 1538      7400
 1539              	.LASF24:
 1540 01da 436C6F63 		.ascii	"Clock_2_SetModeRegister\000"
 1540      6B5F325F 
 1540      5365744D 
 1540      6F646552 
 1540      65676973 
 1541              	.LASF9:
 1542 01f2 75696E74 		.ascii	"uint8\000"
 1542      3800
 1543              	.LASF4:
 1544 01f8 6C6F6E67 		.ascii	"long int\000"
 1544      20696E74 
 1544      00
 1545              	.LASF30:
 1546 0201 636C6B53 		.ascii	"clkSource\000"
 1546      6F757263 
 1546      6500
 1547              	.LASF0:
 1548 020b 7369676E 		.ascii	"signed char\000"
 1548      65642063 
 1548      68617200 
 1549              	.LASF27:
 1550 0217 436C6F63 		.ascii	"Clock_2_GetDividerRegister\000"
 1550      6B5F325F 
 1550      47657444 
 1550      69766964 
 1550      65725265 
 1551              	.LASF29:
 1552 0232 436C6F63 		.ascii	"Clock_2_SetSourceRegister\000"
 1552      6B5F325F 
 1552      53657453 
 1552      6F757263 
 1552      65526567 
 1553              	.LASF32:
 1554 024c 6F6C6453 		.ascii	"oldSrc\000"
 1554      726300
 1555              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
