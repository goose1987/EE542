ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ADC_SAR_I_theACLK.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 88010000 		.text
  20      02006900 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.ADC_SAR_I_theACLK_Start,"ax",%progbits
  24              		.align	2
  25              		.global	ADC_SAR_I_theACLK_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	ADC_SAR_I_theACLK_Start, %function
  29              	ADC_SAR_I_theACLK_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_I_theACLK.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * File Name: ADC_SAR_I_theACLK.c
   3:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
   8:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  10:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  17:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #include "ADC_SAR_I_theACLK.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  20:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 2


  23:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  27:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  29:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  30:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_Start
  32:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  34:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
  35:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  38:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
  39:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  40:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  41:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
  42:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  43:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  44:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_Start(void) 
  46:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     ADC_SAR_I_theACLK_CLKEN |= ADC_SAR_I_theACLK_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A133 		movw	r3, #:lower16:1073759137
  46 0008 C4F20003 		movt	r3, #:upper16:1073759137
  47 000c 44F2A132 		movw	r2, #:lower16:1073759137
  48 0010 C4F20002 		movt	r2, #:upper16:1073759137
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00102 		orr	r2, r2, #1
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 	ADC_SAR_I_theACLK_CLKSTBY |= ADC_SAR_I_theACLK_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B133 		movw	r3, #:lower16:1073759153
  56 0024 C4F20003 		movt	r3, #:upper16:1073759153
  57 0028 44F2B132 		movw	r2, #:lower16:1073759153
  58 002c C4F20002 		movt	r2, #:upper16:1073759153
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	ADC_SAR_I_theACLK_Start, .-ADC_SAR_I_theACLK_Start
  71 0042 00BF     		.section	.text.ADC_SAR_I_theACLK_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	ADC_SAR_I_theACLK_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	ADC_SAR_I_theACLK_Stop, %function
  77              	ADC_SAR_I_theACLK_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  52:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  53:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_Stop
  55:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  57:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
  58:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  64:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
  65:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  66:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  67:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
  68:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  69:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  70:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_Stop(void) 
  72:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     ADC_SAR_I_theACLK_CLKEN &= (uint8)(~ADC_SAR_I_theACLK_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A133 		movw	r3, #:lower16:1073759137
  93 0008 C4F20003 		movt	r3, #:upper16:1073759137
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 4


  94 000c 44F2A132 		movw	r2, #:lower16:1073759137
  95 0010 C4F20002 		movt	r2, #:upper16:1073759137
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FE02 		and	r2, r2, #254
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 	ADC_SAR_I_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_I_theACLK_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B133 		movw	r3, #:lower16:1073759153
 102 0022 C4F20003 		movt	r3, #:upper16:1073759153
 103 0026 44F2B132 		movw	r2, #:lower16:1073759153
 104 002a C4F20002 		movt	r2, #:upper16:1073759153
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FE02 		and	r2, r2, #254
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	ADC_SAR_I_theACLK_Stop, .-ADC_SAR_I_theACLK_Stop
 116 003e 00BF     		.section	.text.ADC_SAR_I_theACLK_StandbyPower,"ax",%progbits
 117              		.align	2
 118              		.global	ADC_SAR_I_theACLK_StandbyPower
 119              		.thumb
 120              		.thumb_func
 121              		.type	ADC_SAR_I_theACLK_StandbyPower, %function
 122              	ADC_SAR_I_theACLK_StandbyPower:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  78:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  79:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  81:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
  82:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_StopBlock
  84:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  86:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
  87:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  93:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
  94:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  95:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
  97:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
  98:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_StopBlock(void) 
 101:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 5


 102:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     if ((ADC_SAR_I_theACLK_CLKEN & ADC_SAR_I_theACLK_CLKEN_MASK) != 0u)
 103:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 104:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 107:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if defined(ADC_SAR_I_theACLK__CFG3)
 111:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_I_theACLK_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #else
 114:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_DMASK = ADC_SAR_I_theACLK_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* ADC_SAR_I_theACLK__CFG3 */
 117:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 118:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 120:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 121:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_I_theACLK_DIV_PTR);
 122:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 123:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 125:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_CLKEN &= (uint8)(~ADC_SAR_I_theACLK_CLKEN_MASK);
 131:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_I_theACLK_CLKSTBY_MASK);
 132:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 133:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CLK_DIST_LD = 0x00u;
 136:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         CY_SET_REG16(ADC_SAR_I_theACLK_DIV_PTR, oldDivider);
 137:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 139:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 140:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 142:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 143:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_StandbyPower
 145:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 147:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 148:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 150:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 151:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 153:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 154:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 155:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 156:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 6


 124              		.loc 1 158 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     if(state == 0u)
 141              		.loc 1 159 0
 142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 000c 002B     		cmp	r3, #0
 144 000e 0DD1     		bne	.L6
 160:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 161:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_I_theACLK_CLKSTBY_MASK);
 145              		.loc 1 161 0
 146 0010 44F2B133 		movw	r3, #:lower16:1073759153
 147 0014 C4F20003 		movt	r3, #:upper16:1073759153
 148 0018 44F2B132 		movw	r2, #:lower16:1073759153
 149 001c C4F20002 		movt	r2, #:upper16:1073759153
 150 0020 1278     		ldrb	r2, [r2, #0]
 151 0022 D2B2     		uxtb	r2, r2
 152 0024 02F0FE02 		and	r2, r2, #254
 153 0028 1A70     		strb	r2, [r3, #0]
 154 002a 0DE0     		b	.L8
 155              	.L6:
 162:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 163:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     else
 164:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 165:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_CLKSTBY |= ADC_SAR_I_theACLK_CLKSTBY_MASK;
 156              		.loc 1 165 0
 157 002c 44F2B133 		movw	r3, #:lower16:1073759153
 158 0030 C4F20003 		movt	r3, #:upper16:1073759153
 159 0034 44F2B132 		movw	r2, #:lower16:1073759153
 160 0038 C4F20002 		movt	r2, #:upper16:1073759153
 161 003c 1278     		ldrb	r2, [r2, #0]
 162 003e D2B2     		uxtb	r2, r2
 163 0040 42F00102 		orr	r2, r2, #1
 164 0044 D2B2     		uxtb	r2, r2
 165 0046 1A70     		strb	r2, [r3, #0]
 166              	.L8:
 166:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 167:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 167              		.loc 1 167 0
 168 0048 07F10C07 		add	r7, r7, #12
 169 004c BD46     		mov	sp, r7
 170 004e 80BC     		pop	{r7}
 171 0050 7047     		bx	lr
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 7


 172              		.cfi_endproc
 173              	.LFE2:
 174              		.size	ADC_SAR_I_theACLK_StandbyPower, .-ADC_SAR_I_theACLK_StandbyPower
 175 0052 00BF     		.section	.text.ADC_SAR_I_theACLK_SetDividerRegister,"ax",%progbits
 176              		.align	2
 177              		.global	ADC_SAR_I_theACLK_SetDividerRegister
 178              		.thumb
 179              		.thumb_func
 180              		.type	ADC_SAR_I_theACLK_SetDividerRegister, %function
 181              	ADC_SAR_I_theACLK_SetDividerRegister:
 182              	.LFB3:
 168:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 169:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 170:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_SetDividerRegister
 172:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 174:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 175:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 180:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 181:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   cycle.
 188:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 189:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 190:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 191:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 192:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                                 
 195:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 183              		.loc 1 195 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI7:
 189              		.cfi_def_cfa_offset 8
 190 0002 84B0     		sub	sp, sp, #16
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 7, -8
 196              	.LCFI9:
 197              		.cfi_def_cfa_register 7
 198 0006 0246     		mov	r2, r0
 199 0008 0B46     		mov	r3, r1
 200 000a FA80     		strh	r2, [r7, #6]	@ movhi
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 8


 201 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 198:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     uint8 currSrc = ADC_SAR_I_theACLK_GetSourceRegister();
 202              		.loc 1 198 0
 203 000e FFF7FEFF 		bl	ADC_SAR_I_theACLK_GetSourceRegister
 204 0012 0346     		mov	r3, r0
 205 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     uint16 oldDivider = ADC_SAR_I_theACLK_GetDividerRegister();
 206              		.loc 1 199 0
 207 0016 FFF7FEFF 		bl	ADC_SAR_I_theACLK_GetDividerRegister
 208 001a 0346     		mov	r3, r0
 209 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 201:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     if (clkDivider != oldDivider)
 210              		.loc 1 201 0
 211 001e FA88     		ldrh	r2, [r7, #6]
 212 0020 FB89     		ldrh	r3, [r7, #14]
 213 0022 9A42     		cmp	r2, r3
 214 0024 00F0BC80 		beq	.L21
 202:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 203:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         enabled = ADC_SAR_I_theACLK_CLKEN & ADC_SAR_I_theACLK_CLKEN_MASK;
 215              		.loc 1 203 0
 216 0028 44F2A133 		movw	r3, #:lower16:1073759137
 217 002c C4F20003 		movt	r3, #:upper16:1073759137
 218 0030 1B78     		ldrb	r3, [r3, #0]
 219 0032 DBB2     		uxtb	r3, r3
 220 0034 03F00103 		and	r3, r3, #1
 221 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 222              		.loc 1 205 0
 223 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 224 003c 002B     		cmp	r3, #0
 225 003e 31D1     		bne	.L11
 226 0040 FB89     		ldrh	r3, [r7, #14]
 227 0042 002B     		cmp	r3, #0
 228 0044 02D0     		beq	.L12
 229 0046 FB88     		ldrh	r3, [r7, #6]
 230 0048 002B     		cmp	r3, #0
 231 004a 2BD1     		bne	.L11
 232              	.L12:
 206:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         {
 207:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             if (oldDivider == 0u)
 233              		.loc 1 208 0
 234 004c FB89     		ldrh	r3, [r7, #14]
 235 004e 002B     		cmp	r3, #0
 236 0050 13D1     		bne	.L13
 209:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             {
 210:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CY_SET_REG16(ADC_SAR_I_theACLK_DIV_PTR, clkDivider);
 237              		.loc 1 213 0
 238 0052 44F20013 		movw	r3, #:lower16:1073758464
 239 0056 C4F20003 		movt	r3, #:upper16:1073758464
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 9


 240 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 241 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 ADC_SAR_I_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 242              		.loc 1 214 0
 243 005e 44F20213 		movw	r3, #:lower16:1073758466
 244 0062 C4F20003 		movt	r3, #:upper16:1073758466
 245 0066 44F20212 		movw	r2, #:lower16:1073758466
 246 006a C4F20002 		movt	r2, #:upper16:1073758466
 247 006e 1278     		ldrb	r2, [r2, #0]
 248 0070 D2B2     		uxtb	r2, r2
 249 0072 02F0BF02 		and	r2, r2, #191
 250 0076 1A70     		strb	r2, [r3, #0]
 251              		.loc 1 205 0
 252 0078 92E0     		b	.L21
 253              	.L13:
 215:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             }
 216:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             else
 217:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             {
 218:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 ADC_SAR_I_theACLK_MOD_SRC |= CYCLK_SSS;
 254              		.loc 1 220 0
 255 007a 44F20213 		movw	r3, #:lower16:1073758466
 256 007e C4F20003 		movt	r3, #:upper16:1073758466
 257 0082 44F20212 		movw	r2, #:lower16:1073758466
 258 0086 C4F20002 		movt	r2, #:upper16:1073758466
 259 008a 1278     		ldrb	r2, [r2, #0]
 260 008c D2B2     		uxtb	r2, r2
 261 008e 42F04002 		orr	r2, r2, #64
 262 0092 D2B2     		uxtb	r2, r2
 263 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CY_SET_REG16(ADC_SAR_I_theACLK_DIV_PTR, clkDivider);
 264              		.loc 1 221 0
 265 0096 44F20013 		movw	r3, #:lower16:1073758464
 266 009a C4F20003 		movt	r3, #:upper16:1073758464
 267 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 268 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 269              		.loc 1 205 0
 270 00a2 7DE0     		b	.L21
 271              	.L11:
 222:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             }
 223:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         }
 224:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         else
 225:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         {
 226:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 			
 227:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             if (enabled != 0u)
 272              		.loc 1 227 0
 273 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 274 00a6 002B     		cmp	r3, #0
 275 00a8 3BD0     		beq	.L15
 228:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             {
 229:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 276              		.loc 1 229 0
 277 00aa 44F20103 		movw	r3, #:lower16:1073758209
 278 00ae C4F20003 		movt	r3, #:upper16:1073758209
 279 00b2 4FF00002 		mov	r2, #0
 280 00b6 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 10


 230:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if defined(ADC_SAR_I_theACLK__CFG3)
 233:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_I_theACLK_CLKEN_MASK;
 281              		.loc 1 233 0
 282 00b8 44F21403 		movw	r3, #:lower16:1073758228
 283 00bc C4F20003 		movt	r3, #:upper16:1073758228
 284 00c0 4FF00102 		mov	r2, #1
 285 00c4 1A70     		strb	r2, [r3, #0]
 234:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 286              		.loc 1 234 0
 287 00c6 44F21003 		movw	r3, #:lower16:1073758224
 288 00ca C4F20003 		movt	r3, #:upper16:1073758224
 289 00ce 4FF00002 		mov	r2, #0
 290 00d2 1A70     		strb	r2, [r3, #0]
 235:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #else
 236:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_DMASK = ADC_SAR_I_theACLK_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* ADC_SAR_I_theACLK__CFG3 */
 239:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 291              		.loc 1 240 0
 292 00d4 44F20803 		movw	r3, #:lower16:1073758216
 293 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 294 00dc 44F20802 		movw	r2, #:lower16:1073758216
 295 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 296 00e4 1278     		ldrb	r2, [r2, #0]
 297 00e6 D2B2     		uxtb	r2, r2
 298 00e8 02F07F02 		and	r2, r2, #127
 299 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 242:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 if (((ADC_SAR_I_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 300              		.loc 1 243 0
 301 00ee 44F20213 		movw	r3, #:lower16:1073758466
 302 00f2 C4F20003 		movt	r3, #:upper16:1073758466
 303 00f6 1B78     		ldrb	r3, [r3, #0]
 304 00f8 DBB2     		uxtb	r3, r3
 305 00fa 03F00803 		and	r3, r3, #8
 306 00fe 002B     		cmp	r3, #0
 307 0100 02D0     		beq	.L16
 308 0102 FB88     		ldrh	r3, [r7, #6]
 309 0104 002B     		cmp	r3, #0
 310 0106 0CD1     		bne	.L15
 311              	.L16:
 244:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 {
 245:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 249:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     ADC_SAR_I_theACLK_CLKEN &= (uint8)(~ADC_SAR_I_theACLK_CLKEN_MASK);
 312              		.loc 1 253 0
 313 0108 44F2A133 		movw	r3, #:lower16:1073759137
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 11


 314 010c C4F20003 		movt	r3, #:upper16:1073759137
 315 0110 44F2A132 		movw	r2, #:lower16:1073759137
 316 0114 C4F20002 		movt	r2, #:upper16:1073759137
 317 0118 1278     		ldrb	r2, [r2, #0]
 318 011a D2B2     		uxtb	r2, r2
 319 011c 02F0FE02 		and	r2, r2, #254
 320 0120 1A70     		strb	r2, [r3, #0]
 321              	.L15:
 254:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 255:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 }
 260:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             }
 261:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 262:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             if ((ADC_SAR_I_theACLK_CLKEN & ADC_SAR_I_theACLK_CLKEN_MASK) != 0u)
 322              		.loc 1 263 0
 323 0122 44F2A133 		movw	r3, #:lower16:1073759137
 324 0126 C4F20003 		movt	r3, #:upper16:1073759137
 325 012a 1B78     		ldrb	r3, [r3, #0]
 326 012c DBB2     		uxtb	r3, r3
 327 012e 03F00103 		and	r3, r3, #1
 328 0132 DBB2     		uxtb	r3, r3
 329 0134 002B     		cmp	r3, #0
 330 0136 1ED0     		beq	.L17
 264:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             {
 265:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 331              		.loc 1 266 0
 332 0138 44F20203 		movw	r3, #:lower16:1073758210
 333 013c C4F20003 		movt	r3, #:upper16:1073758210
 334 0140 FA88     		ldrh	r2, [r7, #6]	@ movhi
 335 0142 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 336              		.loc 1 268 0
 337 0144 44F20103 		movw	r3, #:lower16:1073758209
 338 0148 C4F20003 		movt	r3, #:upper16:1073758209
 339 014c 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 340 014e 002A     		cmp	r2, #0
 341 0150 02D0     		beq	.L18
 342 0152 4FF00302 		mov	r2, #3
 343 0156 01E0     		b	.L19
 344              	.L18:
 345 0158 4FF00102 		mov	r2, #1
 346              	.L19:
 347 015c 1A70     		strb	r2, [r3, #0]
 348              	.L20:
 269:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 349              		.loc 1 269 0
 350 015e 44F20103 		movw	r3, #:lower16:1073758209
 351 0162 C4F20003 		movt	r3, #:upper16:1073758209
 352 0166 1B78     		ldrb	r3, [r3, #0]
 353 0168 DBB2     		uxtb	r3, r3
 354 016a 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 12


 355 016e DBB2     		uxtb	r3, r3
 356 0170 002B     		cmp	r3, #0
 357 0172 F4D1     		bne	.L20
 358 0174 14E0     		b	.L21
 359              	.L17:
 270:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             }
 271:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             else
 272:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             {
 273:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****                 CY_SET_REG16(ADC_SAR_I_theACLK_DIV_PTR, clkDivider);
 360              		.loc 1 274 0
 361 0176 44F20013 		movw	r3, #:lower16:1073758464
 362 017a C4F20003 		movt	r3, #:upper16:1073758464
 363 017e FA88     		ldrh	r2, [r7, #6]	@ movhi
 364 0180 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 				ADC_SAR_I_theACLK_CLKEN |= enabled;
 365              		.loc 1 275 0
 366 0182 44F2A133 		movw	r3, #:lower16:1073759137
 367 0186 C4F20003 		movt	r3, #:upper16:1073759137
 368 018a 44F2A132 		movw	r2, #:lower16:1073759137
 369 018e C4F20002 		movt	r2, #:upper16:1073759137
 370 0192 1278     		ldrb	r2, [r2, #0]
 371 0194 D1B2     		uxtb	r1, r2
 372 0196 3A7B     		ldrb	r2, [r7, #12]
 373 0198 41EA0202 		orr	r2, r1, r2
 374 019c D2B2     		uxtb	r2, r2
 375 019e 1A70     		strb	r2, [r3, #0]
 376              	.L21:
 276:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             }
 277:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         }
 278:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 279:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 377              		.loc 1 279 0
 378 01a0 07F11007 		add	r7, r7, #16
 379 01a4 BD46     		mov	sp, r7
 380 01a6 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	ADC_SAR_I_theACLK_SetDividerRegister, .-ADC_SAR_I_theACLK_SetDividerRegister
 384              		.section	.text.ADC_SAR_I_theACLK_GetDividerRegister,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_SAR_I_theACLK_GetDividerRegister
 387              		.thumb
 388              		.thumb_func
 389              		.type	ADC_SAR_I_theACLK_GetDividerRegister, %function
 390              	ADC_SAR_I_theACLK_GetDividerRegister:
 391              	.LFB4:
 280:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 281:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 282:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_GetDividerRegister
 284:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 287:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 13


 290:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 291:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 292:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 293:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 296:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** uint16 ADC_SAR_I_theACLK_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 392              		.loc 1 298 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              	.LCFI10:
 399              		.cfi_def_cfa_offset 4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_offset 7, -4
 402              	.LCFI11:
 403              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     return CY_GET_REG16(ADC_SAR_I_theACLK_DIV_PTR);
 404              		.loc 1 299 0
 405 0004 44F20013 		movw	r3, #:lower16:1073758464
 406 0008 C4F20003 		movt	r3, #:upper16:1073758464
 407 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 408 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 409              		.loc 1 300 0
 410 0010 1846     		mov	r0, r3
 411 0012 BD46     		mov	sp, r7
 412 0014 80BC     		pop	{r7}
 413 0016 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE4:
 416              		.size	ADC_SAR_I_theACLK_GetDividerRegister, .-ADC_SAR_I_theACLK_GetDividerRegister
 417              		.section	.text.ADC_SAR_I_theACLK_SetModeRegister,"ax",%progbits
 418              		.align	2
 419              		.global	ADC_SAR_I_theACLK_SetModeRegister
 420              		.thumb
 421              		.thumb_func
 422              		.type	ADC_SAR_I_theACLK_SetModeRegister, %function
 423              	ADC_SAR_I_theACLK_SetModeRegister:
 424              	.LFB5:
 301:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 302:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_SetModeRegister
 305:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 307:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 308:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 313:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 14


 314:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 value.
 319:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 328:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 329:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 330:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 331:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 425              		.loc 1 333 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI12:
 432              		.cfi_def_cfa_offset 4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI13:
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_offset 7, -4
 438              	.LCFI14:
 439              		.cfi_def_cfa_register 7
 440 0006 0346     		mov	r3, r0
 441 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     ADC_SAR_I_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_I_theACLK_MODE_MASK;
 442              		.loc 1 334 0
 443 000a 44F20213 		movw	r3, #:lower16:1073758466
 444 000e C4F20003 		movt	r3, #:upper16:1073758466
 445 0012 44F20212 		movw	r2, #:lower16:1073758466
 446 0016 C4F20002 		movt	r2, #:upper16:1073758466
 447 001a 1278     		ldrb	r2, [r2, #0]
 448 001c D2B2     		uxtb	r2, r2
 449 001e 1146     		mov	r1, r2
 450 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 451 0022 D2B2     		uxtb	r2, r2
 452 0024 02F0F802 		and	r2, r2, #248
 453 0028 41EA0202 		orr	r2, r1, r2
 454 002c D2B2     		uxtb	r2, r2
 455 002e D2B2     		uxtb	r2, r2
 456 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 457              		.loc 1 335 0
 458 0032 07F10C07 		add	r7, r7, #12
 459 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 15


 460 0038 80BC     		pop	{r7}
 461 003a 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE5:
 464              		.size	ADC_SAR_I_theACLK_SetModeRegister, .-ADC_SAR_I_theACLK_SetModeRegister
 465              		.section	.text.ADC_SAR_I_theACLK_ClearModeRegister,"ax",%progbits
 466              		.align	2
 467              		.global	ADC_SAR_I_theACLK_ClearModeRegister
 468              		.thumb
 469              		.thumb_func
 470              		.type	ADC_SAR_I_theACLK_ClearModeRegister, %function
 471              	ADC_SAR_I_theACLK_ClearModeRegister:
 472              	.LFB6:
 336:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 337:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 338:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_ClearModeRegister
 340:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 342:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 343:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 348:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 349:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 value.
 354:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 363:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 365:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 366:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 473              		.loc 1 368 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI15:
 480              		.cfi_def_cfa_offset 4
 481 0002 83B0     		sub	sp, sp, #12
 482              	.LCFI16:
 483              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 16


 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_offset 7, -4
 486              	.LCFI17:
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     ADC_SAR_I_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_I_theACLK_MODE_MA
 490              		.loc 1 369 0
 491 000a 44F20213 		movw	r3, #:lower16:1073758466
 492 000e C4F20003 		movt	r3, #:upper16:1073758466
 493 0012 44F20212 		movw	r2, #:lower16:1073758466
 494 0016 C4F20002 		movt	r2, #:upper16:1073758466
 495 001a 1278     		ldrb	r2, [r2, #0]
 496 001c D1B2     		uxtb	r1, r2
 497 001e FA79     		ldrb	r2, [r7, #7]
 498 0020 6FEA0202 		mvn	r2, r2
 499 0024 D2B2     		uxtb	r2, r2
 500 0026 42F00702 		orr	r2, r2, #7
 501 002a D2B2     		uxtb	r2, r2
 502 002c 01EA0202 		and	r2, r1, r2
 503 0030 D2B2     		uxtb	r2, r2
 504 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 505              		.loc 1 370 0
 506 0034 07F10C07 		add	r7, r7, #12
 507 0038 BD46     		mov	sp, r7
 508 003a 80BC     		pop	{r7}
 509 003c 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE6:
 512              		.size	ADC_SAR_I_theACLK_ClearModeRegister, .-ADC_SAR_I_theACLK_ClearModeRegister
 513 003e 00BF     		.section	.text.ADC_SAR_I_theACLK_GetModeRegister,"ax",%progbits
 514              		.align	2
 515              		.global	ADC_SAR_I_theACLK_GetModeRegister
 516              		.thumb
 517              		.thumb_func
 518              		.type	ADC_SAR_I_theACLK_GetModeRegister, %function
 519              	ADC_SAR_I_theACLK_GetModeRegister:
 520              	.LFB7:
 371:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 373:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_GetModeRegister
 375:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 377:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 380:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 381:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 382:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 383:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 384:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 387:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** uint8 ADC_SAR_I_theACLK_GetModeRegister(void) 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 17


 389:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 521              		.loc 1 389 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI18:
 528              		.cfi_def_cfa_offset 4
 529 0002 00AF     		add	r7, sp, #0
 530              		.cfi_offset 7, -4
 531              	.LCFI19:
 532              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     return ADC_SAR_I_theACLK_MOD_SRC & (uint8)(ADC_SAR_I_theACLK_MODE_MASK);
 533              		.loc 1 390 0
 534 0004 44F20213 		movw	r3, #:lower16:1073758466
 535 0008 C4F20003 		movt	r3, #:upper16:1073758466
 536 000c 1B78     		ldrb	r3, [r3, #0]
 537 000e DBB2     		uxtb	r3, r3
 538 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 539              		.loc 1 391 0
 540 0014 1846     		mov	r0, r3
 541 0016 BD46     		mov	sp, r7
 542 0018 80BC     		pop	{r7}
 543 001a 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE7:
 546              		.size	ADC_SAR_I_theACLK_GetModeRegister, .-ADC_SAR_I_theACLK_GetModeRegister
 547              		.section	.text.ADC_SAR_I_theACLK_SetSourceRegister,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_SAR_I_theACLK_SetSourceRegister
 550              		.thumb
 551              		.thumb_func
 552              		.type	ADC_SAR_I_theACLK_SetSourceRegister, %function
 553              	ADC_SAR_I_theACLK_SetSourceRegister:
 554              	.LFB8:
 392:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 393:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 394:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_SetSourceRegister
 396:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 398:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 399:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 402:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 403:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_G
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 18


 412:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 415:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 416:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 417:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 418:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 555              		.loc 1 420 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              	.LCFI20:
 561              		.cfi_def_cfa_offset 8
 562 0002 84B0     		sub	sp, sp, #16
 563              	.LCFI21:
 564              		.cfi_def_cfa_offset 24
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_offset 14, -4
 567              		.cfi_offset 7, -8
 568              	.LCFI22:
 569              		.cfi_def_cfa_register 7
 570 0006 0346     		mov	r3, r0
 571 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     uint16 currDiv = ADC_SAR_I_theACLK_GetDividerRegister();
 572              		.loc 1 421 0
 573 000a FFF7FEFF 		bl	ADC_SAR_I_theACLK_GetDividerRegister
 574 000e 0346     		mov	r3, r0
 575 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     uint8 oldSrc = ADC_SAR_I_theACLK_GetSourceRegister();
 576              		.loc 1 422 0
 577 0012 FFF7FEFF 		bl	ADC_SAR_I_theACLK_GetSourceRegister
 578 0016 0346     		mov	r3, r0
 579 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 424:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 580              		.loc 1 424 0
 581 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 582 001c 002B     		cmp	r3, #0
 583 001e 29D0     		beq	.L31
 584 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 585 0022 002B     		cmp	r3, #0
 586 0024 26D1     		bne	.L31
 587 0026 BB89     		ldrh	r3, [r7, #12]
 588 0028 002B     		cmp	r3, #0
 589 002a 23D1     		bne	.L31
 425:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 427:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_MOD_SRC |= CYCLK_SSS;
 590              		.loc 1 429 0
 591 002c 44F20213 		movw	r3, #:lower16:1073758466
 592 0030 C4F20003 		movt	r3, #:upper16:1073758466
 593 0034 44F20212 		movw	r2, #:lower16:1073758466
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 19


 594 0038 C4F20002 		movt	r2, #:upper16:1073758466
 595 003c 1278     		ldrb	r2, [r2, #0]
 596 003e D2B2     		uxtb	r2, r2
 597 0040 42F04002 		orr	r2, r2, #64
 598 0044 D2B2     		uxtb	r2, r2
 599 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_MOD_SRC =
 600              		.loc 1 430 0
 601 0048 44F20213 		movw	r3, #:lower16:1073758466
 602 004c C4F20003 		movt	r3, #:upper16:1073758466
 431:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             (ADC_SAR_I_theACLK_MOD_SRC & (uint8)(~ADC_SAR_I_theACLK_SRC_SEL_MSK)) | clkSource;
 603              		.loc 1 431 0
 604 0050 44F20212 		movw	r2, #:lower16:1073758466
 605 0054 C4F20002 		movt	r2, #:upper16:1073758466
 606 0058 1278     		ldrb	r2, [r2, #0]
 607 005a D2B2     		uxtb	r2, r2
 608              		.loc 1 430 0
 609 005c D2B2     		uxtb	r2, r2
 610 005e 02F0F802 		and	r2, r2, #248
 611 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 612 0064 1146     		mov	r1, r2
 613 0066 0246     		mov	r2, r0
 614 0068 41EA0202 		orr	r2, r1, r2
 615 006c D2B2     		uxtb	r2, r2
 616 006e D2B2     		uxtb	r2, r2
 617 0070 1A70     		strb	r2, [r3, #0]
 618              		.loc 1 424 0
 619 0072 40E0     		b	.L34
 620              	.L31:
 432:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 433:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 621              		.loc 1 433 0
 622 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 623 0076 002B     		cmp	r3, #0
 624 0078 28D1     		bne	.L33
 625 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 626 007c 002B     		cmp	r3, #0
 627 007e 25D0     		beq	.L33
 628 0080 BB89     		ldrh	r3, [r7, #12]
 629 0082 002B     		cmp	r3, #0
 630 0084 22D1     		bne	.L33
 434:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 436:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_MOD_SRC =
 631              		.loc 1 438 0
 632 0086 44F20213 		movw	r3, #:lower16:1073758466
 633 008a C4F20003 		movt	r3, #:upper16:1073758466
 439:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             (ADC_SAR_I_theACLK_MOD_SRC & (uint8)(~ADC_SAR_I_theACLK_SRC_SEL_MSK)) | clkSource;
 634              		.loc 1 439 0
 635 008e 44F20212 		movw	r2, #:lower16:1073758466
 636 0092 C4F20002 		movt	r2, #:upper16:1073758466
 637 0096 1278     		ldrb	r2, [r2, #0]
 638 0098 D2B2     		uxtb	r2, r2
 639              		.loc 1 438 0
 640 009a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 20


 641 009c 02F0F802 		and	r2, r2, #248
 642 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 643 00a2 1146     		mov	r1, r2
 644 00a4 0246     		mov	r2, r0
 645 00a6 41EA0202 		orr	r2, r1, r2
 646 00aa D2B2     		uxtb	r2, r2
 647 00ac D2B2     		uxtb	r2, r2
 648 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 649              		.loc 1 440 0
 650 00b0 44F20213 		movw	r3, #:lower16:1073758466
 651 00b4 C4F20003 		movt	r3, #:upper16:1073758466
 652 00b8 44F20212 		movw	r2, #:lower16:1073758466
 653 00bc C4F20002 		movt	r2, #:upper16:1073758466
 654 00c0 1278     		ldrb	r2, [r2, #0]
 655 00c2 D2B2     		uxtb	r2, r2
 656 00c4 02F0BF02 		and	r2, r2, #191
 657 00c8 1A70     		strb	r2, [r3, #0]
 658              		.loc 1 433 0
 659 00ca 14E0     		b	.L34
 660              	.L33:
 441:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 442:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     else
 443:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     {
 444:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****         ADC_SAR_I_theACLK_MOD_SRC =
 661              		.loc 1 444 0
 662 00cc 44F20213 		movw	r3, #:lower16:1073758466
 663 00d0 C4F20003 		movt	r3, #:upper16:1073758466
 445:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****             (ADC_SAR_I_theACLK_MOD_SRC & (uint8)(~ADC_SAR_I_theACLK_SRC_SEL_MSK)) | clkSource;
 664              		.loc 1 445 0
 665 00d4 44F20212 		movw	r2, #:lower16:1073758466
 666 00d8 C4F20002 		movt	r2, #:upper16:1073758466
 667 00dc 1278     		ldrb	r2, [r2, #0]
 668 00de D2B2     		uxtb	r2, r2
 669              		.loc 1 444 0
 670 00e0 D2B2     		uxtb	r2, r2
 671 00e2 02F0F802 		and	r2, r2, #248
 672 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 673 00e8 1146     		mov	r1, r2
 674 00ea 0246     		mov	r2, r0
 675 00ec 41EA0202 		orr	r2, r1, r2
 676 00f0 D2B2     		uxtb	r2, r2
 677 00f2 D2B2     		uxtb	r2, r2
 678 00f4 1A70     		strb	r2, [r3, #0]
 679              	.L34:
 446:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     }
 447:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 680              		.loc 1 447 0
 681 00f6 07F11007 		add	r7, r7, #16
 682 00fa BD46     		mov	sp, r7
 683 00fc 80BD     		pop	{r7, pc}
 684              		.cfi_endproc
 685              	.LFE8:
 686              		.size	ADC_SAR_I_theACLK_SetSourceRegister, .-ADC_SAR_I_theACLK_SetSourceRegister
 687 00fe 00BF     		.section	.text.ADC_SAR_I_theACLK_GetSourceRegister,"ax",%progbits
 688              		.align	2
 689              		.global	ADC_SAR_I_theACLK_GetSourceRegister
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 21


 690              		.thumb
 691              		.thumb_func
 692              		.type	ADC_SAR_I_theACLK_GetSourceRegister, %function
 693              	ADC_SAR_I_theACLK_GetSourceRegister:
 694              	.LFB9:
 448:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_GetSourceRegister
 452:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 457:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 458:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 459:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 460:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 461:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 463:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** uint8 ADC_SAR_I_theACLK_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 695              		.loc 1 465 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              	.LCFI23:
 702              		.cfi_def_cfa_offset 4
 703 0002 00AF     		add	r7, sp, #0
 704              		.cfi_offset 7, -4
 705              	.LCFI24:
 706              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     return ADC_SAR_I_theACLK_MOD_SRC & ADC_SAR_I_theACLK_SRC_SEL_MSK;
 707              		.loc 1 466 0
 708 0004 44F20213 		movw	r3, #:lower16:1073758466
 709 0008 C4F20003 		movt	r3, #:upper16:1073758466
 710 000c 1B78     		ldrb	r3, [r3, #0]
 711 000e DBB2     		uxtb	r3, r3
 712 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 713              		.loc 1 467 0
 714 0014 1846     		mov	r0, r3
 715 0016 BD46     		mov	sp, r7
 716 0018 80BC     		pop	{r7}
 717 001a 7047     		bx	lr
 718              		.cfi_endproc
 719              	.LFE9:
 720              		.size	ADC_SAR_I_theACLK_GetSourceRegister, .-ADC_SAR_I_theACLK_GetSourceRegister
 721              		.section	.text.ADC_SAR_I_theACLK_SetPhaseRegister,"ax",%progbits
 722              		.align	2
 723              		.global	ADC_SAR_I_theACLK_SetPhaseRegister
 724              		.thumb
 725              		.thumb_func
 726              		.type	ADC_SAR_I_theACLK_SetPhaseRegister, %function
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 22


 727              	ADC_SAR_I_theACLK_SetPhaseRegister:
 728              	.LFB10:
 468:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 469:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 470:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** #if defined(ADC_SAR_I_theACLK__CFG3)
 471:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 472:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 473:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_SetPhaseRegister
 475:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 477:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 478:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 482:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 483:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 488:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 489:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 490:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 491:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 492:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** void ADC_SAR_I_theACLK_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 729              		.loc 1 493 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 8
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734 0000 80B4     		push	{r7}
 735              	.LCFI25:
 736              		.cfi_def_cfa_offset 4
 737 0002 83B0     		sub	sp, sp, #12
 738              	.LCFI26:
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              		.cfi_offset 7, -4
 742              	.LCFI27:
 743              		.cfi_def_cfa_register 7
 744 0006 0346     		mov	r3, r0
 745 0008 FB71     		strb	r3, [r7, #7]
 494:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     ADC_SAR_I_theACLK_PHASE = clkPhase & ADC_SAR_I_theACLK_PHASE_MASK;
 746              		.loc 1 494 0
 747 000a 44F20313 		movw	r3, #:lower16:1073758467
 748 000e C4F20003 		movt	r3, #:upper16:1073758467
 749 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 750 0014 02F00F02 		and	r2, r2, #15
 751 0018 1A70     		strb	r2, [r3, #0]
 495:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 752              		.loc 1 495 0
 753 001a 07F10C07 		add	r7, r7, #12
 754 001e BD46     		mov	sp, r7
 755 0020 80BC     		pop	{r7}
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 23


 756 0022 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE10:
 759              		.size	ADC_SAR_I_theACLK_SetPhaseRegister, .-ADC_SAR_I_theACLK_SetPhaseRegister
 760              		.section	.text.ADC_SAR_I_theACLK_GetPhaseRegister,"ax",%progbits
 761              		.align	2
 762              		.global	ADC_SAR_I_theACLK_GetPhaseRegister
 763              		.thumb
 764              		.thumb_func
 765              		.type	ADC_SAR_I_theACLK_GetPhaseRegister, %function
 766              	ADC_SAR_I_theACLK_GetPhaseRegister:
 767              	.LFB11:
 496:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 497:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** 
 498:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Function Name: ADC_SAR_I_theACLK_GetPhase
 500:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 502:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Summary:
 503:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  None
 508:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** * Returns:
 510:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** uint8 ADC_SAR_I_theACLK_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** {
 768              		.loc 1 514 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773 0000 80B4     		push	{r7}
 774              	.LCFI28:
 775              		.cfi_def_cfa_offset 4
 776 0002 00AF     		add	r7, sp, #0
 777              		.cfi_offset 7, -4
 778              	.LCFI29:
 779              		.cfi_def_cfa_register 7
 515:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c ****     return ADC_SAR_I_theACLK_PHASE & ADC_SAR_I_theACLK_PHASE_MASK;
 780              		.loc 1 515 0
 781 0004 44F20313 		movw	r3, #:lower16:1073758467
 782 0008 C4F20003 		movt	r3, #:upper16:1073758467
 783 000c 1B78     		ldrb	r3, [r3, #0]
 784 000e DBB2     		uxtb	r3, r3
 785 0010 03F00F03 		and	r3, r3, #15
 516:.\Generated_Source\PSoC5/ADC_SAR_I_theACLK.c **** }
 786              		.loc 1 516 0
 787 0014 1846     		mov	r0, r3
 788 0016 BD46     		mov	sp, r7
 789 0018 80BC     		pop	{r7}
 790 001a 7047     		bx	lr
 791              		.cfi_endproc
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 24


 792              	.LFE11:
 793              		.size	ADC_SAR_I_theACLK_GetPhaseRegister, .-ADC_SAR_I_theACLK_GetPhaseRegister
 794              		.text
 795              	.Letext0:
 796              		.section	.debug_loc,"",%progbits
 797              	.Ldebug_loc0:
 798              	.LLST0:
 799 0000 00000000 		.4byte	.LFB0
 800 0004 02000000 		.4byte	.LCFI0
 801 0008 0100     		.2byte	0x1
 802 000a 5D       		.byte	0x5d
 803 000b 02000000 		.4byte	.LCFI0
 804 000f 04000000 		.4byte	.LCFI1
 805 0013 0200     		.2byte	0x2
 806 0015 7D       		.byte	0x7d
 807 0016 04       		.sleb128 4
 808 0017 04000000 		.4byte	.LCFI1
 809 001b 42000000 		.4byte	.LFE0
 810 001f 0200     		.2byte	0x2
 811 0021 77       		.byte	0x77
 812 0022 04       		.sleb128 4
 813 0023 00000000 		.4byte	0x0
 814 0027 00000000 		.4byte	0x0
 815              	.LLST1:
 816 002b 00000000 		.4byte	.LFB1
 817 002f 02000000 		.4byte	.LCFI2
 818 0033 0100     		.2byte	0x1
 819 0035 5D       		.byte	0x5d
 820 0036 02000000 		.4byte	.LCFI2
 821 003a 04000000 		.4byte	.LCFI3
 822 003e 0200     		.2byte	0x2
 823 0040 7D       		.byte	0x7d
 824 0041 04       		.sleb128 4
 825 0042 04000000 		.4byte	.LCFI3
 826 0046 3E000000 		.4byte	.LFE1
 827 004a 0200     		.2byte	0x2
 828 004c 77       		.byte	0x77
 829 004d 04       		.sleb128 4
 830 004e 00000000 		.4byte	0x0
 831 0052 00000000 		.4byte	0x0
 832              	.LLST2:
 833 0056 00000000 		.4byte	.LFB2
 834 005a 02000000 		.4byte	.LCFI4
 835 005e 0100     		.2byte	0x1
 836 0060 5D       		.byte	0x5d
 837 0061 02000000 		.4byte	.LCFI4
 838 0065 04000000 		.4byte	.LCFI5
 839 0069 0200     		.2byte	0x2
 840 006b 7D       		.byte	0x7d
 841 006c 04       		.sleb128 4
 842 006d 04000000 		.4byte	.LCFI5
 843 0071 06000000 		.4byte	.LCFI6
 844 0075 0200     		.2byte	0x2
 845 0077 7D       		.byte	0x7d
 846 0078 10       		.sleb128 16
 847 0079 06000000 		.4byte	.LCFI6
 848 007d 52000000 		.4byte	.LFE2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 25


 849 0081 0200     		.2byte	0x2
 850 0083 77       		.byte	0x77
 851 0084 10       		.sleb128 16
 852 0085 00000000 		.4byte	0x0
 853 0089 00000000 		.4byte	0x0
 854              	.LLST3:
 855 008d 00000000 		.4byte	.LFB3
 856 0091 02000000 		.4byte	.LCFI7
 857 0095 0100     		.2byte	0x1
 858 0097 5D       		.byte	0x5d
 859 0098 02000000 		.4byte	.LCFI7
 860 009c 04000000 		.4byte	.LCFI8
 861 00a0 0200     		.2byte	0x2
 862 00a2 7D       		.byte	0x7d
 863 00a3 08       		.sleb128 8
 864 00a4 04000000 		.4byte	.LCFI8
 865 00a8 06000000 		.4byte	.LCFI9
 866 00ac 0200     		.2byte	0x2
 867 00ae 7D       		.byte	0x7d
 868 00af 18       		.sleb128 24
 869 00b0 06000000 		.4byte	.LCFI9
 870 00b4 A8010000 		.4byte	.LFE3
 871 00b8 0200     		.2byte	0x2
 872 00ba 77       		.byte	0x77
 873 00bb 18       		.sleb128 24
 874 00bc 00000000 		.4byte	0x0
 875 00c0 00000000 		.4byte	0x0
 876              	.LLST4:
 877 00c4 00000000 		.4byte	.LFB4
 878 00c8 02000000 		.4byte	.LCFI10
 879 00cc 0100     		.2byte	0x1
 880 00ce 5D       		.byte	0x5d
 881 00cf 02000000 		.4byte	.LCFI10
 882 00d3 04000000 		.4byte	.LCFI11
 883 00d7 0200     		.2byte	0x2
 884 00d9 7D       		.byte	0x7d
 885 00da 04       		.sleb128 4
 886 00db 04000000 		.4byte	.LCFI11
 887 00df 18000000 		.4byte	.LFE4
 888 00e3 0200     		.2byte	0x2
 889 00e5 77       		.byte	0x77
 890 00e6 04       		.sleb128 4
 891 00e7 00000000 		.4byte	0x0
 892 00eb 00000000 		.4byte	0x0
 893              	.LLST5:
 894 00ef 00000000 		.4byte	.LFB5
 895 00f3 02000000 		.4byte	.LCFI12
 896 00f7 0100     		.2byte	0x1
 897 00f9 5D       		.byte	0x5d
 898 00fa 02000000 		.4byte	.LCFI12
 899 00fe 04000000 		.4byte	.LCFI13
 900 0102 0200     		.2byte	0x2
 901 0104 7D       		.byte	0x7d
 902 0105 04       		.sleb128 4
 903 0106 04000000 		.4byte	.LCFI13
 904 010a 06000000 		.4byte	.LCFI14
 905 010e 0200     		.2byte	0x2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 26


 906 0110 7D       		.byte	0x7d
 907 0111 10       		.sleb128 16
 908 0112 06000000 		.4byte	.LCFI14
 909 0116 3C000000 		.4byte	.LFE5
 910 011a 0200     		.2byte	0x2
 911 011c 77       		.byte	0x77
 912 011d 10       		.sleb128 16
 913 011e 00000000 		.4byte	0x0
 914 0122 00000000 		.4byte	0x0
 915              	.LLST6:
 916 0126 00000000 		.4byte	.LFB6
 917 012a 02000000 		.4byte	.LCFI15
 918 012e 0100     		.2byte	0x1
 919 0130 5D       		.byte	0x5d
 920 0131 02000000 		.4byte	.LCFI15
 921 0135 04000000 		.4byte	.LCFI16
 922 0139 0200     		.2byte	0x2
 923 013b 7D       		.byte	0x7d
 924 013c 04       		.sleb128 4
 925 013d 04000000 		.4byte	.LCFI16
 926 0141 06000000 		.4byte	.LCFI17
 927 0145 0200     		.2byte	0x2
 928 0147 7D       		.byte	0x7d
 929 0148 10       		.sleb128 16
 930 0149 06000000 		.4byte	.LCFI17
 931 014d 3E000000 		.4byte	.LFE6
 932 0151 0200     		.2byte	0x2
 933 0153 77       		.byte	0x77
 934 0154 10       		.sleb128 16
 935 0155 00000000 		.4byte	0x0
 936 0159 00000000 		.4byte	0x0
 937              	.LLST7:
 938 015d 00000000 		.4byte	.LFB7
 939 0161 02000000 		.4byte	.LCFI18
 940 0165 0100     		.2byte	0x1
 941 0167 5D       		.byte	0x5d
 942 0168 02000000 		.4byte	.LCFI18
 943 016c 04000000 		.4byte	.LCFI19
 944 0170 0200     		.2byte	0x2
 945 0172 7D       		.byte	0x7d
 946 0173 04       		.sleb128 4
 947 0174 04000000 		.4byte	.LCFI19
 948 0178 1C000000 		.4byte	.LFE7
 949 017c 0200     		.2byte	0x2
 950 017e 77       		.byte	0x77
 951 017f 04       		.sleb128 4
 952 0180 00000000 		.4byte	0x0
 953 0184 00000000 		.4byte	0x0
 954              	.LLST8:
 955 0188 00000000 		.4byte	.LFB8
 956 018c 02000000 		.4byte	.LCFI20
 957 0190 0100     		.2byte	0x1
 958 0192 5D       		.byte	0x5d
 959 0193 02000000 		.4byte	.LCFI20
 960 0197 04000000 		.4byte	.LCFI21
 961 019b 0200     		.2byte	0x2
 962 019d 7D       		.byte	0x7d
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 27


 963 019e 08       		.sleb128 8
 964 019f 04000000 		.4byte	.LCFI21
 965 01a3 06000000 		.4byte	.LCFI22
 966 01a7 0200     		.2byte	0x2
 967 01a9 7D       		.byte	0x7d
 968 01aa 18       		.sleb128 24
 969 01ab 06000000 		.4byte	.LCFI22
 970 01af FE000000 		.4byte	.LFE8
 971 01b3 0200     		.2byte	0x2
 972 01b5 77       		.byte	0x77
 973 01b6 18       		.sleb128 24
 974 01b7 00000000 		.4byte	0x0
 975 01bb 00000000 		.4byte	0x0
 976              	.LLST9:
 977 01bf 00000000 		.4byte	.LFB9
 978 01c3 02000000 		.4byte	.LCFI23
 979 01c7 0100     		.2byte	0x1
 980 01c9 5D       		.byte	0x5d
 981 01ca 02000000 		.4byte	.LCFI23
 982 01ce 04000000 		.4byte	.LCFI24
 983 01d2 0200     		.2byte	0x2
 984 01d4 7D       		.byte	0x7d
 985 01d5 04       		.sleb128 4
 986 01d6 04000000 		.4byte	.LCFI24
 987 01da 1C000000 		.4byte	.LFE9
 988 01de 0200     		.2byte	0x2
 989 01e0 77       		.byte	0x77
 990 01e1 04       		.sleb128 4
 991 01e2 00000000 		.4byte	0x0
 992 01e6 00000000 		.4byte	0x0
 993              	.LLST10:
 994 01ea 00000000 		.4byte	.LFB10
 995 01ee 02000000 		.4byte	.LCFI25
 996 01f2 0100     		.2byte	0x1
 997 01f4 5D       		.byte	0x5d
 998 01f5 02000000 		.4byte	.LCFI25
 999 01f9 04000000 		.4byte	.LCFI26
 1000 01fd 0200     		.2byte	0x2
 1001 01ff 7D       		.byte	0x7d
 1002 0200 04       		.sleb128 4
 1003 0201 04000000 		.4byte	.LCFI26
 1004 0205 06000000 		.4byte	.LCFI27
 1005 0209 0200     		.2byte	0x2
 1006 020b 7D       		.byte	0x7d
 1007 020c 10       		.sleb128 16
 1008 020d 06000000 		.4byte	.LCFI27
 1009 0211 24000000 		.4byte	.LFE10
 1010 0215 0200     		.2byte	0x2
 1011 0217 77       		.byte	0x77
 1012 0218 10       		.sleb128 16
 1013 0219 00000000 		.4byte	0x0
 1014 021d 00000000 		.4byte	0x0
 1015              	.LLST11:
 1016 0221 00000000 		.4byte	.LFB11
 1017 0225 02000000 		.4byte	.LCFI28
 1018 0229 0100     		.2byte	0x1
 1019 022b 5D       		.byte	0x5d
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 28


 1020 022c 02000000 		.4byte	.LCFI28
 1021 0230 04000000 		.4byte	.LCFI29
 1022 0234 0200     		.2byte	0x2
 1023 0236 7D       		.byte	0x7d
 1024 0237 04       		.sleb128 4
 1025 0238 04000000 		.4byte	.LCFI29
 1026 023c 1C000000 		.4byte	.LFE11
 1027 0240 0200     		.2byte	0x2
 1028 0242 77       		.byte	0x77
 1029 0243 04       		.sleb128 4
 1030 0244 00000000 		.4byte	0x0
 1031 0248 00000000 		.4byte	0x0
 1032              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1033              		.section	.debug_info
 1034 0000 77020000 		.4byte	0x277
 1035 0004 0200     		.2byte	0x2
 1036 0006 00000000 		.4byte	.Ldebug_abbrev0
 1037 000a 04       		.byte	0x4
 1038 000b 01       		.uleb128 0x1
 1039 000c 34020000 		.4byte	.LASF37
 1040 0010 01       		.byte	0x1
 1041 0011 6F000000 		.4byte	.LASF38
 1042 0015 96010000 		.4byte	.LASF39
 1043 0019 00000000 		.4byte	0x0
 1044 001d 00000000 		.4byte	0x0
 1045 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1046 0025 00000000 		.4byte	.Ldebug_line0
 1047 0029 02       		.uleb128 0x2
 1048 002a 01       		.byte	0x1
 1049 002b 06       		.byte	0x6
 1050 002c C0020000 		.4byte	.LASF0
 1051 0030 02       		.uleb128 0x2
 1052 0031 01       		.byte	0x1
 1053 0032 08       		.byte	0x8
 1054 0033 FF000000 		.4byte	.LASF1
 1055 0037 02       		.uleb128 0x2
 1056 0038 02       		.byte	0x2
 1057 0039 05       		.byte	0x5
 1058 003a 4D020000 		.4byte	.LASF2
 1059 003e 02       		.uleb128 0x2
 1060 003f 02       		.byte	0x2
 1061 0040 07       		.byte	0x7
 1062 0041 27010000 		.4byte	.LASF3
 1063 0045 02       		.uleb128 0x2
 1064 0046 04       		.byte	0x4
 1065 0047 05       		.byte	0x5
 1066 0048 A4020000 		.4byte	.LASF4
 1067 004c 02       		.uleb128 0x2
 1068 004d 04       		.byte	0x4
 1069 004e 07       		.byte	0x7
 1070 004f 15010000 		.4byte	.LASF5
 1071 0053 02       		.uleb128 0x2
 1072 0054 08       		.byte	0x8
 1073 0055 05       		.byte	0x5
 1074 0056 00000000 		.4byte	.LASF6
 1075 005a 02       		.uleb128 0x2
 1076 005b 08       		.byte	0x8
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 29


 1077 005c 07       		.byte	0x7
 1078 005d EF010000 		.4byte	.LASF7
 1079 0061 03       		.uleb128 0x3
 1080 0062 04       		.byte	0x4
 1081 0063 05       		.byte	0x5
 1082 0064 696E7400 		.ascii	"int\000"
 1083 0068 02       		.uleb128 0x2
 1084 0069 04       		.byte	0x4
 1085 006a 07       		.byte	0x7
 1086 006b DA010000 		.4byte	.LASF8
 1087 006f 04       		.uleb128 0x4
 1088 0070 57020000 		.4byte	.LASF9
 1089 0074 02       		.byte	0x2
 1090 0075 4C       		.byte	0x4c
 1091 0076 30000000 		.4byte	0x30
 1092 007a 04       		.uleb128 0x4
 1093 007b 6C010000 		.4byte	.LASF10
 1094 007f 02       		.byte	0x2
 1095 0080 4D       		.byte	0x4d
 1096 0081 3E000000 		.4byte	0x3e
 1097 0085 02       		.uleb128 0x2
 1098 0086 04       		.byte	0x4
 1099 0087 04       		.byte	0x4
 1100 0088 B3000000 		.4byte	.LASF11
 1101 008c 02       		.uleb128 0x2
 1102 008d 08       		.byte	0x8
 1103 008e 04       		.byte	0x4
 1104 008f 45010000 		.4byte	.LASF12
 1105 0093 02       		.uleb128 0x2
 1106 0094 01       		.byte	0x1
 1107 0095 08       		.byte	0x8
 1108 0096 40020000 		.4byte	.LASF13
 1109 009a 05       		.uleb128 0x5
 1110 009b 01       		.byte	0x1
 1111 009c 54010000 		.4byte	.LASF14
 1112 00a0 01       		.byte	0x1
 1113 00a1 2D       		.byte	0x2d
 1114 00a2 01       		.byte	0x1
 1115 00a3 00000000 		.4byte	.LFB0
 1116 00a7 42000000 		.4byte	.LFE0
 1117 00ab 00000000 		.4byte	.LLST0
 1118 00af 05       		.uleb128 0x5
 1119 00b0 01       		.byte	0x1
 1120 00b1 9C000000 		.4byte	.LASF15
 1121 00b5 01       		.byte	0x1
 1122 00b6 47       		.byte	0x47
 1123 00b7 01       		.byte	0x1
 1124 00b8 00000000 		.4byte	.LFB1
 1125 00bc 3E000000 		.4byte	.LFE1
 1126 00c0 2B000000 		.4byte	.LLST1
 1127 00c4 06       		.uleb128 0x6
 1128 00c5 01       		.byte	0x1
 1129 00c6 F1020000 		.4byte	.LASF16
 1130 00ca 01       		.byte	0x1
 1131 00cb 9D       		.byte	0x9d
 1132 00cc 01       		.byte	0x1
 1133 00cd 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 30


 1134 00d1 52000000 		.4byte	.LFE2
 1135 00d5 56000000 		.4byte	.LLST2
 1136 00d9 EC000000 		.4byte	0xec
 1137 00dd 07       		.uleb128 0x7
 1138 00de 15000000 		.4byte	.LASF18
 1139 00e2 01       		.byte	0x1
 1140 00e3 9D       		.byte	0x9d
 1141 00e4 6F000000 		.4byte	0x6f
 1142 00e8 02       		.byte	0x2
 1143 00e9 91       		.byte	0x91
 1144 00ea 77       		.sleb128 -9
 1145 00eb 00       		.byte	0x0
 1146 00ec 06       		.uleb128 0x6
 1147 00ed 01       		.byte	0x1
 1148 00ee CC020000 		.4byte	.LASF17
 1149 00f2 01       		.byte	0x1
 1150 00f3 C1       		.byte	0xc1
 1151 00f4 01       		.byte	0x1
 1152 00f5 00000000 		.4byte	.LFB3
 1153 00f9 A8010000 		.4byte	.LFE3
 1154 00fd 8D000000 		.4byte	.LLST3
 1155 0101 4C010000 		.4byte	0x14c
 1156 0105 07       		.uleb128 0x7
 1157 0106 3A010000 		.4byte	.LASF19
 1158 010a 01       		.byte	0x1
 1159 010b C1       		.byte	0xc1
 1160 010c 7A000000 		.4byte	0x7a
 1161 0110 02       		.byte	0x2
 1162 0111 91       		.byte	0x91
 1163 0112 6E       		.sleb128 -18
 1164 0113 07       		.uleb128 0x7
 1165 0114 4C010000 		.4byte	.LASF20
 1166 0118 01       		.byte	0x1
 1167 0119 C1       		.byte	0xc1
 1168 011a 6F000000 		.4byte	0x6f
 1169 011e 02       		.byte	0x2
 1170 011f 91       		.byte	0x91
 1171 0120 6D       		.sleb128 -19
 1172 0121 08       		.uleb128 0x8
 1173 0122 0D010000 		.4byte	.LASF21
 1174 0126 01       		.byte	0x1
 1175 0127 C4       		.byte	0xc4
 1176 0128 6F000000 		.4byte	0x6f
 1177 012c 02       		.byte	0x2
 1178 012d 91       		.byte	0x91
 1179 012e 74       		.sleb128 -12
 1180 012f 08       		.uleb128 0x8
 1181 0130 E7010000 		.4byte	.LASF22
 1182 0134 01       		.byte	0x1
 1183 0135 C6       		.byte	0xc6
 1184 0136 6F000000 		.4byte	0x6f
 1185 013a 02       		.byte	0x2
 1186 013b 91       		.byte	0x91
 1187 013c 75       		.sleb128 -11
 1188 013d 08       		.uleb128 0x8
 1189 013e 1B000000 		.4byte	.LASF23
 1190 0142 01       		.byte	0x1
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 31


 1191 0143 C7       		.byte	0xc7
 1192 0144 7A000000 		.4byte	0x7a
 1193 0148 02       		.byte	0x2
 1194 0149 91       		.byte	0x91
 1195 014a 76       		.sleb128 -10
 1196 014b 00       		.byte	0x0
 1197 014c 09       		.uleb128 0x9
 1198 014d 01       		.byte	0x1
 1199 014e 4A000000 		.4byte	.LASF27
 1200 0152 01       		.byte	0x1
 1201 0153 2901     		.2byte	0x129
 1202 0155 01       		.byte	0x1
 1203 0156 7A000000 		.4byte	0x7a
 1204 015a 00000000 		.4byte	.LFB4
 1205 015e 18000000 		.4byte	.LFE4
 1206 0162 C4000000 		.4byte	.LLST4
 1207 0166 0A       		.uleb128 0xa
 1208 0167 01       		.byte	0x1
 1209 0168 06020000 		.4byte	.LASF24
 1210 016c 01       		.byte	0x1
 1211 016d 4C01     		.2byte	0x14c
 1212 016f 01       		.byte	0x1
 1213 0170 00000000 		.4byte	.LFB5
 1214 0174 3C000000 		.4byte	.LFE5
 1215 0178 EF000000 		.4byte	.LLST5
 1216 017c 90010000 		.4byte	0x190
 1217 0180 0B       		.uleb128 0xb
 1218 0181 28020000 		.4byte	.LASF25
 1219 0185 01       		.byte	0x1
 1220 0186 4C01     		.2byte	0x14c
 1221 0188 6F000000 		.4byte	0x6f
 1222 018c 02       		.byte	0x2
 1223 018d 91       		.byte	0x91
 1224 018e 77       		.sleb128 -9
 1225 018f 00       		.byte	0x0
 1226 0190 0A       		.uleb128 0xa
 1227 0191 01       		.byte	0x1
 1228 0192 5D020000 		.4byte	.LASF26
 1229 0196 01       		.byte	0x1
 1230 0197 6F01     		.2byte	0x16f
 1231 0199 01       		.byte	0x1
 1232 019a 00000000 		.4byte	.LFB6
 1233 019e 3E000000 		.4byte	.LFE6
 1234 01a2 26010000 		.4byte	.LLST6
 1235 01a6 BA010000 		.4byte	0x1ba
 1236 01aa 0B       		.uleb128 0xb
 1237 01ab 28020000 		.4byte	.LASF25
 1238 01af 01       		.byte	0x1
 1239 01b0 6F01     		.2byte	0x16f
 1240 01b2 6F000000 		.4byte	0x6f
 1241 01b6 02       		.byte	0x2
 1242 01b7 91       		.byte	0x91
 1243 01b8 77       		.sleb128 -9
 1244 01b9 00       		.byte	0x0
 1245 01ba 09       		.uleb128 0x9
 1246 01bb 01       		.byte	0x1
 1247 01bc DD000000 		.4byte	.LASF28
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 32


 1248 01c0 01       		.byte	0x1
 1249 01c1 8401     		.2byte	0x184
 1250 01c3 01       		.byte	0x1
 1251 01c4 6F000000 		.4byte	0x6f
 1252 01c8 00000000 		.4byte	.LFB7
 1253 01cc 1C000000 		.4byte	.LFE7
 1254 01d0 5D010000 		.4byte	.LLST7
 1255 01d4 0A       		.uleb128 0xa
 1256 01d5 01       		.byte	0x1
 1257 01d6 26000000 		.4byte	.LASF29
 1258 01da 01       		.byte	0x1
 1259 01db A301     		.2byte	0x1a3
 1260 01dd 01       		.byte	0x1
 1261 01de 00000000 		.4byte	.LFB8
 1262 01e2 FE000000 		.4byte	.LFE8
 1263 01e6 88010000 		.4byte	.LLST8
 1264 01ea 1C020000 		.4byte	0x21c
 1265 01ee 0B       		.uleb128 0xb
 1266 01ef AD020000 		.4byte	.LASF30
 1267 01f3 01       		.byte	0x1
 1268 01f4 A301     		.2byte	0x1a3
 1269 01f6 6F000000 		.4byte	0x6f
 1270 01fa 02       		.byte	0x2
 1271 01fb 91       		.byte	0x91
 1272 01fc 6F       		.sleb128 -17
 1273 01fd 0C       		.uleb128 0xc
 1274 01fe 45020000 		.4byte	.LASF31
 1275 0202 01       		.byte	0x1
 1276 0203 A501     		.2byte	0x1a5
 1277 0205 7A000000 		.4byte	0x7a
 1278 0209 02       		.byte	0x2
 1279 020a 91       		.byte	0x91
 1280 020b 74       		.sleb128 -12
 1281 020c 0C       		.uleb128 0xc
 1282 020d 0E000000 		.4byte	.LASF32
 1283 0211 01       		.byte	0x1
 1284 0212 A601     		.2byte	0x1a6
 1285 0214 6F000000 		.4byte	0x6f
 1286 0218 02       		.byte	0x2
 1287 0219 91       		.byte	0x91
 1288 021a 77       		.sleb128 -9
 1289 021b 00       		.byte	0x0
 1290 021c 09       		.uleb128 0x9
 1291 021d 01       		.byte	0x1
 1292 021e B9000000 		.4byte	.LASF33
 1293 0222 01       		.byte	0x1
 1294 0223 D001     		.2byte	0x1d0
 1295 0225 01       		.byte	0x1
 1296 0226 6F000000 		.4byte	0x6f
 1297 022a 00000000 		.4byte	.LFB9
 1298 022e 1C000000 		.4byte	.LFE9
 1299 0232 BF010000 		.4byte	.LLST9
 1300 0236 0A       		.uleb128 0xa
 1301 0237 01       		.byte	0x1
 1302 0238 81020000 		.4byte	.LASF34
 1303 023c 01       		.byte	0x1
 1304 023d EC01     		.2byte	0x1ec
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 33


 1305 023f 01       		.byte	0x1
 1306 0240 00000000 		.4byte	.LFB10
 1307 0244 24000000 		.4byte	.LFE10
 1308 0248 EA010000 		.4byte	.LLST10
 1309 024c 60020000 		.4byte	0x260
 1310 0250 0B       		.uleb128 0xb
 1311 0251 B7020000 		.4byte	.LASF35
 1312 0255 01       		.byte	0x1
 1313 0256 EC01     		.2byte	0x1ec
 1314 0258 6F000000 		.4byte	0x6f
 1315 025c 02       		.byte	0x2
 1316 025d 91       		.byte	0x91
 1317 025e 77       		.sleb128 -9
 1318 025f 00       		.byte	0x0
 1319 0260 09       		.uleb128 0x9
 1320 0261 01       		.byte	0x1
 1321 0262 73010000 		.4byte	.LASF36
 1322 0266 01       		.byte	0x1
 1323 0267 0102     		.2byte	0x201
 1324 0269 01       		.byte	0x1
 1325 026a 6F000000 		.4byte	0x6f
 1326 026e 00000000 		.4byte	.LFB11
 1327 0272 1C000000 		.4byte	.LFE11
 1328 0276 21020000 		.4byte	.LLST11
 1329 027a 00       		.byte	0x0
 1330              		.section	.debug_abbrev
 1331 0000 01       		.uleb128 0x1
 1332 0001 11       		.uleb128 0x11
 1333 0002 01       		.byte	0x1
 1334 0003 25       		.uleb128 0x25
 1335 0004 0E       		.uleb128 0xe
 1336 0005 13       		.uleb128 0x13
 1337 0006 0B       		.uleb128 0xb
 1338 0007 03       		.uleb128 0x3
 1339 0008 0E       		.uleb128 0xe
 1340 0009 1B       		.uleb128 0x1b
 1341 000a 0E       		.uleb128 0xe
 1342 000b 11       		.uleb128 0x11
 1343 000c 01       		.uleb128 0x1
 1344 000d 52       		.uleb128 0x52
 1345 000e 01       		.uleb128 0x1
 1346 000f 55       		.uleb128 0x55
 1347 0010 06       		.uleb128 0x6
 1348 0011 10       		.uleb128 0x10
 1349 0012 06       		.uleb128 0x6
 1350 0013 00       		.byte	0x0
 1351 0014 00       		.byte	0x0
 1352 0015 02       		.uleb128 0x2
 1353 0016 24       		.uleb128 0x24
 1354 0017 00       		.byte	0x0
 1355 0018 0B       		.uleb128 0xb
 1356 0019 0B       		.uleb128 0xb
 1357 001a 3E       		.uleb128 0x3e
 1358 001b 0B       		.uleb128 0xb
 1359 001c 03       		.uleb128 0x3
 1360 001d 0E       		.uleb128 0xe
 1361 001e 00       		.byte	0x0
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 34


 1362 001f 00       		.byte	0x0
 1363 0020 03       		.uleb128 0x3
 1364 0021 24       		.uleb128 0x24
 1365 0022 00       		.byte	0x0
 1366 0023 0B       		.uleb128 0xb
 1367 0024 0B       		.uleb128 0xb
 1368 0025 3E       		.uleb128 0x3e
 1369 0026 0B       		.uleb128 0xb
 1370 0027 03       		.uleb128 0x3
 1371 0028 08       		.uleb128 0x8
 1372 0029 00       		.byte	0x0
 1373 002a 00       		.byte	0x0
 1374 002b 04       		.uleb128 0x4
 1375 002c 16       		.uleb128 0x16
 1376 002d 00       		.byte	0x0
 1377 002e 03       		.uleb128 0x3
 1378 002f 0E       		.uleb128 0xe
 1379 0030 3A       		.uleb128 0x3a
 1380 0031 0B       		.uleb128 0xb
 1381 0032 3B       		.uleb128 0x3b
 1382 0033 0B       		.uleb128 0xb
 1383 0034 49       		.uleb128 0x49
 1384 0035 13       		.uleb128 0x13
 1385 0036 00       		.byte	0x0
 1386 0037 00       		.byte	0x0
 1387 0038 05       		.uleb128 0x5
 1388 0039 2E       		.uleb128 0x2e
 1389 003a 00       		.byte	0x0
 1390 003b 3F       		.uleb128 0x3f
 1391 003c 0C       		.uleb128 0xc
 1392 003d 03       		.uleb128 0x3
 1393 003e 0E       		.uleb128 0xe
 1394 003f 3A       		.uleb128 0x3a
 1395 0040 0B       		.uleb128 0xb
 1396 0041 3B       		.uleb128 0x3b
 1397 0042 0B       		.uleb128 0xb
 1398 0043 27       		.uleb128 0x27
 1399 0044 0C       		.uleb128 0xc
 1400 0045 11       		.uleb128 0x11
 1401 0046 01       		.uleb128 0x1
 1402 0047 12       		.uleb128 0x12
 1403 0048 01       		.uleb128 0x1
 1404 0049 40       		.uleb128 0x40
 1405 004a 06       		.uleb128 0x6
 1406 004b 00       		.byte	0x0
 1407 004c 00       		.byte	0x0
 1408 004d 06       		.uleb128 0x6
 1409 004e 2E       		.uleb128 0x2e
 1410 004f 01       		.byte	0x1
 1411 0050 3F       		.uleb128 0x3f
 1412 0051 0C       		.uleb128 0xc
 1413 0052 03       		.uleb128 0x3
 1414 0053 0E       		.uleb128 0xe
 1415 0054 3A       		.uleb128 0x3a
 1416 0055 0B       		.uleb128 0xb
 1417 0056 3B       		.uleb128 0x3b
 1418 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 35


 1419 0058 27       		.uleb128 0x27
 1420 0059 0C       		.uleb128 0xc
 1421 005a 11       		.uleb128 0x11
 1422 005b 01       		.uleb128 0x1
 1423 005c 12       		.uleb128 0x12
 1424 005d 01       		.uleb128 0x1
 1425 005e 40       		.uleb128 0x40
 1426 005f 06       		.uleb128 0x6
 1427 0060 01       		.uleb128 0x1
 1428 0061 13       		.uleb128 0x13
 1429 0062 00       		.byte	0x0
 1430 0063 00       		.byte	0x0
 1431 0064 07       		.uleb128 0x7
 1432 0065 05       		.uleb128 0x5
 1433 0066 00       		.byte	0x0
 1434 0067 03       		.uleb128 0x3
 1435 0068 0E       		.uleb128 0xe
 1436 0069 3A       		.uleb128 0x3a
 1437 006a 0B       		.uleb128 0xb
 1438 006b 3B       		.uleb128 0x3b
 1439 006c 0B       		.uleb128 0xb
 1440 006d 49       		.uleb128 0x49
 1441 006e 13       		.uleb128 0x13
 1442 006f 02       		.uleb128 0x2
 1443 0070 0A       		.uleb128 0xa
 1444 0071 00       		.byte	0x0
 1445 0072 00       		.byte	0x0
 1446 0073 08       		.uleb128 0x8
 1447 0074 34       		.uleb128 0x34
 1448 0075 00       		.byte	0x0
 1449 0076 03       		.uleb128 0x3
 1450 0077 0E       		.uleb128 0xe
 1451 0078 3A       		.uleb128 0x3a
 1452 0079 0B       		.uleb128 0xb
 1453 007a 3B       		.uleb128 0x3b
 1454 007b 0B       		.uleb128 0xb
 1455 007c 49       		.uleb128 0x49
 1456 007d 13       		.uleb128 0x13
 1457 007e 02       		.uleb128 0x2
 1458 007f 0A       		.uleb128 0xa
 1459 0080 00       		.byte	0x0
 1460 0081 00       		.byte	0x0
 1461 0082 09       		.uleb128 0x9
 1462 0083 2E       		.uleb128 0x2e
 1463 0084 00       		.byte	0x0
 1464 0085 3F       		.uleb128 0x3f
 1465 0086 0C       		.uleb128 0xc
 1466 0087 03       		.uleb128 0x3
 1467 0088 0E       		.uleb128 0xe
 1468 0089 3A       		.uleb128 0x3a
 1469 008a 0B       		.uleb128 0xb
 1470 008b 3B       		.uleb128 0x3b
 1471 008c 05       		.uleb128 0x5
 1472 008d 27       		.uleb128 0x27
 1473 008e 0C       		.uleb128 0xc
 1474 008f 49       		.uleb128 0x49
 1475 0090 13       		.uleb128 0x13
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 36


 1476 0091 11       		.uleb128 0x11
 1477 0092 01       		.uleb128 0x1
 1478 0093 12       		.uleb128 0x12
 1479 0094 01       		.uleb128 0x1
 1480 0095 40       		.uleb128 0x40
 1481 0096 06       		.uleb128 0x6
 1482 0097 00       		.byte	0x0
 1483 0098 00       		.byte	0x0
 1484 0099 0A       		.uleb128 0xa
 1485 009a 2E       		.uleb128 0x2e
 1486 009b 01       		.byte	0x1
 1487 009c 3F       		.uleb128 0x3f
 1488 009d 0C       		.uleb128 0xc
 1489 009e 03       		.uleb128 0x3
 1490 009f 0E       		.uleb128 0xe
 1491 00a0 3A       		.uleb128 0x3a
 1492 00a1 0B       		.uleb128 0xb
 1493 00a2 3B       		.uleb128 0x3b
 1494 00a3 05       		.uleb128 0x5
 1495 00a4 27       		.uleb128 0x27
 1496 00a5 0C       		.uleb128 0xc
 1497 00a6 11       		.uleb128 0x11
 1498 00a7 01       		.uleb128 0x1
 1499 00a8 12       		.uleb128 0x12
 1500 00a9 01       		.uleb128 0x1
 1501 00aa 40       		.uleb128 0x40
 1502 00ab 06       		.uleb128 0x6
 1503 00ac 01       		.uleb128 0x1
 1504 00ad 13       		.uleb128 0x13
 1505 00ae 00       		.byte	0x0
 1506 00af 00       		.byte	0x0
 1507 00b0 0B       		.uleb128 0xb
 1508 00b1 05       		.uleb128 0x5
 1509 00b2 00       		.byte	0x0
 1510 00b3 03       		.uleb128 0x3
 1511 00b4 0E       		.uleb128 0xe
 1512 00b5 3A       		.uleb128 0x3a
 1513 00b6 0B       		.uleb128 0xb
 1514 00b7 3B       		.uleb128 0x3b
 1515 00b8 05       		.uleb128 0x5
 1516 00b9 49       		.uleb128 0x49
 1517 00ba 13       		.uleb128 0x13
 1518 00bb 02       		.uleb128 0x2
 1519 00bc 0A       		.uleb128 0xa
 1520 00bd 00       		.byte	0x0
 1521 00be 00       		.byte	0x0
 1522 00bf 0C       		.uleb128 0xc
 1523 00c0 34       		.uleb128 0x34
 1524 00c1 00       		.byte	0x0
 1525 00c2 03       		.uleb128 0x3
 1526 00c3 0E       		.uleb128 0xe
 1527 00c4 3A       		.uleb128 0x3a
 1528 00c5 0B       		.uleb128 0xb
 1529 00c6 3B       		.uleb128 0x3b
 1530 00c7 05       		.uleb128 0x5
 1531 00c8 49       		.uleb128 0x49
 1532 00c9 13       		.uleb128 0x13
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 37


 1533 00ca 02       		.uleb128 0x2
 1534 00cb 0A       		.uleb128 0xa
 1535 00cc 00       		.byte	0x0
 1536 00cd 00       		.byte	0x0
 1537 00ce 00       		.byte	0x0
 1538              		.section	.debug_pubnames,"",%progbits
 1539 0000 CC010000 		.4byte	0x1cc
 1540 0004 0200     		.2byte	0x2
 1541 0006 00000000 		.4byte	.Ldebug_info0
 1542 000a 7B020000 		.4byte	0x27b
 1543 000e 9A000000 		.4byte	0x9a
 1544 0012 4144435F 		.ascii	"ADC_SAR_I_theACLK_Start\000"
 1544      5341525F 
 1544      495F7468 
 1544      6541434C 
 1544      4B5F5374 
 1545 002a AF000000 		.4byte	0xaf
 1546 002e 4144435F 		.ascii	"ADC_SAR_I_theACLK_Stop\000"
 1546      5341525F 
 1546      495F7468 
 1546      6541434C 
 1546      4B5F5374 
 1547 0045 C4000000 		.4byte	0xc4
 1548 0049 4144435F 		.ascii	"ADC_SAR_I_theACLK_StandbyPower\000"
 1548      5341525F 
 1548      495F7468 
 1548      6541434C 
 1548      4B5F5374 
 1549 0068 EC000000 		.4byte	0xec
 1550 006c 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetDividerRegister\000"
 1550      5341525F 
 1550      495F7468 
 1550      6541434C 
 1550      4B5F5365 
 1551 0091 4C010000 		.4byte	0x14c
 1552 0095 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetDividerRegister\000"
 1552      5341525F 
 1552      495F7468 
 1552      6541434C 
 1552      4B5F4765 
 1553 00ba 66010000 		.4byte	0x166
 1554 00be 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetModeRegister\000"
 1554      5341525F 
 1554      495F7468 
 1554      6541434C 
 1554      4B5F5365 
 1555 00e0 90010000 		.4byte	0x190
 1556 00e4 4144435F 		.ascii	"ADC_SAR_I_theACLK_ClearModeRegister\000"
 1556      5341525F 
 1556      495F7468 
 1556      6541434C 
 1556      4B5F436C 
 1557 0108 BA010000 		.4byte	0x1ba
 1558 010c 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetModeRegister\000"
 1558      5341525F 
 1558      495F7468 
 1558      6541434C 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 38


 1558      4B5F4765 
 1559 012e D4010000 		.4byte	0x1d4
 1560 0132 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetSourceRegister\000"
 1560      5341525F 
 1560      495F7468 
 1560      6541434C 
 1560      4B5F5365 
 1561 0156 1C020000 		.4byte	0x21c
 1562 015a 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetSourceRegister\000"
 1562      5341525F 
 1562      495F7468 
 1562      6541434C 
 1562      4B5F4765 
 1563 017e 36020000 		.4byte	0x236
 1564 0182 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetPhaseRegister\000"
 1564      5341525F 
 1564      495F7468 
 1564      6541434C 
 1564      4B5F5365 
 1565 01a5 60020000 		.4byte	0x260
 1566 01a9 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetPhaseRegister\000"
 1566      5341525F 
 1566      495F7468 
 1566      6541434C 
 1566      4B5F4765 
 1567 01cc 00000000 		.4byte	0x0
 1568              		.section	.debug_aranges,"",%progbits
 1569 0000 74000000 		.4byte	0x74
 1570 0004 0200     		.2byte	0x2
 1571 0006 00000000 		.4byte	.Ldebug_info0
 1572 000a 04       		.byte	0x4
 1573 000b 00       		.byte	0x0
 1574 000c 0000     		.2byte	0x0
 1575 000e 0000     		.2byte	0x0
 1576 0010 00000000 		.4byte	.LFB0
 1577 0014 42000000 		.4byte	.LFE0-.LFB0
 1578 0018 00000000 		.4byte	.LFB1
 1579 001c 3E000000 		.4byte	.LFE1-.LFB1
 1580 0020 00000000 		.4byte	.LFB2
 1581 0024 52000000 		.4byte	.LFE2-.LFB2
 1582 0028 00000000 		.4byte	.LFB3
 1583 002c A8010000 		.4byte	.LFE3-.LFB3
 1584 0030 00000000 		.4byte	.LFB4
 1585 0034 18000000 		.4byte	.LFE4-.LFB4
 1586 0038 00000000 		.4byte	.LFB5
 1587 003c 3C000000 		.4byte	.LFE5-.LFB5
 1588 0040 00000000 		.4byte	.LFB6
 1589 0044 3E000000 		.4byte	.LFE6-.LFB6
 1590 0048 00000000 		.4byte	.LFB7
 1591 004c 1C000000 		.4byte	.LFE7-.LFB7
 1592 0050 00000000 		.4byte	.LFB8
 1593 0054 FE000000 		.4byte	.LFE8-.LFB8
 1594 0058 00000000 		.4byte	.LFB9
 1595 005c 1C000000 		.4byte	.LFE9-.LFB9
 1596 0060 00000000 		.4byte	.LFB10
 1597 0064 24000000 		.4byte	.LFE10-.LFB10
 1598 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 39


 1599 006c 1C000000 		.4byte	.LFE11-.LFB11
 1600 0070 00000000 		.4byte	0x0
 1601 0074 00000000 		.4byte	0x0
 1602              		.section	.debug_ranges,"",%progbits
 1603              	.Ldebug_ranges0:
 1604 0000 00000000 		.4byte	.Ltext0
 1605 0004 00000000 		.4byte	.Letext0
 1606 0008 00000000 		.4byte	.LFB0
 1607 000c 42000000 		.4byte	.LFE0
 1608 0010 00000000 		.4byte	.LFB1
 1609 0014 3E000000 		.4byte	.LFE1
 1610 0018 00000000 		.4byte	.LFB2
 1611 001c 52000000 		.4byte	.LFE2
 1612 0020 00000000 		.4byte	.LFB3
 1613 0024 A8010000 		.4byte	.LFE3
 1614 0028 00000000 		.4byte	.LFB4
 1615 002c 18000000 		.4byte	.LFE4
 1616 0030 00000000 		.4byte	.LFB5
 1617 0034 3C000000 		.4byte	.LFE5
 1618 0038 00000000 		.4byte	.LFB6
 1619 003c 3E000000 		.4byte	.LFE6
 1620 0040 00000000 		.4byte	.LFB7
 1621 0044 1C000000 		.4byte	.LFE7
 1622 0048 00000000 		.4byte	.LFB8
 1623 004c FE000000 		.4byte	.LFE8
 1624 0050 00000000 		.4byte	.LFB9
 1625 0054 1C000000 		.4byte	.LFE9
 1626 0058 00000000 		.4byte	.LFB10
 1627 005c 24000000 		.4byte	.LFE10
 1628 0060 00000000 		.4byte	.LFB11
 1629 0064 1C000000 		.4byte	.LFE11
 1630 0068 00000000 		.4byte	0x0
 1631 006c 00000000 		.4byte	0x0
 1632              		.section	.debug_str,"MS",%progbits,1
 1633              	.LASF6:
 1634 0000 6C6F6E67 		.ascii	"long long int\000"
 1634      206C6F6E 
 1634      6720696E 
 1634      7400
 1635              	.LASF32:
 1636 000e 6F6C6453 		.ascii	"oldSrc\000"
 1636      726300
 1637              	.LASF18:
 1638 0015 73746174 		.ascii	"state\000"
 1638      6500
 1639              	.LASF23:
 1640 001b 6F6C6444 		.ascii	"oldDivider\000"
 1640      69766964 
 1640      657200
 1641              	.LASF29:
 1642 0026 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetSourceRegister\000"
 1642      5341525F 
 1642      495F7468 
 1642      6541434C 
 1642      4B5F5365 
 1643              	.LASF27:
 1644 004a 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetDividerRegister\000"
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 40


 1644      5341525F 
 1644      495F7468 
 1644      6541434C 
 1644      4B5F4765 
 1645              	.LASF38:
 1646 006f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_I_theACLK.c\000"
 1646      6E657261 
 1646      7465645F 
 1646      536F7572 
 1646      63655C50 
 1647              	.LASF15:
 1648 009c 4144435F 		.ascii	"ADC_SAR_I_theACLK_Stop\000"
 1648      5341525F 
 1648      495F7468 
 1648      6541434C 
 1648      4B5F5374 
 1649              	.LASF11:
 1650 00b3 666C6F61 		.ascii	"float\000"
 1650      7400
 1651              	.LASF33:
 1652 00b9 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetSourceRegister\000"
 1652      5341525F 
 1652      495F7468 
 1652      6541434C 
 1652      4B5F4765 
 1653              	.LASF28:
 1654 00dd 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetModeRegister\000"
 1654      5341525F 
 1654      495F7468 
 1654      6541434C 
 1654      4B5F4765 
 1655              	.LASF1:
 1656 00ff 756E7369 		.ascii	"unsigned char\000"
 1656      676E6564 
 1656      20636861 
 1656      7200
 1657              	.LASF21:
 1658 010d 656E6162 		.ascii	"enabled\000"
 1658      6C656400 
 1659              	.LASF5:
 1660 0115 6C6F6E67 		.ascii	"long unsigned int\000"
 1660      20756E73 
 1660      69676E65 
 1660      6420696E 
 1660      7400
 1661              	.LASF3:
 1662 0127 73686F72 		.ascii	"short unsigned int\000"
 1662      7420756E 
 1662      7369676E 
 1662      65642069 
 1662      6E7400
 1663              	.LASF19:
 1664 013a 636C6B44 		.ascii	"clkDivider\000"
 1664      69766964 
 1664      657200
 1665              	.LASF12:
 1666 0145 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 41


 1666      6C6500
 1667              	.LASF20:
 1668 014c 72657374 		.ascii	"restart\000"
 1668      61727400 
 1669              	.LASF14:
 1670 0154 4144435F 		.ascii	"ADC_SAR_I_theACLK_Start\000"
 1670      5341525F 
 1670      495F7468 
 1670      6541434C 
 1670      4B5F5374 
 1671              	.LASF10:
 1672 016c 75696E74 		.ascii	"uint16\000"
 1672      313600
 1673              	.LASF36:
 1674 0173 4144435F 		.ascii	"ADC_SAR_I_theACLK_GetPhaseRegister\000"
 1674      5341525F 
 1674      495F7468 
 1674      6541434C 
 1674      4B5F4765 
 1675              	.LASF39:
 1676 0196 433A5C55 		.ascii	"C:\\Users\\hoangp\\Documents\\GitHub\\EE542\\firmwa"
 1676      73657273 
 1676      5C686F61 
 1676      6E67705C 
 1676      446F6375 
 1677 01c3 72655C69 		.ascii	"re\\invert\\invert.cydsn\000"
 1677      6E766572 
 1677      745C696E 
 1677      76657274 
 1677      2E637964 
 1678              	.LASF8:
 1679 01da 756E7369 		.ascii	"unsigned int\000"
 1679      676E6564 
 1679      20696E74 
 1679      00
 1680              	.LASF22:
 1681 01e7 63757272 		.ascii	"currSrc\000"
 1681      53726300 
 1682              	.LASF7:
 1683 01ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 1683      206C6F6E 
 1683      6720756E 
 1683      7369676E 
 1683      65642069 
 1684              	.LASF24:
 1685 0206 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetModeRegister\000"
 1685      5341525F 
 1685      495F7468 
 1685      6541434C 
 1685      4B5F5365 
 1686              	.LASF25:
 1687 0228 6D6F6465 		.ascii	"modeBitMask\000"
 1687      4269744D 
 1687      61736B00 
 1688              	.LASF37:
 1689 0234 474E5520 		.ascii	"GNU C 4.4.1\000"
 1689      4320342E 
ARM GAS  C:\Users\hoangp\AppData\Local\Temp\ccbo1DN8.s 			page 42


 1689      342E3100 
 1690              	.LASF13:
 1691 0240 63686172 		.ascii	"char\000"
 1691      00
 1692              	.LASF31:
 1693 0245 63757272 		.ascii	"currDiv\000"
 1693      44697600 
 1694              	.LASF2:
 1695 024d 73686F72 		.ascii	"short int\000"
 1695      7420696E 
 1695      7400
 1696              	.LASF9:
 1697 0257 75696E74 		.ascii	"uint8\000"
 1697      3800
 1698              	.LASF26:
 1699 025d 4144435F 		.ascii	"ADC_SAR_I_theACLK_ClearModeRegister\000"
 1699      5341525F 
 1699      495F7468 
 1699      6541434C 
 1699      4B5F436C 
 1700              	.LASF34:
 1701 0281 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetPhaseRegister\000"
 1701      5341525F 
 1701      495F7468 
 1701      6541434C 
 1701      4B5F5365 
 1702              	.LASF4:
 1703 02a4 6C6F6E67 		.ascii	"long int\000"
 1703      20696E74 
 1703      00
 1704              	.LASF30:
 1705 02ad 636C6B53 		.ascii	"clkSource\000"
 1705      6F757263 
 1705      6500
 1706              	.LASF35:
 1707 02b7 636C6B50 		.ascii	"clkPhase\000"
 1707      68617365 
 1707      00
 1708              	.LASF0:
 1709 02c0 7369676E 		.ascii	"signed char\000"
 1709      65642063 
 1709      68617200 
 1710              	.LASF17:
 1711 02cc 4144435F 		.ascii	"ADC_SAR_I_theACLK_SetDividerRegister\000"
 1711      5341525F 
 1711      495F7468 
 1711      6541434C 
 1711      4B5F5365 
 1712              	.LASF16:
 1713 02f1 4144435F 		.ascii	"ADC_SAR_I_theACLK_StandbyPower\000"
 1713      5341525F 
 1713      495F7468 
 1713      6541434C 
 1713      4B5F5374 
 1714              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
